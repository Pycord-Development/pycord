# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2021, Rapptz & 2021-present, Pycord Development
# This file is distributed under the same license as the Pycord package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Pycord 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-12 14:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../ext/commands/api.rst:4 4725cf896a744071a08446633365c2de
msgid "API Reference"
msgstr ""

#: ../../ext/commands/api.rst:6 80776e20ff0c4322aace15ec8c0d27bd
msgid ""
"The following section outlines the API of Pycord's prefixed command "
"extension module."
msgstr ""

#: ../../ext/commands/api.rst:10 81068d91f0c1448f8317c7dfcba703f9
msgid ""
"Using prefixed commands in guilds requires "
":attr:`Intents.message_content` to be enabled."
msgstr ""

#: ../../ext/commands/api.rst:16 17dbf825697944a89c41e5c4af4e2602
msgid "Bots"
msgstr ""

#: ../../ext/commands/api.rst:19 a29e93a50d3b476bbe0cccd138a4d696
msgid "Bot"
msgstr ""

#: b469b90375a14a8b986f7b1b8a67a72d discord.ext.commands.bot.Bot:1 of
msgid "Represents a discord bot."
msgstr ""

#: 4d17f20fad654fb4babd30e58d852b6c discord.ext.commands.bot.Bot:3 of
msgid ""
"This class is a subclass of :class:`discord.Bot` and as a result anything"
" that you can do with a :class:`discord.Bot` you can do with this bot."
msgstr ""

#: 7d6d6af71a314aceb2ec965318f05bc3 discord.ext.commands.bot.Bot:7 of
msgid ""
"This class also subclasses :class:`.GroupMixin` to provide the "
"functionality to manage commands."
msgstr ""

#: 11f3decf6af545119f242d17e4ea02d9 discord.ext.commands.bot.Bot:12 of
msgid ""
"Using prefixed commands requires :attr:`discord.Intents.message_content` "
"to be enabled."
msgstr ""

#: 1197743250b64d25b9534197e3b19dd9 discord.ext.commands.bot.Bot:16 of
msgid ""
"The command prefix is what the message content must contain initially to "
"have a command invoked. This prefix could either be a string to indicate "
"what the prefix should be, or a callable that takes in the bot as its "
"first parameter and :class:`discord.Message` as its second parameter and "
"returns the prefix. This is to facilitate \"dynamic\" command prefixes. "
"This callable can be either a regular function or a coroutine."
msgstr ""

#: discord.ext.commands.bot.Bot:24 fd93e34dd8834b20bc344422cf70e68a of
msgid ""
"An empty string as the prefix always matches, enabling prefix-less "
"command invocation. While this may be useful in DMs it should be avoided "
"in servers, as it's likely to cause performance issues and unintended "
"command invocations."
msgstr ""

#: 78f9a5eccd1e4f9eb8008ffe838f1c23 discord.ext.commands.bot.Bot:29 of
msgid ""
"The command prefix could also be an iterable of strings indicating that "
"multiple checks for the prefix should be used and the first one to match "
"will be the invocation prefix. You can get this prefix via "
":attr:`.Context.prefix`. To avoid confusion empty iterables are not "
"allowed."
msgstr ""

#: b786a1a7cee643dabc413b882de33d09 discord.ext.commands.bot.Bot:37 of
msgid ""
"When passing multiple prefixes be careful to not pass a prefix that "
"matches a longer prefix occurring later in the sequence.  For example, if"
" the command prefix is ``('!', '!?')``  the ``'!?'`` prefix will never be"
" matched to any message as the previous one matches messages starting "
"with ``!?``. This is especially important when passing an empty string, "
"it should always be last as no prefix after it will be matched."
msgstr ""

#: c98aa001a62745c3a90ffa2e14f5a30a discord.ext.commands.bot.Bot:47 of
msgid ""
"Whether the commands should be case-insensitive. Defaults to ``False``. "
"This attribute does not carry over to groups. You must set it to every "
"group if you require group commands to be case-insensitive as well."
msgstr ""

#: 108b348c252b4fc789b680c4989870da 1448a02e23c546f4aa4a5072438e16fb
#: 49345f7753d447cf9094bb2cdecd0929 54a780ec9c5b4270b61cb1c40f28ae63
#: 6704eed5f747450d8dfdeaeec60cbbd4 6d8c11bb47b2404baadf295e73360b7c
#: 723b2bd90f97499ba5dc2f350d048982 8ea34deeeeef47bea5ed8bf17d465dd5
#: 99c61ff23a9f43c1a74a3608cf5bc810 b010c0c3b0fa454a90311a3446f9c49b
#: bb7a8a01292b449d92d4b82befbce7c0 c68d85257a5e4af6bd219a6159648c77
#: d6182d5081b04a73b45cdab6770e7195 de6c28dbc55944cba7b85d7aa7fcbd63
#: discord.cog.CogMeta discord.ext.commands.Bot.store_url
#: discord.ext.commands.bot.Bot discord.ext.commands.context.Context
#: discord.ext.commands.converter.clean_content
#: discord.ext.commands.cooldowns.Cooldown discord.ext.commands.core.Command
#: discord.ext.commands.core.Group discord.ext.commands.core.GroupMixin
#: discord.ext.commands.errors.BadBoolArgument
#: discord.ext.commands.errors.BadColourArgument
#: discord.ext.commands.errors.BadFlagArgument
#: discord.ext.commands.errors.BadLiteralArgument
#: discord.ext.commands.errors.BadUnionArgument
#: discord.ext.commands.errors.BotMissingAnyRole
#: discord.ext.commands.errors.BotMissingPermissions
#: discord.ext.commands.errors.BotMissingRole
#: discord.ext.commands.errors.ChannelNotFound
#: discord.ext.commands.errors.ChannelNotReadable
#: discord.ext.commands.errors.CheckAnyFailure
#: discord.ext.commands.errors.CommandInvokeError
#: discord.ext.commands.errors.CommandOnCooldown
#: discord.ext.commands.errors.CommandRegistrationError
#: discord.ext.commands.errors.ConversionError
#: discord.ext.commands.errors.EmojiNotFound
#: discord.ext.commands.errors.ExpectedClosingQuoteError
#: discord.ext.commands.errors.GuildNotFound
#: discord.ext.commands.errors.GuildStickerNotFound
#: discord.ext.commands.errors.InvalidEndOfQuotedStringError
#: discord.ext.commands.errors.MaxConcurrencyReached
#: discord.ext.commands.errors.MemberNotFound
#: discord.ext.commands.errors.MessageNotFound
#: discord.ext.commands.errors.MissingAnyRole
#: discord.ext.commands.errors.MissingFlagArgument
#: discord.ext.commands.errors.MissingPermissions
#: discord.ext.commands.errors.MissingRequiredArgument
#: discord.ext.commands.errors.MissingRequiredFlag
#: discord.ext.commands.errors.MissingRole
#: discord.ext.commands.errors.PartialEmojiConversionFailure
#: discord.ext.commands.errors.RoleNotFound
#: discord.ext.commands.errors.ThreadNotFound
#: discord.ext.commands.errors.TooManyFlags
#: discord.ext.commands.errors.UnexpectedQuoteError
#: discord.ext.commands.errors.UserNotFound discord.ext.commands.flags.Flag
#: discord.ext.commands.help.DefaultHelpCommand
#: discord.ext.commands.help.HelpCommand
#: discord.ext.commands.help.MinimalHelpCommand
#: discord.ext.commands.help.Paginator e0d28de49a3749f3948e2f460a2bc193
#: e20543c5f090466484011ef7bf9cb1c9 e81e864ce6e74c53a1da0ea0da311d4b
#: ed2d367aaec844adb55fb898bbffac16 f147a85e13784370a831501af464a220 of
msgid "type"
msgstr ""

#: 028c17ce435547ffae49bfe544b27746 276711c2a624419c9122929d2b0cdce4
#: 8eca1380293a4e09adb2fe3078136d93 af2f1296905749558682b61c1f7363ae
#: discord.abc.Messageable.can_send:4 discord.bot.BotBase.is_owner:18
#: discord.ext.commands.bot.Bot:51 discord.ext.commands.bot.Bot:69
#: discord.ext.commands.context.Context:97
#: discord.ext.commands.converter.clean_content:10
#: discord.ext.commands.converter.clean_content:16
#: discord.ext.commands.converter.clean_content:22
#: discord.ext.commands.converter.clean_content:30
#: discord.ext.commands.core.Command:49 discord.ext.commands.core.Command:86
#: discord.ext.commands.core.Command:97 discord.ext.commands.core.Command:112
#: discord.ext.commands.core.Command:121 discord.ext.commands.core.Command:129
#: discord.ext.commands.core.Command.can_run:15
#: discord.ext.commands.core.Command.is_on_cooldown:8
#: discord.ext.commands.core.Group:18 discord.ext.commands.core.Group:25
#: discord.ext.commands.core.GroupMixin:15
#: discord.ext.commands.errors.CommandRegistrationError:18
#: discord.ext.commands.flags.Flag:48
#: discord.ext.commands.help.DefaultHelpCommand:18
#: discord.ext.commands.help.HelpCommand:24
#: discord.ext.commands.help.MinimalHelpCommand:9
#: e56be582fd2f43eb94adef4955c9abc0 f9b93a380a284e189dc49fa48f348b9d of
msgid ":class:`bool`"
msgstr ""

#: a5c952c8f62649ff98c795f04e8a9a37 discord.ext.commands.bot.Bot:55 of
msgid ""
"The help command implementation to use. This can be dynamically set at "
"runtime. To remove the help command pass ``None``. For more information "
"on implementing a help command, see :ref:`ext_commands_help_command`."
msgstr ""

#: 4e41dd2f6e474b968c86fe917f45284f discord.ext.commands.bot.Bot:59 of
msgid "Optional[:class:`.HelpCommand`]"
msgstr ""

#: 7fa36f820e74436d9d890ec066f529db discord.ext.commands.bot.Bot:63 of
msgid ""
"Whether to strip whitespace characters after encountering the command "
"prefix. This allows for ``!   hello`` and ``!hello`` to both work if the "
"``command_prefix`` is set to ``!``. Defaults to ``False``."
msgstr ""

#: ../../ext/commands/api.rst 024cbb8ca69e4f12a98419f0192bae96
#: 0376d1f3354048868ddfbd60acc27c3f 0aeb5e483b864662a2c92eebe6f73d99
#: 0d64926e9bea4ccd8315b15fc036fc4a 102f67d17332471589053ba459ce6673
#: 108b930bfc3f4ea6bd10cbaf29718687 1801dd137def4a99846c6e603f11be1f
#: 183496d428a34f7fa249dc88301f8431 188381798d224cf9b16d6f04651426d2
#: 261e22506dc44e6484564a98a9ec4011 2a95458e7d8643c2ba53f80511c7fd97
#: 31bcf378e11c4b7ab87c5037821c6bda 3750ee9874a649329aece5d76398dd35
#: 37a692f9433046b2adc05d7f464911ab 3bc1086271a94765a82ebba9760e62e2
#: 3dbc0c3d62ea4dd1817205318f484376 3f6507abd3334942a24533f0ac0406f9
#: 440b7315543740c799170efcdd4c8f0e 49e2026dab654b5ca1a75e1ff2ccedc9
#: 4d9ef44a16e243bbb935cce7d88c9077 4f4b773ec13f47708179d77079b9f6f2
#: 558e0cf6198b497cbdb8d7560555cc5b 563e5536890b484ba2cbd0130f1fd9b2
#: 57fb1651bc2740c48fe01620a1aed31e 5b1a773778e843eea6be076e295ca033
#: 634b9b9ff2e24fdd91b9e3cd5b880d80 746d82f9ccbd40149262634a1f669cd2
#: 775f4dd1f7fb4a1b9380f86b62fb8056 798fa21ae55f4282b4274758b25d4a83
#: 812d0fca4d1549339fe98076a893d054 8ff0aa5a5bb6453aa531130a984ee93d
#: 942d8503487448198ea61a6b6e8305d0 9e65520881584d7680f63c943351a497
#: c30960c78b1a46e2ab2904693f41c626 c6adc9c02e9a4ce6b1595ac2630bf3b0
#: ca919f2f99a9425793383e7999f3af1c cd224adfd8e945a795b92654c0537e46
#: d18243f289de4f3aa562ec83d726eb9c discord.abc.Messageable.history
#: discord.client.Client.entitlements discord.client.Client.fetch_guilds
#: discord.client.Client.wait_for e42e172090a0442eba2ac0f76facbcb5
#: e532d59c72474f99b0c1ce7c2be358e2 e979a2cb64c144f08aaf2803550cb543
#: f49495cd4b3f496f96f84ac8aa1f87e4 fb6332a28a1242f5bede4ea1b4001c1a of
msgid "Parameters"
msgstr ""

#: baeb56b4ff064e6aa001a5ea8f1091bf discord.bot.BotBase.after_invoke:1 of
msgid ""
"A decorator that registers a coroutine as a post-invoke hook. A post-"
"invoke hook is called directly after the command is called. This makes it"
" a useful function to clean-up database connections or any type of clean "
"up required. This post-invoke hook takes a sole parameter, a "
":class:`.Context`."
msgstr ""

#: 32289ec6ecad415fbc1716cd28bb27a1 discord.bot.BotBase.after_invoke:9 of
msgid ""
"Similar to :meth:`~.Bot.before_invoke`\\, this is not called unless "
"checks and argument parsing procedures succeed. This hook is, however, "
"**always** called regardless of the internal command callback raising an "
"error (i.e. :exc:`.CommandInvokeError`\\). This makes it ideal for clean-"
"up scenarios."
msgstr ""

#: 1f4414f19cb245d88c190908023d9ac8 25b3652c08d44d8393ec6f0711deff0e
#: discord.bot.BotBase.after_invoke:16
#: discord.ext.commands.core.Command.after_invoke:12 of
msgid "The coroutine to register as the post-invoke hook."
msgstr ""

#: ../../ext/commands/api.rst 00e100a89db949b995244b5d7ea5c0e0
#: 0257c75535174994a013c404eed4de3d 081141882b5340b1a80561ca9111ae72
#: 0aaa7547a84144fc98f8383462258a5d 0d7bea2ab09344bda3df67dcce3ccdeb
#: 1604d3c4c756481bb44124fe1ee7d611 227204ee62a54c638c2f8b9a91f21145
#: 2650f6c238e74f72b4357fd0f3649d83 2d00ed43b7e24723b1c4d6801312bdce
#: 3a49aabda5f543efb7eef2d44dc0035e 3cf4e4f8fc3944a4b6b9f023fcb9e6e1
#: 4518277f66b34d9ea6be92e3704fe30a 5f1237616e624c018af062a4d89f032c
#: 630f4288af604d4dbc8e4177a7f21fac 65b2a4bfdd9f4cc8b834d6d484ef0034
#: 77dbba5eef11464da6e6d8561993d040 7ae1c7e45ccf4e3583a54ff7c5d20a74
#: 85f893142dbc4e559193fbceb66e29f8 9deb4f77a61449abb51bd5c6b99a742f
#: b3afb24572e449de8c461403f5864f56 b49c0073b56340ec9b78c3636e71e85c
#: bd10f9d638b347be80279e61dbb6e087 db7ea1055966404583fc0cb0b2c4d74f
#: db8e0299f4d5440f9756cf07c76ff3d2 discord.abc.Messageable.history
#: discord.client.Client.entitlements discord.client.Client.fetch_guilds
#: discord.client.Client.wait_for e20c74a6209b4f6ba2e2c83d146ec9b9
#: f601fd2e0ec94ce3a040c5466afdf390 fd1ed033251349feb65a4373c39a3112
#: fd688e2c9468425f8650382857f2fe9a of
msgid "Raises"
msgstr ""

#: 2cb6dbd6878a4f67b5005054d4f2340f 7c6f3f25c6eb4f608a6c686dd14b8cad
#: 9824f3f114b94bd7a2ba929d2afe59d4 d8c011efa50c47929c394609e419d093
#: discord.bot.BotBase.after_invoke:19 discord.bot.BotBase.before_invoke:18
#: discord.client.Client.event:13
#: discord.ext.commands.core.Command.after_invoke:15
#: discord.ext.commands.core.Command.before_invoke:15
#: discord.ext.commands.core.Command.error:11 of
msgid "The coroutine passed is not actually a coroutine."
msgstr ""

#: ce34b808e8804ba09dcdbdd5e43f819b discord.bot.BotBase.before_invoke:1 of
msgid ""
"A decorator that registers a coroutine as a pre-invoke hook. A pre-invoke"
" hook is called directly before the command is called. This makes it a "
"useful function to set up database connections or any type of set up "
"required. This pre-invoke hook takes a sole parameter, a "
":class:`.Context`."
msgstr ""

#: b71fb7de34de469fb20971cf6703e7c3 discord.bot.BotBase.before_invoke:9 of
msgid ""
"The :meth:`~.Bot.before_invoke` and :meth:`~.Bot.after_invoke` hooks are "
"only called if all checks and argument parsing procedures pass without "
"error. If any check or argument parsing procedures fail then the hooks "
"are not called."
msgstr ""

#: 148cdbf1c8ed4fb8b616c3fd3c815e8d discord.bot.BotBase.before_invoke:15
#: discord.ext.commands.core.Command.before_invoke:12
#: ff1c1be395074d0bb084578f9648eed3 of
msgid "The coroutine to register as the pre-invoke hook."
msgstr ""

#: 30a3ced0836b40dabba33773003dc2bd discord.bot.BotBase.check:1 of
msgid ""
"A decorator that adds a global check to the bot. A global check is "
"similar to a :func:`.check` that is applied on a per-command basis except"
" it is run before any command checks have been verified and applies to "
"every command the bot has."
msgstr ""

#: 095a14ed7b60432a89818371f06efc90 discord.bot.BotBase.check:7
#: discord.bot.BotBase.check_once:13 e5ff436d190a46d49314f31d064db949 of
msgid ""
"This function can either be a regular function or a coroutine. Similar to"
" a command :func:`.check`, this takes a single parameter of type "
":class:`.Context` and can only raise exceptions inherited from "
":exc:`.ApplicationCommandError`."
msgstr ""

#: 123407d31ff24dd999888399d8c675ba 2f0dc352e6954dfd855ac44d79767155
#: 34a0e26f2a9f4d4dadfcba125b8d60d8 587e23d4697f4a4f94f960f265e6d788
#: 6a9a9b160ee24cf4bfd1c63a997e9b6d 6e75c57ecbba458cbf5f3669a2924ab2
#: d64565eb8c0f49fabf5ba8ebd0408016 discord.bot.BotBase.check:12
#: discord.bot.BotBase.check_once:18 discord.client.Client.add_listener:15
#: discord.client.Client.change_presence:16 discord.client.Client.event:16
#: discord.client.Client.listen:11 discord.ext.commands.bot.when_mentioned_or:8
#: discord.ext.commands.core.before_invoke:11
#: discord.ext.commands.core.has_any_role:22
#: discord.ext.commands.core.has_permissions:21 of
msgid "Example"
msgstr ""

#: bf4f1977d6504fd5aa739b28dc3f3390 discord.bot.BotBase.check_once:1 of
msgid ""
"A decorator that adds a \"call once\" global check to the bot. Unlike "
"regular global checks, this one is called only once per "
":meth:`.Bot.invoke` call. Regular global checks are called whenever a "
"command is called or :meth:`.Command.can_run` is called. This type of "
"check bypasses that and ensures that it's called only once, even inside "
"the default help command."
msgstr ""

#: acbeb7009e4c42fb9f128986d2327e71 discord.bot.BotBase.check_once:8 of
msgid ""
"When using this function the :class:`.Context` sent to a group subcommand"
" may only parse the parent command and not the subcommands due to it "
"being invoked once per :meth:`.Bot.invoke` call."
msgstr ""

#: 61aae0b994f947b8a1853fda41ee0156 66c60cbf615a4450a0177eb8da660fe0
#: discord.ext.commands.core.GroupMixin.command:1 of
msgid ""
"A shortcut decorator that invokes :func:`.command` and adds it to the "
"internal command list via :meth:`~.GroupMixin.add_command`."
msgstr ""

#: ../../ext/commands/api.rst 00966068ccb2456abc827d903250b689
#: 21b6898829444dfdb4d7580f4b8e8d68 21f49b5974d544ffa30d029b89640d48
#: 2fccd0b36926425aa78d42b9de69dd3f 3befc35084eb4ca69d1eae3463158861
#: 3e6b25fcdbcd450dba91025338af56fb 40cd0e3b914a4a93ba95b1043d54fb57
#: 5112301599a2461ab64d607e13e31a0c 581f5bcbba424fdf8b15bcd0b8dc5711
#: 60a9892afb20420f98ee9221fe525e3e 63cdadc9d8aa4bfabd4c2ebf92943762
#: 6913a08768f04878a8aae3849f2adbcb 6a9df72d6343436e8a5d6be1812ec065
#: 6d76557cfaf549eb9bbc18d2a380ba49 8e90d2f15b4941d98f8df75ea6d1f6f7
#: 98009cff8e324960b08e4c96846a22ab a7e906d78e604e498c0790b35695e171
#: ad5f35b147574d30a0a839258b537e52 ae1200f79d0048e199cda9ddbb154333
#: b6a1edaf8c42494ba5a9e62d8f3d7a0a d0d2c521ec0e46899e9c57882edc2983
#: dfe2da6e0d804d72b6ac73f14963c8f2 discord.client.Client.wait_for
#: e7bb28eb3fa44f87a1b2e6c2b6fd300f ec9b0c7dd290456795aee20a50830ab1
#: f4e36f6415c74fc8a5a3d6a231c6612a of
msgid "Returns"
msgstr ""

#: 230236e4038a412abf293a0551512e31
#: discord.ext.commands.core.GroupMixin.command:4
#: f2b7b7f29eb2477e9258c08e49fb3a95 of
msgid ""
"A decorator that converts the provided method into a Command, adds it to "
"the bot, then returns it."
msgstr ""

#: ../../ext/commands/api.rst 05d8c3f799b246739284dcbebc3d5739
#: 09d2baeccc6b4e50adbfb853f2ddf881 0d5178bf994b44cf926dcc67b591b256
#: 0e729c9e43cf4805bafb0bab9cc41897 10722e3a6685409b8ad039a73479cf66
#: 123b5e5640914f0c8b4e3046caba82cd 13f3ffb767a74f8e9e764aa5a74a089a
#: 198305646666451196d990dc353636ba 33ed8c12d23741c6880f5a1831375fdf
#: 378dd7f9c2a64e0189299a60058beda8 3bcb056fb2e14a0fb068215205695ca6
#: 3c4a3dc146ea4ead9cbc60eaff2e0088 3c9ab793d144498097bcfd76a5b53eac
#: 410437ffc3e04b40a383df209d8b16f3 45ea3bdc5022438c98fa1d50fa047386
#: 4c5fd8c24f5b4ad28a6e1aae56787d18 53e94d21edab4737b42673ee97fdb49c
#: 55536d0434d84487aa4b5a9de46e940b 5636ea5552c544f5b61e1173aabbd424
#: 5c50e685ec2041e597da308a07641a2c 631a53d5fb644b1dbbe93c6614a7c4f2
#: 6cbefb296dbe48689f75969f7d94f823 747e9c0cdf2f4e9bb919c9dc427e2cc2
#: 77e4fafb7b5f4845b9d186a0206d03e2 83f34d28e50d49638d87349d48d2369e
#: 83f96d62a16b4d479ab2c81dd1f136f5 844194587e244cf2b26a421da5ef2919
#: 853376070e4546b989f18c50a2d9817b 8ad6c4547b91438cac30d78cc6b56789
#: 9014a07ae4274d518383c0faced251e7 9d5d85b51d48428ba902d02b951bcffb
#: 9d778ca7356943e294915c2454341f4a aa13bf25f19340fc931e80e3daed2919
#: b45285c94435415aa6a5322e8781abbd b46102d67b324fd8a3c1c4ae247fa8b3
#: ba9d73b43cc14b0c8711857654f83f62 bf756d9820a94075834d33924e09e0e2
#: c34bb5212e8843d885c20cbf2eb7d819 c9bc8a557c184c6d9f063626b67cc4cd
#: cc0179f647c24dc9a5287080d1c62d99 cd347a646db3434e925a1c1ee2047412
#: dd1387feedaf4788a91e66c7120bb6bf df0dfaebe66b4cf0840971e222e3f126
#: discord.abc.Messageable.history discord.client.Client.entitlements
#: discord.client.Client.fetch_guilds discord.client.Client.wait_for
#: e33db6d356e34de5945d286505e336fa efde8f14120541b68759499f509605ce
#: f4e246fdf7f2458baa9253a36a4045e0 fc5da63fdcca41d5a4742949f05235c9 of
msgid "Return type"
msgstr ""

#: 0fac82441bda46b2857b66cc3d6fc1ab 44da924bb9b14d1e8a47ed370ae96009
#: discord.ext.commands.core.GroupMixin.command:5 of
msgid "Callable[..., :class:`Command`]"
msgstr ""

#: 25ca5d10c25a43ab825740b2fb2874e4 discord.client.Client.event:1 of
msgid "A decorator that registers an event to listen to."
msgstr ""

#: 6ced4d446c2447a7b3f807c6868b6598 discord.client.Client.event:3 of
msgid ""
"You can find more info about the events on the :ref:`documentation below "
"<discord-api-events>`."
msgstr ""

#: 58e8a1624b6b47c18cba15aa21150688 discord.client.Client.event:5 of
msgid ""
"The events must be a :ref:`coroutine <coroutine>`, if not, "
":exc:`TypeError` is raised."
msgstr ""

#: bd32e11d29e74bd6b0f29d4020cbd2b9 discord.client.Client.event:9 of
msgid ""
"This replaces any default handlers. Developers are encouraged to use "
":py:meth:`~discord.Client.listen` for adding additional handlers instead "
"of :py:meth:`~discord.Client.event` unless default method replacement is "
"intended."
msgstr ""

#: 84c8e89006cc4917a75cff6dd4a7be7f discord.client.Client.event:25 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`Coro\\`\\`\\, bound\\= "
"\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, "
"\\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\)`"
msgstr ""

#: 2d92005457764c1c8814201cecd4d501 b4303f71de864e7e98b980bd33ef7d84
#: discord.ext.commands.core.GroupMixin.group:1 of
msgid ""
"A shortcut decorator that invokes :func:`.group` and adds it to the "
"internal command list via :meth:`~.GroupMixin.add_command`."
msgstr ""

#: dc51e15c515241e1b7db18a0e7ddfb03
#: discord.ext.commands.core.GroupMixin.group:4
#: fd3c8f26e2e64cbc919c3e72c8975e46 of
msgid ""
"A decorator that converts the provided method into a Group, adds it to "
"the bot, then returns it."
msgstr ""

#: cdd278087924410f940c85c590d6565c
#: discord.ext.commands.core.GroupMixin.group:5
#: ffe6eb92b0224834b83f3814c9c5df5f of
msgid "Callable[..., :class:`Group`]"
msgstr ""

#: 439a5983b3e34e9ab7954fa7b9042e7d discord.client.Client.listen:1 of
msgid ""
"A decorator that registers another function as an external event "
"listener. Basically this allows you to listen to multiple events from "
"different places e.g. such as :func:`.on_ready`"
msgstr ""

#: 2401d9783e7d4182918ca052d3e803b3 discord.client.Client.listen:5 of
msgid "The functions being listened to must be a :ref:`coroutine <coroutine>`."
msgstr ""

#: 5e016ce55c294e638a73a097f5997136 discord.client.Client.listen:7 of
msgid "The function being listened to is not a coroutine."
msgstr ""

#: 55915adcdcbc4935b1637428f964dfbb discord.client.Client.add_listener:11
#: discord.client.Client.listen:8 e21be3ea4d0446efaa81b5acd1c28fdd of
msgid "The ``name`` (event name) does not start with 'on_'"
msgstr ""

#: discord.client.Client.listen:29 f56714807dea497f8cc547c870355a4c of
msgid "Would print one and two in an unspecified order."
msgstr ""

#: 65dec0b829f94471a23a32db5dbbedb1 discord.client.Client.listen:35 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`Coro\\`\\`\\, bound\\= "
"\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, "
"\\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\)\\]\\, "
"\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`Coro\\`\\`\\, "
"bound\\= \\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, "
"\\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\)\\]`"
msgstr ""

#: discord.ext.commands.Bot.activity:1 ee245e9df3564ff19f3c70e347412642 of
msgid "The activity being used upon logging in."
msgstr ""

#: 533f9a9e3798459b9be6f604992915b5 discord.ext.commands.Bot.activity:3 of
msgid "Optional[:class:`.BaseActivity`]"
msgstr ""

#: 965049efae4b4ed685004789480c0f4d
#: discord.bot.ApplicationCommandMixin.add_application_command:1 of
msgid "Adds an :class:`.ApplicationCommand` into the internal list of commands."
msgstr ""

#: a65c13c994b94c719a718b96e4e93521
#: discord.bot.ApplicationCommandMixin.add_application_command:3 of
msgid ""
"This is usually not called, instead the :meth:`command` or other shortcut"
" decorators are used instead."
msgstr ""

#: 20ea5167076042deabb0d765a6285277 38bbdb3e941a4af0b99ed4c90132372c
#: 3ec982cd2dee46bfbf4f020d2e46a906
#: discord.bot.ApplicationCommandMixin.add_application_command:9
#: discord.ext.commands.core.GroupMixin.add_command:10 of
msgid "The command to add."
msgstr ""

#: 0017e074dd134426b570354c2504b7db 2955a6e82aa6427ea4129e090d9e0e1a
#: 5f1082c1e4e04874900a56140fe3d2cc 62d9613a1121411c960009687e8cc328
#: 63f22bb531d541109902fec69dcfcbfc 7d0a457d06344339819fc176a73566c2
#: 7dbaac0f1ff047cbad5ca6c2242d4dc4 7e4abed9dc9d44818dc910ae2bb0e976
#: af9c896fbca541199d50ed6f9311ec05 bb305a7b77fe4ff9a8e70816d97d46ae
#: d2e6da7f13ae45be9d21b97011a05d14 db30e1b1f2df4726842b6713f2dc4d6c
#: discord.abc.Messageable.trigger_typing:8
#: discord.bot.ApplicationCommandMixin.add_application_command:12
#: discord.bot.ApplicationCommandMixin.invoke_application_command:10
#: discord.bot.ApplicationCommandMixin.process_application_commands:26
#: discord.bot.ApplicationCommandMixin.sync_commands:55
#: discord.bot.BotBase.add_check:10
#: discord.bot.BotBase.on_application_command_error:14
#: discord.bot.BotBase.remove_check:12 discord.client.Client.add_listener:12
#: discord.client.Client.add_view:20
#: discord.client.Client.before_identify_hook:18 discord.client.Client.clear:8
#: discord.client.Client.connect:18 discord.client.Client.delete_invite:16
#: discord.client.Client.login:14 discord.client.Client.on_error:15
#: discord.client.Client.remove_listener:10 discord.client.Client.run:28
#: discord.client.Client.start:11 discord.client.Client.wait_until_ready:6
#: discord.cog.CogMixin.add_cog:24 discord.cog.CogMixin.reload_extension:26
#: discord.cog.CogMixin.unload_extension:27
#: discord.ext.commands.bot.BotBase.close:6
#: discord.ext.commands.bot.BotBase.invoke:10
#: discord.ext.commands.bot.BotBase.on_command_error:14
#: discord.ext.commands.bot.BotBase.process_commands:21
#: discord.ext.commands.context.Context.reinvoke:27
#: discord.ext.commands.cooldowns.Cooldown.reset:4
#: discord.ext.commands.core.Command.add_check:10
#: discord.ext.commands.core.Command.remove_check:11
#: discord.ext.commands.core.Command.reset_cooldown:7
#: discord.ext.commands.core.Command.update:9
#: discord.ext.commands.core.GroupMixin.add_command:16
#: e03239f359674e139b092cf33b2fc6b8 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:obj\\:\\`None\\``"
msgstr ""

#: ca5a955495a14c66abb490d1030e0cd0 discord.bot.BotBase.add_check:1 of
msgid ""
"Adds a global check to the bot. This is the non-decorator interface to "
":meth:`.check` and :meth:`.check_once`."
msgstr ""

#: 90a3747872a741d39fb20a4e62affa2c discord.bot.BotBase.add_check:5 of
msgid "The function that was used as a global check."
msgstr ""

#: 6434458ce10745d6a4d2a97b9da6450d discord.bot.BotBase.add_check:7 of
msgid "If the function should only be called once per :meth:`.Bot.invoke` call."
msgstr ""

#: 611c86c2efb64169bc1e0f178722f5f2 discord.cog.CogMixin.add_cog:1 of
msgid "Adds a \"cog\" to the bot."
msgstr ""

#: 9dc96a6bb3b84a9d9242c5e1d477d2c4 discord.cog.CogMixin.add_cog:3 of
msgid "A cog is a class that has its own event listeners and commands."
msgstr ""

#: 5a7030646e2649debc2d67517dff7e24 discord.cog.CogMixin.add_cog:7 of
msgid ""
":exc:`.ClientException` is raised when a cog with the same name is "
"already loaded."
msgstr ""

#: discord.cog.CogMixin.add_cog:11 ff50388be9f44e8da25ecebf5b0a0b70 of
msgid "The cog to register to the bot."
msgstr ""

#: da93463a84aa47688b8cdfcd1763e98c discord.cog.CogMixin.add_cog:14 of
msgid ""
"If a previously loaded cog with the same name should be ejected instead "
"of raising an error.  .. versionadded:: 2.0"
msgstr ""

#: 3076fac6693049dca8d5d9f83410f565 discord.cog.CogMixin.add_cog:14 of
msgid ""
"If a previously loaded cog with the same name should be ejected instead "
"of raising an error."
msgstr ""

#: 3a5615d016404f33be6f8b2e7c7b8789 discord.cog.CogMixin.add_cog:20 of
msgid "The cog does not inherit from :class:`.Cog`."
msgstr ""

#: 2ea43d18eb7849e2babe871b171547ab discord.cog.CogMixin.add_cog:21 of
msgid "An error happened during loading."
msgstr ""

#: c3e4756dc3be4e039b57e146c8ee4b70 discord.cog.CogMixin.add_cog:22 of
msgid "A cog with the same name is already loaded."
msgstr ""

#: 892271b7879440eba8bad74a82d01f99 d4bd8f7f9afe4890b60e3c7608d4a53d
#: discord.ext.commands.core.GroupMixin.add_command:1 of
msgid "Adds a :class:`.Command` into the internal list of commands."
msgstr ""

#: 6e7cfb1130eb428fbd9da148ceb6848a db096b0658f14eb398b8c0901a0bb4a8
#: discord.ext.commands.core.GroupMixin.add_command:3 of
msgid ""
"This is usually not called, instead the :meth:`~.GroupMixin.command` or "
":meth:`~.GroupMixin.group` shortcut decorators are used instead."
msgstr ""

#: 881af903b3834288bf30777981226c3d d005cfa388ba4c9c93b28569e45a9895
#: discord.ext.commands.core.GroupMixin.add_command:6 of
msgid ""
"Raise :exc:`.CommandRegistrationError` instead of generic "
":exc:`.ClientException`"
msgstr ""

#: 4058311b664443489c2bdcf7ccdf0294 7c9098b1dbc6448dbaf83869211f25a2
#: discord.ext.commands.core.GroupMixin.add_command:13 of
msgid "If the command or its alias is already registered by different command."
msgstr ""

#: 0624e7fcbdab454e8a678d05ead1d15a 523abcff2f2e4510b53afb5e45c51c91
#: discord.ext.commands.core.GroupMixin.add_command:14 of
msgid "If the command passed is not a subclass of :class:`.Command`."
msgstr ""

#: 02bd817bbaf44c34a50afab9bf939469 discord.client.Client.add_listener:1 of
msgid "The non decorator alternative to :meth:`.listen`."
msgstr ""

#: 034fe8fbfb664caba055dda25a8d01f2 discord.client.Client.add_listener:4 of
msgid "The function to call."
msgstr ""

#: 4894173aaabd439d9e19b2422e82fb53 discord.client.Client.add_listener:7 of
msgid "The name of the event to listen for. Defaults to ``func.__name__``."
msgstr ""

#: 88019ec42e9b4afe90bf593a2293878b discord.client.Client.add_listener:10 of
msgid "The ``func`` parameter is not a coroutine function."
msgstr ""

#: d05412d810f4441fa9fc55ed14abaccb discord.client.Client.add_view:1 of
msgid "Registers a :class:`~discord.ui.View` for persistent listening."
msgstr ""

#: 31f9b3425c8846d0bf9819c936651f8f discord.client.Client.add_view:3 of
msgid ""
"This method should be used for when a view is comprised of components "
"that last longer than the lifecycle of the program."
msgstr ""

#: 9b1f1c7e6e204527b0b7f0e584cc5c50 discord.client.Client.add_view:9 of
msgid "The view to register for dispatching."
msgstr ""

#: discord.client.Client.add_view:12 e571a3cbd785484d976fd3b2fd0a4cde of
msgid ""
"The message ID that the view is attached to. This is currently used to "
"refresh the view's state during message update events. If not given then "
"message update events are not propagated for the view."
msgstr ""

#: discord.client.Client.add_view:17 e785ad522f2841a0bae2684ff1da2749 of
msgid "A view was not passed."
msgstr ""

#: 41cdd2c26f04437d9e50356565bbe005 discord.client.Client.add_view:18 of
msgid ""
"The view is not persistent. A persistent view has no timeout     and all "
"their components have an explicitly provided ``custom_id``."
msgstr ""

#: 01a7d56f6fc64da79e759f8199be445b discord.ext.commands.Bot.allowed_mentions:1
#: of
msgid "The allowed mention configuration."
msgstr ""

#: 4d61bc9673774eaf9ec7b47ed96bb05c
#: discord.bot.ApplicationCommandMixin.application_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`~.Bot.add_application_command`."
msgstr ""

#: 2322bb50ae2547e7b1a75b809b816a29
#: discord.bot.ApplicationCommandMixin.application_command:6 of
msgid ""
"A decorator that converts the provided method into an "
":class:`.ApplicationCommand`, adds it to the bot, then returns it."
msgstr ""

#: discord.bot.ApplicationCommandMixin.application_command:8
#: fa1dea0535a34d4f970b6c1933b766d6 of
msgid "Callable[..., :class:`ApplicationCommand`]"
msgstr ""

#: 3891c47a359a4c85b46a4ce0c7583dcf
#: discord.ext.commands.Bot.application_flags:1 of
msgid "The client's application flags."
msgstr ""

#: b16cae8c17764094ab2a6221966688d1 discord.ext.commands.Bot.application_id:1
#: of
msgid "The client's application ID."
msgstr ""

#: 3805665860b74387aaf8deeb87f400fd discord.ext.commands.Bot.application_id:3
#: of
msgid ""
"If this is not passed via ``__init__`` then this is retrieved through the"
" gateway when an event contains the data. Usually after "
":func:`~discord.on_connect` is called."
msgstr ""

#: 236578d5657f4b75a93140c452d6f243 25dea9a1072d49a4a52f17e137de72c3
#: 40abc24f54c34f2298f5012fb5ee7aff 41de831c34ab4a10a10e0efcf817263c
#: 4221da88b8e04f5daa5831179d2c8102 52ecf1b64db9436094a380bfd867b180
#: 5718794be4e14211ae9436403f12609e 5978a98a88184e328613785e29a04c93
#: 5b000a6fdae3492da6ed60fb279a55dd 62c513a80a3c4ec5b566f2dfe95621cb
#: 649c19de56d047de904a5b185d87a42c 78993876a1f6444389ced7ccf1897b45
#: 84206d2ae0324e83b7a28e37d5dc1140 8d5d8cf44a1143208772382e441a15f3
#: a429f06c46d147308e50e9a00d3c0ebc b29f0f791885488596a5ff1ec37ba539
#: b42983e9e7764522bb4f34f045ad1da5 d424f44f65dc4c50bc16b509389106d6
#: d878c81f64ca41a3ba4b287fe6201669 discord.abc.Messageable.fetch_message:1
#: discord.abc.Messageable.pins:1 discord.abc.Messageable.send:1
#: discord.abc.Messageable.trigger_typing:1
#: discord.bot.ApplicationCommandMixin.get_application_context:1
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:1
#: discord.bot.ApplicationCommandMixin.get_desynced_commands:1
#: discord.bot.ApplicationCommandMixin.invoke_application_command:1
#: discord.bot.ApplicationCommandMixin.process_application_commands:1
#: discord.bot.ApplicationCommandMixin.register_command:1
#: discord.bot.ApplicationCommandMixin.register_commands:1
#: discord.bot.ApplicationCommandMixin.sync_commands:1
#: discord.bot.BotBase.is_owner:1
#: discord.bot.BotBase.on_application_command_error:1
#: discord.client.Client.application_info:1
#: discord.client.Client.before_identify_hook:1
#: discord.client.Client.change_presence:1 discord.client.Client.connect:1
#: discord.client.Client.create_dm:1 discord.client.Client.create_guild:1
#: discord.client.Client.delete_invite:1 discord.client.Client.fetch_channel:1
#: discord.client.Client.fetch_guild:1 discord.client.Client.fetch_invite:1
#: discord.client.Client.fetch_premium_sticker_packs:1
#: discord.client.Client.fetch_role_connection_metadata_records:1
#: discord.client.Client.fetch_skus:1
#: discord.client.Client.fetch_stage_instance:1
#: discord.client.Client.fetch_sticker:1 discord.client.Client.fetch_template:1
#: discord.client.Client.fetch_user:1 discord.client.Client.fetch_webhook:1
#: discord.client.Client.fetch_widget:1
#: discord.client.Client.get_or_fetch_user:1 discord.client.Client.login:1
#: discord.client.Client.on_error:1 discord.client.Client.start:1
#: discord.client.Client.update_role_connection_metadata_records:1
#: discord.client.Client.wait_for:1 discord.client.Client.wait_until_ready:1
#: discord.ext.commands.bot.BotBase.close:1
#: discord.ext.commands.bot.BotBase.get_context:1
#: discord.ext.commands.bot.BotBase.get_prefix:1
#: discord.ext.commands.bot.BotBase.invoke:1
#: discord.ext.commands.bot.BotBase.on_command_error:1
#: discord.ext.commands.bot.BotBase.process_commands:1
#: discord.ext.commands.context.Context.invoke:1
#: discord.ext.commands.context.Context.reinvoke:1
#: discord.ext.commands.context.Context.reply:1
#: discord.ext.commands.context.Context.send_help:1
#: discord.ext.commands.converter.CategoryChannelConverter.convert:1
#: discord.ext.commands.converter.ColourConverter.convert:1
#: discord.ext.commands.converter.Converter.convert:1
#: discord.ext.commands.converter.EmojiConverter.convert:1
#: discord.ext.commands.converter.ForumChannelConverter.convert:1
#: discord.ext.commands.converter.GameConverter.convert:1
#: discord.ext.commands.converter.GuildChannelConverter.convert:1
#: discord.ext.commands.converter.GuildConverter.convert:1
#: discord.ext.commands.converter.GuildStickerConverter.convert:1
#: discord.ext.commands.converter.InviteConverter.convert:1
#: discord.ext.commands.converter.MemberConverter.convert:1
#: discord.ext.commands.converter.MessageConverter.convert:1
#: discord.ext.commands.converter.ObjectConverter.convert:1
#: discord.ext.commands.converter.PartialEmojiConverter.convert:1
#: discord.ext.commands.converter.PartialMessageConverter.convert:1
#: discord.ext.commands.converter.RoleConverter.convert:1
#: discord.ext.commands.converter.StageChannelConverter.convert:1
#: discord.ext.commands.converter.TextChannelConverter.convert:1
#: discord.ext.commands.converter.ThreadConverter.convert:1
#: discord.ext.commands.converter.UserConverter.convert:1
#: discord.ext.commands.converter.VoiceChannelConverter.convert:1
#: discord.ext.commands.converter.clean_content.convert:1
#: discord.ext.commands.converter.run_converters:1
#: discord.ext.commands.core.Command.__call__:1
#: discord.ext.commands.core.Command.can_run:1
#: discord.ext.commands.flags.FlagConverter.convert:1
#: discord.ext.commands.help.HelpCommand.command_callback:1
#: discord.ext.commands.help.HelpCommand.filter_commands:1
#: discord.ext.commands.help.HelpCommand.on_help_command_error:1
#: discord.ext.commands.help.HelpCommand.prepare_help_command:1
#: discord.ext.commands.help.HelpCommand.send_bot_help:1
#: discord.ext.commands.help.HelpCommand.send_cog_help:1
#: discord.ext.commands.help.HelpCommand.send_command_help:1
#: discord.ext.commands.help.HelpCommand.send_error_message:1
#: discord.ext.commands.help.HelpCommand.send_group_help:1
#: e3601a366188485199c64c569dddce15 e377492e6ddb4255aa4fe483b4e6eadb
#: eb09d3aeb7ee496982cd2147e719a780 ed13365273a643888369cf52b1e8fb1a
#: fe4bb802cda24bcca261d0efa60e2fc0 of
msgid "|coro|"
msgstr ""

#: 58bce22f218c4d7e972f6d8603a932db discord.client.Client.application_info:3 of
msgid "Retrieves the bot's application information."
msgstr ""

#: 20ac1c8e924e4a74bfc8271a895ac046 discord.client.Client.application_info:5 of
msgid "The bot's application information."
msgstr ""

#: ddd2ee7b903d4405b001c528caddc533 discord.client.Client.application_info:6 of
msgid ":class:`.AppInfo`"
msgstr ""

#: 4bebc8aa589942539aac4fc7cb39bcb0 discord.client.Client.application_info:8 of
msgid "Retrieving the information failed somehow."
msgstr ""

#: 37dcfe79744144d6b82955792c13e62b
#: discord.client.Client.before_identify_hook:3 of
msgid ""
"A hook that is called before IDENTIFYing a session. This is useful if you"
" wish to have more control over the synchronization of multiple "
"IDENTIFYing clients."
msgstr ""

#: d04199f41dda4861a2bb97a9ceccc58a
#: discord.client.Client.before_identify_hook:7 of
msgid "The default implementation sleeps for 5 seconds."
msgstr ""

#: 6ddc40ac88e94492a8be6d87f1e5473f
#: discord.client.Client.before_identify_hook:12 of
msgid "The shard ID that requested being IDENTIFY'd"
msgstr ""

#: 968a4b1e18b74b5fbbaafcd5a53b8e19
#: discord.client.Client.before_identify_hook:15 of
msgid "Whether this IDENTIFY is the first initial IDENTIFY."
msgstr ""

#: discord.ext.commands.Bot.cached_messages:1 e212e868790742248ba3a8d76f5ea528
#: of
msgid "Read-only list of messages the connected client has cached."
msgstr ""

#: 1a5853c1b8704ad5b75e31c63d16a5fe discord.client.Client.change_presence:3 of
msgid "Changes the client's presence."
msgstr ""

#: 51fcf3308e2d482c8ccfe51009f5ae62 discord.client.Client.change_presence:6 of
msgid "The activity being done. ``None`` if no currently active activity is done."
msgstr ""

#: c6e5a0e37494498da3615b0e041001e2 discord.client.Client.change_presence:9 of
msgid ""
"Indicates what status to change to. If ``None``, then "
":attr:`.Status.online` is used."
msgstr ""

#: 1b5a4b8162af4194b8d525d26a63f617 discord.client.Client.change_presence:13 of
msgid "If the ``activity`` parameter is not the proper type."
msgstr ""

#: 8ce0e28322c74e469822ed7531e3c682 discord.client.Client.change_presence:22 of
msgid "Removed the ``afk`` keyword-only parameter."
msgstr ""

#: discord.client.Client.clear:1 e22dd1f501464842b709455fd8d77a6d of
msgid "Clears the internal state of the bot."
msgstr ""

#: 15885728217642229cd612c0fcb9525e discord.client.Client.clear:3 of
msgid ""
"After this, the bot can be considered \"re-opened\", i.e. "
":meth:`is_closed` and :meth:`is_ready` both return ``False`` along with "
"the bot's internal cache cleared."
msgstr ""

#: cbfb9a74a2ec448fa8ac94b59aac9515 discord.ext.commands.bot.BotBase.close:3 of
msgid "Closes the connection to Discord."
msgstr ""

#: discord.ext.commands.Bot.cogs:1 ef290ef0d76a4205bca66cab42c47b0a of
msgid "A read-only mapping of cog name to cog."
msgstr ""

#: 23309f092f064da6afced5088b16900c 585e5854876b422d856c9a7d7f4f3745
#: discord.ext.commands.Bot.commands:1 discord.ext.commands.Group.commands:1
#: discord.ext.commands.GroupMixin.commands:1 of
msgid "A unique set of commands without aliases that are registered."
msgstr ""

#: 8e0bc55d2ece473b911a77a7184ef59c discord.client.Client.connect:3 of
msgid ""
"Creates a WebSocket connection and lets the WebSocket listen to messages "
"from Discord. This is a loop that runs the entire event system and "
"miscellaneous aspects of the library. Control is not resumed until the "
"WebSocket connection is terminated."
msgstr ""

#: 6d7f1882aea04a02a4ef6b80ced08594 discord.client.Client.connect:9 of
msgid ""
"If we should attempt reconnecting, either due to internet failure or a "
"specific failure on Discord's part. Certain disconnects that lead to bad "
"state will not be handled (such as invalid sharding payloads or bad "
"tokens)."
msgstr ""

#: 669921a33c214d4aa713229f40eea540 discord.client.Client.connect:15 of
msgid ""
"The gateway to connect to Discord is not found. Usually if this     is "
"thrown then there is a Discord API outage."
msgstr ""

#: 61b4497757cd4290acbdefb487ebd4aa discord.client.Client.connect:16 of
msgid "The WebSocket connection has been terminated."
msgstr ""

#: af3102965b034ed883227ac3904af51c discord.client.Client.create_dm:3 of
msgid "Creates a :class:`.DMChannel` with this user."
msgstr ""

#: 84eb1de364fb4f44af43a334a3f0a7bc discord.client.Client.create_dm:5 of
msgid ""
"This should be rarely called, as this is done transparently for most "
"people."
msgstr ""

#: 26efd0e745864817a629901f9d4274e0 discord.client.Client.create_dm:11 of
msgid "The user to create a DM with."
msgstr ""

#: a5eed69dc19842e7be8ca4132ff21f2a discord.client.Client.create_dm:14 of
msgid "The channel that was created."
msgstr ""

#: ca7c03d41e78401bb047c80cf470d632 discord.client.Client.create_dm:15 of
msgid ":class:`.DMChannel`"
msgstr ""

#: 32894198e43c44e6be5d31d30af3a30d
#: discord.bot.ApplicationCommandMixin.create_group:1 of
msgid ""
"A shortcut method that creates a slash command group with no subcommands "
"and adds it to the internal command list via "
":meth:`add_application_command`."
msgstr ""

#: c37bcf8a3fcc4623a52e5842e62a1bf5
#: discord.bot.ApplicationCommandMixin.create_group:7 of
msgid "The name of the group to create."
msgstr ""

#: 39b074dd62fe4a2c9593642d30d91cab 70182e1186984166914ebe5256fd2312
#: discord.bot.ApplicationCommandMixin.create_group:10
#: discord.bot.ApplicationCommandMixin.group:10 of
msgid "The description of the group to create."
msgstr ""

#: 3daecf48b7c64c31b108f8dd881ff771 46500bc4b09146558d44dcee21047fca
#: discord.bot.ApplicationCommandMixin.create_group:13
#: discord.bot.ApplicationCommandMixin.group:13 of
msgid ""
"A list of the IDs of each guild this group should be added to, making it "
"a guild command. This will be a global command if ``None`` is passed."
msgstr ""

#: 3e5a4860a9d1483cb61b40ce198e5fee
#: discord.bot.ApplicationCommandMixin.create_group:17 of
msgid "Any additional keyword arguments to pass to :class:`.SlashCommandGroup`."
msgstr ""

#: 7afd9a7e1abf445c9185ee1392202fd6
#: discord.bot.ApplicationCommandMixin.create_group:19
#: discord.bot.ApplicationCommandMixin.group:17
#: e95710966abe488e8ce4970bd2f35160 of
msgid "The slash command group that was created."
msgstr ""

#: 583248c24e104f60a8d7b44b63a93d8b discord.client.Client.create_guild:3 of
msgid "Creates a :class:`.Guild`."
msgstr ""

#: 480ab82fc12b401f8b75d5ac50648a04 discord.client.Client.create_guild:5 of
msgid "Bot accounts in more than 10 guilds are not allowed to create guilds."
msgstr ""

#: 751a75562aa647628af12ff17756d819 discord.client.Client.create_guild:8 of
msgid "The name of the guild."
msgstr ""

#: 75d40bc85a17414a943100275453e7b5 discord.client.Client.create_guild:11 of
msgid ""
"The :term:`py:bytes-like object` representing the icon. See "
":meth:`.ClientUser.edit` for more details on what is expected."
msgstr ""

#: 7ca63a3c7aca436ca90a0d584ad7a2bb discord.client.Client.create_guild:15 of
msgid "The code for a template to create the guild with.  .. versionadded:: 1.4"
msgstr ""

#: 46ee421067d246aeabd1ba31f8c97032 discord.client.Client.create_guild:15 of
msgid "The code for a template to create the guild with."
msgstr ""

#: 4312ec6459c5431e9821af9fc31fb0d5 discord.client.Client.create_guild:20 of
msgid "The guild created. This is not the same guild that is added to cache."
msgstr ""

#: 97536bb06f8049b5837ac583ff2dce33 c91fefbf98ca4abfadde5d5caadb9dc1
#: discord.client.Client.create_guild:22 discord.client.Client.fetch_guild:26
#: of
msgid ":class:`.Guild`"
msgstr ""

#: discord.client.Client.create_guild:24 fe6c3f12bfb54bee919c57282004f16c of
msgid "Guild creation failed."
msgstr ""

#: 76f88cf22b1d4c1ba41c3a09a320adf1 discord.client.Client.create_guild:25 of
msgid "Invalid icon image format given. Must be PNG or JPG."
msgstr ""

#: 0149655ae5be40f8b70d5d69362b94f0 discord.client.Client.delete_invite:3 of
msgid "Revokes an :class:`.Invite`, URL, or ID to an invite."
msgstr ""

#: 12997acdfb41427eafde4adf144e6b6d discord.client.Client.delete_invite:5 of
msgid ""
"You must have the :attr:`~.Permissions.manage_channels` permission in the"
" associated guild to do this."
msgstr ""

#: 16bd71de63f54315b81153e65c2efa00 discord.client.Client.delete_invite:9 of
msgid "The invite to revoke."
msgstr ""

#: 3b8ea28dfd4b4aa6aae2fba880397f50 discord.client.Client.delete_invite:12 of
msgid "You do not have permissions to revoke invites."
msgstr ""

#: 9ce1620b29d14465babd2e9ef51f9c80 discord.client.Client.delete_invite:13 of
msgid "The invite is invalid or expired."
msgstr ""

#: 0e1b8d18fdd444df8b1e1bc2bfd61746 discord.client.Client.delete_invite:14 of
msgid "Revoking the invite failed."
msgstr ""

#: discord.ext.commands.Bot.emojis:1 f053fc31a26848abb5f0b22c31bba150 of
msgid "The emojis that the connected client has."
msgstr ""

#: 55996a99ae5a4b76bcf2980286829ff0 discord.client.Client.entitlements:1 of
msgid ""
"Returns an :class:`.AsyncIterator` that enables fetching the "
"application's entitlements."
msgstr ""

#: 59b671a29aec481bb8db91eb772084d7 discord.client.Client.entitlements:6 of
msgid "Limit the fetched entitlements to entitlements owned by this user."
msgstr ""

#: discord.client.Client.entitlements:9 fc74e3fd9066451da15dbb859f393f0b of
msgid "Limit the fetched entitlements to entitlements that are for these SKUs."
msgstr ""

#: a8980247c8994cc6a3315e3acd06b88b discord.client.Client.entitlements:12 of
msgid ""
"Retrieves guilds before this date or object. If a datetime is provided, "
"it is recommended to use a UTC-aware datetime. If the datetime is naive, "
"it is assumed to be local time."
msgstr ""

#: d2f6b335c5d149edb5739256c2d0ac02 discord.client.Client.entitlements:17 of
msgid ""
"Retrieve guilds after this date or object. If a datetime is provided, it "
"is recommended to use a UTC-aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: 4468fb7df14b42d6b759894e1d023b0e discord.client.Client.entitlements:22 of
msgid ""
"The number of entitlements to retrieve. If ``None``, retrieves every "
"entitlement, which may be slow. Defaults to ``100``."
msgstr ""

#: 103afa9d7a7c469186412d2b0f7fd59d discord.client.Client.entitlements:27 of
msgid "Limit the fetched entitlements to entitlements owned by this guild."
msgstr ""

#: discord.client.Client.entitlements:30 f7befb3d512042b89e8a107e5a39f44f of
msgid ""
"Whether to limit the fetched entitlements to those that have not ended. "
"Defaults to ``False``."
msgstr ""

#: 1ac0e449c2064ee3872b93131ef5099f acdddbfef28f4deeba67e1c0eeae3126
#: db580d1226264744a222ffee4584ffd4 discord.abc.Messageable.history
#: discord.bot.ApplicationCommandMixin.walk_application_commands
#: discord.client.Client.entitlements discord.client.Client.fetch_guilds
#: discord.client.Client.get_all_channels discord.client.Client.get_all_members
#: discord.ext.commands.cog.Cog.walk_commands
#: discord.ext.commands.core.GroupMixin.walk_commands
#: e2d006ad6c904920bebc27cd7a383901 of
msgid "Yields"
msgstr ""

#: 22f913aa3bef434cb525ae9ec6673c3b discord.client.Client.entitlements:34 of
msgid ":class:`.Entitlement` -- The application's entitlements."
msgstr ""

#: dcca79b2fa794e09b838c1ab709d75b9 discord.client.Client.entitlements:36 of
msgid "Retrieving the entitlements failed."
msgstr ""

#: 295caaa8c9a047a1a1ee5c2029093ff0 discord.client.Client.entitlements:37 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.iterators.EntitlementIterator\\``"
msgstr ""

#: 1713b7f68ab24b69904742961b2e7c20 3321eb8445bb48ffb68d9cb74a155012
#: c41d42eda335471399cd63c006bb2131 discord.abc.Messageable.history:39
#: discord.client.Client.entitlements:40 discord.client.Client.fetch_guilds:35
#: discord.client.Client.wait_for:42 discord.ext.commands.core.check:37
#: discord.ext.commands.core.check_any:20 of
msgid "Examples"
msgstr ""

#: 94bc24f4c61e41b5964c4a1322f961f1 9c43804aa1e84f4db26daf70ceda2518
#: c44882f2d2fa4e16be22d009df4a9e97 discord.abc.Messageable.history:40
#: discord.client.Client.entitlements:41 discord.client.Client.fetch_guilds:36
#: of
msgid "Usage ::"
msgstr ""

#: 30d73cc7fe64490fa9bc06ee689bd9ca 843417dafe404d64bc7fa228cb7035a1
#: discord.client.Client.entitlements:46 discord.client.Client.fetch_guilds:41
#: of
msgid "Flattening into a list ::"
msgstr ""

#: 828a83477bcd4a6481593e689e4c7a6e 890c3220aa92482a88d9eb963d89a73f
#: discord.abc.Messageable.history:52 discord.client.Client.entitlements:50
#: discord.client.Client.fetch_guilds:46 f3a460b6dbc644f1a519e478316d2ace of
msgid "All parameters are optional."
msgstr ""

#: 8e4eb4c3e9b145dba548425d3c8bd29d discord.ext.commands.Bot.extensions:1 of
msgid "A read-only mapping of extension name to extension."
msgstr ""

#: 97276bbeae3c4082aa2038967c3d1a7e discord.client.Client.fetch_application:1
#: of
msgid "|coro| Retrieves a :class:`.PartialAppInfo` from an application ID."
msgstr ""

#: c1b69445d0ac4ea887666dd2f395ccab discord.client.Client.fetch_application:5
#: of
msgid "The application ID to retrieve information from."
msgstr ""

#: d55c33490ff042be856a57e1e3950e4e discord.client.Client.fetch_application:8
#: of
msgid "The application information."
msgstr ""

#: discord.client.Client.fetch_application:9 e7a5155c45d6429799f5a97c8dfa4bc0
#: of
msgid ":class:`.PartialAppInfo`"
msgstr ""

#: discord.client.Client.fetch_application:11 fd59854a364349e9be47834da22da297
#: of
msgid "An application with this ID does not exist."
msgstr ""

#: b599a77bcabf40d6aa2b743085912ee5 discord.client.Client.fetch_application:12
#: of
msgid "Retrieving the application failed."
msgstr ""

#: discord.client.Client.fetch_channel:3 f979de9b2d7e43efb9fcc960cc1168f5 of
msgid ""
"Retrieves a :class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, or "
":class:`.Thread` with the specified ID."
msgstr ""

#: 1b2978a016b84e08a0154c5e484807fb discord.client.Client.fetch_channel:7 of
msgid ""
"This method is an API call. For general usage, consider "
":meth:`get_channel` instead."
msgstr ""

#: 88777b1026884b65845244f98566ac70 discord.client.Client.fetch_channel:11 of
msgid "The channel from the ID."
msgstr ""

#: 27fa5ae581504a6a9713f76e82cc767c discord.client.Client.fetch_channel:12 of
msgid ""
"Union[:class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, "
":class:`.Thread`]"
msgstr ""

#: 7325a3b3e22f45189185a1fbd5628349 discord.client.Client.fetch_channel:14 of
msgid "An unknown channel type was received from Discord."
msgstr ""

#: 9235f18a77de465ab639f9dedb10cb0b discord.client.Client.fetch_channel:15 of
msgid "Retrieving the channel failed."
msgstr ""

#: discord.client.Client.fetch_channel:16 f1d9c0f459c0447fb1203723387ced8f of
msgid "Invalid Channel ID."
msgstr ""

#: 9410d10bcdb94e0b9d7c7f7c89b65810 discord.client.Client.fetch_channel:17 of
msgid "You do not have permission to fetch this channel."
msgstr ""

#: de71bd64cf04416ea9bf2abe61ff72ef discord.client.Client.fetch_guild:3 of
msgid "Retrieves a :class:`.Guild` from an ID."
msgstr ""

#: discord.client.Client.fetch_guild:7 edb1ce0678394fe9a6f1189463300018 of
msgid ""
"Using this, you will **not** receive :attr:`.Guild.channels`, "
":attr:`.Guild.members`, :attr:`.Member.activity` and "
":attr:`.Member.voice` per :class:`.Member`."
msgstr ""

#: c79ec39844b242ddab93abb4013a80bb discord.client.Client.fetch_guild:12 of
msgid ""
"This method is an API call. For general usage, consider :meth:`get_guild`"
" instead."
msgstr ""

#: discord.client.Client.fetch_guild:15 f3271bc911514fa7805b7c965fb3840d of
msgid "The guild's ID to fetch from."
msgstr ""

#: 3b20121f198d4f388ed94fe5e12cdba9 discord.client.Client.fetch_guild:18 of
msgid ""
"Whether to include count information in the guild. This fills the "
":attr:`.Guild.approximate_member_count` and "
":attr:`.Guild.approximate_presence_count` fields.  .. versionadded:: 2.0"
msgstr ""

#: 732356fbef43429eb694993f26d59533 discord.client.Client.fetch_guild:18 of
msgid ""
"Whether to include count information in the guild. This fills the "
":attr:`.Guild.approximate_member_count` and "
":attr:`.Guild.approximate_presence_count` fields."
msgstr ""

#: a3f16751f69144a3b4797e7f1b235a0c discord.client.Client.fetch_guild:25 of
msgid "The guild from the ID."
msgstr ""

#: a68501f7e36b4401a713f42b2c3a2f1e discord.client.Client.fetch_guild:28 of
msgid "You do not have access to the guild."
msgstr ""

#: 7b41d7287cd448e680bd03c2ebdf67a0 discord.client.Client.fetch_guild:29 of
msgid "Getting the guild failed."
msgstr ""

#: 22fe20229852494988db210ec83c4f4d discord.client.Client.fetch_guilds:1 of
msgid "Retrieves an :class:`.AsyncIterator` that enables receiving your guilds."
msgstr ""

#: 4f617e895bd74f44b301bbfdc7c4d06b discord.client.Client.fetch_guilds:5 of
msgid ""
"Using this, you will only receive :attr:`.Guild.owner`, "
":attr:`.Guild.icon`, :attr:`.Guild.id`, and :attr:`.Guild.name` per "
":class:`.Guild`."
msgstr ""

#: 183ae9d745be416ebb36824adc018c25 discord.client.Client.fetch_guilds:10 of
msgid ""
"This method is an API call. For general usage, consider :attr:`guilds` "
"instead."
msgstr ""

#: 5e0f42cbfd094760b0f8d936646ebd13 discord.client.Client.fetch_guilds:13 of
msgid ""
"The number of guilds to retrieve. If ``None``, it retrieves every guild "
"you have access to. Note, however, that this would make it a slow "
"operation. Defaults to ``100``."
msgstr ""

#: discord.client.Client.fetch_guilds:19 f76547af39e240eda917471e6066d68f of
msgid ""
"Retrieves guilds before this date or object. If a datetime is provided, "
"it is recommended to use a UTC aware datetime. If the datetime is naive, "
"it is assumed to be local time."
msgstr ""

#: cb18e3313c264059aed626e8ca209206 discord.client.Client.fetch_guilds:24 of
msgid ""
"Retrieve guilds after this date or object. If a datetime is provided, it "
"is recommended to use a UTC aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: bc466b15258f4b2aa8ac9a96e0f937d7 discord.client.Client.fetch_guilds:29 of
msgid ":class:`.Guild` -- The guild with the guild data parsed."
msgstr ""

#: 15f4a4f866324c7ba489cd589b442544 discord.client.Client.fetch_guilds:31 of
msgid "Getting the guilds failed."
msgstr ""

#: 75ee4f3a774e4d8f987a57c3125133f5 discord.client.Client.fetch_guilds:32 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.iterators.GuildIterator\\``"
msgstr ""

#: discord.client.Client.fetch_invite:3 ff98e5f070514ea2b279d2d1f6472a4f of
msgid "Gets an :class:`.Invite` from a discord.gg URL or ID."
msgstr ""

#: 7fde0851174d4b20815dc8e56fc1e221 discord.client.Client.fetch_invite:7 of
msgid ""
"If the invite is for a guild you have not joined, the guild and channel "
"attributes of the returned :class:`.Invite` will be "
":class:`.PartialInviteGuild` and :class:`.PartialInviteChannel` "
"respectively."
msgstr ""

#: 7069a208e047405292e67ba908588d72 discord.client.Client.fetch_invite:12 of
msgid "The Discord invite ID or URL (must be a discord.gg URL)."
msgstr ""

#: 7eb4713ed1164e76849f0cee607b077d discord.client.Client.fetch_invite:15 of
msgid ""
"Whether to include count information in the invite. This fills the "
":attr:`.Invite.approximate_member_count` and "
":attr:`.Invite.approximate_presence_count` fields."
msgstr ""

#: 009f29d2f1774d75a283c895fcc1c121 discord.client.Client.fetch_invite:20 of
msgid ""
"Whether to include the expiration date of the invite. This fills the "
":attr:`.Invite.expires_at` field.  .. versionadded:: 2.0"
msgstr ""

#: a05f7b7813ee445883dbc3cbb934d233 discord.client.Client.fetch_invite:20 of
msgid ""
"Whether to include the expiration date of the invite. This fills the "
":attr:`.Invite.expires_at` field."
msgstr ""

#: discord.client.Client.fetch_invite:26 e450c21618cc4c59822e7eca956eb52f of
msgid ""
"The ID of the scheduled event to be associated with the event.  See "
":meth:`Invite.set_scheduled_event` for more info on event invite linking."
"  .. versionadded:: 2.0"
msgstr ""

#: 1b421bdc1a804a888d03595605dccbc8 discord.client.Client.fetch_invite:26 of
msgid "The ID of the scheduled event to be associated with the event."
msgstr ""

#: 0a8572f3c1154620828f50adc2fc3755 discord.client.Client.fetch_invite:28 of
msgid ""
"See :meth:`Invite.set_scheduled_event` for more info on event invite "
"linking."
msgstr ""

#: 67ada2da2c8f457abcdfe820c35edb34 discord.client.Client.fetch_invite:34 of
msgid "The invite from the URL/ID."
msgstr ""

#: discord.client.Client.fetch_invite:35 f4512599faea4485b636174c2e95a371 of
msgid ":class:`.Invite`"
msgstr ""

#: ae0ccbddaeb4447b81059e5f08572ab7 discord.client.Client.fetch_invite:37 of
msgid "The invite has expired or is invalid."
msgstr ""

#: 7fa0a78b22de41ed8f3547cbc22044fd discord.client.Client.fetch_invite:38 of
msgid "Getting the invite failed."
msgstr ""

#: d96e9f2b7e40438c9c764c153268da08
#: discord.client.Client.fetch_premium_sticker_packs:3 of
msgid "Retrieves all available premium sticker packs."
msgstr ""

#: be5f3a4b0acc431c9d9094685b52c871
#: discord.client.Client.fetch_premium_sticker_packs:7 of
msgid "All available premium sticker packs."
msgstr ""

#: d46c4e3e7bd0488c971b6236c132c575
#: discord.client.Client.fetch_premium_sticker_packs:8 of
msgid "List[:class:`.StickerPack`]"
msgstr ""

#: 6be215fce77e413fbf525b18952eacf9
#: discord.client.Client.fetch_premium_sticker_packs:10 of
msgid "Retrieving the sticker packs failed."
msgstr ""

#: 97b00444639641fc920ebe9efab0d1ba
#: discord.client.Client.fetch_role_connection_metadata_records:3 of
msgid "Fetches the bot's role connection metadata records."
msgstr ""

#: afcef3e1573241dda22efc2bc8eb0113
#: discord.client.Client.fetch_role_connection_metadata_records:7 of
msgid "The bot's role connection metadata records."
msgstr ""

#: 1c6038fbd90940a99452e42246965fcd
#: discord.client.Client.fetch_role_connection_metadata_records:8
#: discord.client.Client.update_role_connection_metadata_records:12
#: f85d9e595c1d4f359d02d7b2baf0b555 of
msgid "List[:class:`.ApplicationRoleConnectionMetadata`]"
msgstr ""

#: 1d947818db1f4e21a9a1a157a728523a discord.client.Client.fetch_skus:3 of
msgid "Fetches the bot's SKUs."
msgstr ""

#: d7510512f1274c79ad9b92b41e15793a discord.client.Client.fetch_skus:7 of
msgid "The bot's SKUs."
msgstr ""

#: a17b32aff2164b37be4992da3fa602b3 discord.client.Client.fetch_skus:8 of
msgid "List[:class:`.SKU`]"
msgstr ""

#: discord.client.Client.fetch_stage_instance:3
#: ff7eb61902374a9b9694a60b27e0b35f of
msgid "Gets a :class:`.StageInstance` for a stage channel id."
msgstr ""

#: 29afd240aa184ce2b8ed8ec77aaba1e9
#: discord.client.Client.fetch_stage_instance:8 of
msgid "The stage channel ID."
msgstr ""

#: 0c2c6ce8c1be4ce989544e552be5a9c0
#: discord.client.Client.fetch_stage_instance:11 of
msgid "The stage instance from the stage channel ID."
msgstr ""

#: b7086bac74e049e7aaf21d056f2891b3
#: discord.client.Client.fetch_stage_instance:12 of
msgid ":class:`.StageInstance`"
msgstr ""

#: discord.client.Client.fetch_stage_instance:14
#: fa27d36619154f23b87e1454acdd2c5f of
msgid "The stage instance or channel could not be found."
msgstr ""

#: 34b64cf26dd147618b0f7319a1740988
#: discord.client.Client.fetch_stage_instance:15 of
msgid "Getting the stage instance failed."
msgstr ""

#: discord.client.Client.fetch_sticker:3 f4fa9ab7c1a24513b89988310ac21c10 of
msgid "Retrieves a :class:`.Sticker` with the specified ID."
msgstr ""

#: 29648dc231984792ae7aa4469ac255e8 discord.client.Client.fetch_sticker:7 of
msgid "The sticker you requested."
msgstr ""

#: discord.client.Client.fetch_sticker:8 f61c55e61f634f758236b63c220ed5c0 of
msgid "Union[:class:`.StandardSticker`, :class:`.GuildSticker`]"
msgstr ""

#: discord.client.Client.fetch_sticker:10 fc7eb527b8b34720a79877daef24b860 of
msgid "Retrieving the sticker failed."
msgstr ""

#: 5174684b72234a59aef76d140423d20d discord.client.Client.fetch_sticker:11 of
msgid "Invalid sticker ID."
msgstr ""

#: ba25538202404ece8e0799e24cc225e8 discord.client.Client.fetch_template:3 of
msgid "Gets a :class:`.Template` from a discord.new URL or code."
msgstr ""

#: 7b26287c2057457497765948aa0f9c14 discord.client.Client.fetch_template:6 of
msgid "The Discord Template Code or URL (must be a discord.new URL)."
msgstr ""

#: adcdc3cfb5d64c07946c55aa2e3b0466 discord.client.Client.fetch_template:9 of
msgid "The template from the URL/code."
msgstr ""

#: 2973bc0fd60c44818c36d29ab2bd1156 discord.client.Client.fetch_template:10 of
msgid ":class:`.Template`"
msgstr ""

#: discord.client.Client.fetch_template:12 e4b1d12659f942f3bce704baf2b2f6d6 of
msgid "The template is invalid."
msgstr ""

#: d65929c5b5a04a258026ede0724fc4df discord.client.Client.fetch_template:13 of
msgid "Getting the template failed."
msgstr ""

#: 71afe2141b384fa5b9855d506b0f85f8 discord.client.Client.fetch_user:3 of
msgid ""
"Retrieves a :class:`~discord.User` based on their ID. You do not have to "
"share any guilds with the user to get this information, however many "
"operations do require that you do."
msgstr ""

#: 63caafa99b464ecba062135b46365975 discord.client.Client.fetch_user:9 of
msgid ""
"This method is an API call. If you have :attr:`discord.Intents.members` "
"and member cache enabled, consider :meth:`get_user` instead."
msgstr ""

#: 50a668aa170c4373aac97fc0a8a14b8a discord.client.Client.fetch_user:13 of
msgid "The user's ID to fetch from."
msgstr ""

#: 0647be848cbd4b258ebcc87840b89635 discord.client.Client.fetch_user:16 of
msgid "The user you requested."
msgstr ""

#: c908af689e304ea3bd9f626173a93765 discord.client.Client.fetch_user:17 of
msgid ":class:`~discord.User`"
msgstr ""

#: discord.client.Client.fetch_user:19 f567052fb055456c8ad1fbc3829b2ea3 of
msgid "A user with this ID does not exist."
msgstr ""

#: 0fa0e89be2e041a6a5cb91ce3b84f051 discord.client.Client.fetch_user:20 of
msgid "Fetching the user failed."
msgstr ""

#: 9b847aa5ea2b4c86b5f64749b6132bcd discord.client.Client.fetch_webhook:3 of
msgid "Retrieves a :class:`.Webhook` with the specified ID."
msgstr ""

#: c5cc8c5449904509b773a938723d081b discord.client.Client.fetch_webhook:5 of
msgid "The webhook you requested."
msgstr ""

#: discord.client.Client.fetch_webhook:6 e9b26972e0e8420a861e3228ac815486 of
msgid ":class:`.Webhook`"
msgstr ""

#: ab91f98f4cbf49a19efa88ac091db2db discord.client.Client.fetch_webhook:8 of
msgid "Retrieving the webhook failed."
msgstr ""

#: 4755f27ecf194457b272d0eb7a579cf4 discord.client.Client.fetch_webhook:9 of
msgid "Invalid webhook ID."
msgstr ""

#: b6b0773a5d794264aad31f84bb06e24d discord.client.Client.fetch_webhook:10 of
msgid "You do not have permission to fetch this webhook."
msgstr ""

#: 2f3d59f28dd84376becd6c9687f23b72 discord.client.Client.fetch_widget:3 of
msgid "Gets a :class:`.Widget` from a guild ID."
msgstr ""

#: a56e920a963d4c6180465244f8ea2461 discord.client.Client.fetch_widget:7 of
msgid "The guild must have the widget enabled to get this information."
msgstr ""

#: 35b8312d608f4df0bea14aedb684366f discord.client.Client.fetch_widget:10 of
msgid "The ID of the guild."
msgstr ""

#: discord.client.Client.fetch_widget:13 efeb960cd7004534adc71634f17ed0cd of
msgid "The guild's widget."
msgstr ""

#: ce6c7c941e4d42699364e7e4595e5773 discord.client.Client.fetch_widget:14 of
msgid ":class:`.Widget`"
msgstr ""

#: 167e8f21acd347249d24f6d8970351f4 discord.client.Client.fetch_widget:16 of
msgid "The widget for this guild is disabled."
msgstr ""

#: 7f5a896385554d7ea4671665ba911293 discord.client.Client.fetch_widget:17 of
msgid "Retrieving the widget failed."
msgstr ""

#: 85ef0a2cbac449e680f8f39698ec1a9c discord.client.Client.get_all_channels:1 of
msgid ""
"A generator that retrieves every :class:`.abc.GuildChannel` the client "
"can 'access'."
msgstr ""

#: 72d83d8cefd0467bbfcf9ddc6b6a47cf c91d10a08ad54d2980f75fb326863880
#: discord.client.Client.get_all_channels:3
#: discord.client.Client.get_all_members:3 of
msgid "This is equivalent to: ::"
msgstr ""

#: 32d5a41f29ab4eab83ff4181703345a6 discord.client.Client.get_all_channels:11
#: of
msgid ""
"Just because you receive a :class:`.abc.GuildChannel` does not mean that "
"you can communicate in said channel. "
":meth:`.abc.GuildChannel.permissions_for` should be used for that."
msgstr ""

#: 9860d3eda1264a0c8df1f138ffe0bb12 discord.client.Client.get_all_channels:15
#: of
msgid ":class:`.abc.GuildChannel` -- A channel the client can 'access'."
msgstr ""

#: 9dfe9cfdde67409dbe4f8f536a632605 discord.client.Client.get_all_members:1 of
msgid "Returns a generator with every :class:`.Member` the client can see."
msgstr ""

#: af882d2cbfb6416a9e8ae82fe4d00b7d discord.client.Client.get_all_members:9 of
msgid ":class:`.Member` -- A member the client can see."
msgstr ""

#: beeb38432c18467199e1986a4a5a5802
#: discord.bot.ApplicationCommandMixin.get_application_command:1 of
msgid "Get an :class:`.ApplicationCommand` from the internal list of commands."
msgstr ""

#: c33347ffc3c742ffa39ad2da8713137b
#: discord.bot.ApplicationCommandMixin.get_application_command:7 of
msgid "The qualified name of the command to get."
msgstr ""

#: 2f30620e074f4420a037b25f8352a23a
#: discord.bot.ApplicationCommandMixin.get_application_command:10 of
msgid "The guild ids associated to the command to get."
msgstr ""

#: b6355726cccf49c08342b8e9bbe0f50f
#: discord.bot.ApplicationCommandMixin.get_application_command:13 of
msgid "The type of the command to get. Defaults to :class:`.ApplicationCommand`."
msgstr ""

#: 8075abb274e04650a70502fe718d48e1
#: discord.bot.ApplicationCommandMixin.get_application_command:16
#: discord.ext.commands.core.GroupMixin.get_command:14 of
msgid "The command that was requested. If not found, returns ``None``."
msgstr ""

#: a0421f9c994a4d42b5d1d086df607ef7
#: discord.bot.ApplicationCommandMixin.get_application_command:17
#: discord.bot.ApplicationCommandMixin.remove_application_command:12 of
msgid "Optional[:class:`.ApplicationCommand`]"
msgstr ""

#: 211fd50ce0b145a58e93f891f7e62aac
#: discord.bot.ApplicationCommandMixin.get_application_context:3 of
msgid "Returns the invocation context from the interaction."
msgstr ""

#: 5ff022119a8143e9b08a979f66a6e2a0
#: discord.bot.ApplicationCommandMixin.get_application_context:5
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:5 of
msgid ""
"This is a more low-level counter-part for "
":meth:`.process_application_commands` to allow users more fine-grained "
"control over the processing."
msgstr ""

#: 976de055999f46f58eea47f454eaef7a
#: discord.bot.ApplicationCommandMixin.get_application_context:9
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:9 of
msgid "The interaction to get the invocation context from."
msgstr ""

#: 0802b984866b410088e3bb08e945ee73
#: discord.bot.ApplicationCommandMixin.get_application_context:12 of
msgid ""
"The factory class that will be used to create the context. By default, "
"this is :class:`.ApplicationContext`. Should a custom class be provided, "
"it must be similar enough to :class:`.ApplicationContext`\\'s interface."
msgstr ""

#: 3b38ccebb4774f71be6c3c835dd6d70e
#: discord.bot.ApplicationCommandMixin.get_application_context:17
#: discord.ext.commands.bot.BotBase.get_context:22 of
msgid ""
"The invocation context. The type of this can change via the ``cls`` "
"parameter."
msgstr ""

#: 31df93db9f4145448a26c7500326286c
#: discord.bot.ApplicationCommandMixin.get_application_context:19 of
msgid ":class:`.ApplicationContext`"
msgstr ""

#: 1557cc6eb4f447ad9db07037606871a3
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:3 of
msgid "Returns the autocomplete context from the interaction."
msgstr ""

#: 42a5b4ca86ee472ca7a3804eace741a7
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:12 of
msgid ""
"The factory class that will be used to create the context. By default, "
"this is :class:`.AutocompleteContext`. Should a custom class be provided,"
" it must be similar enough to :class:`.AutocompleteContext`\\'s "
"interface."
msgstr ""

#: ca667b8dd303434b96f15be6e466fa15
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:17 of
msgid ""
"The autocomplete context. The type of this can change via the ``cls`` "
"parameter."
msgstr ""

#: 75759b0976f74cb6b002eed64c030ee9
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:19 of
msgid ":class:`.AutocompleteContext`"
msgstr ""

#: 54305eefde134b89aedcd1a998ec40c6 discord.client.Client.get_channel:1 of
msgid "Returns a channel or thread with the given ID."
msgstr ""

#: abb8574be99a40e3abe788514c73ab7a discord.client.Client.get_channel:4
#: discord.client.Client.get_emoji:4 discord.client.Client.get_guild:4
#: discord.client.Client.get_message:7
#: discord.client.Client.get_or_fetch_user:6
#: discord.client.Client.get_stage_instance:6 discord.client.Client.get_user:4
#: of
msgid "The ID to search for."
msgstr ""

#: 107b87ee058841a9966abb7b7ccf4fcb discord.client.Client.get_channel:7 of
msgid "The returned channel or ``None`` if not found."
msgstr ""

#: 7f38faba9ead4fa386a53e29f69d7559 discord.client.Client.get_channel:8 of
msgid ""
"Optional[Union[:class:`.abc.GuildChannel`, :class:`.Thread`, "
":class:`.abc.PrivateChannel`]]"
msgstr ""

#: b4d2e92605154bebadcedcbf79765885 discord.cog.CogMixin.get_cog:1 of
msgid "Gets the cog instance requested."
msgstr ""

#: bb4e1d06781a402ab963ee718abec1bc discord.cog.CogMixin.get_cog:3 of
msgid "If the cog is not found, ``None`` is returned instead."
msgstr ""

#: 5ecdd5ca3b364d2bb11d4214a316a07a discord.cog.CogMixin.get_cog:6 of
msgid ""
"The name of the cog you are requesting. This is equivalent to the name "
"passed via keyword argument in class creation or the class name if "
"unspecified."
msgstr ""

#: ceac76e5ab5e40dea8f50d62ced7e0f9 discord.cog.CogMixin.get_cog:11 of
msgid "The cog that was requested. If not found, returns ``None``."
msgstr ""

#: 076958fd76f448899e7a5f907e409cea discord.cog.CogMixin.get_cog:12
#: discord.ext.commands.HelpCommand.cog:10 discord.ext.commands.core.Command:62
#: of
msgid "Optional[:class:`Cog`]"
msgstr ""

#: d555628fb6a74c5697817061624609d9
#: discord.ext.commands.core.GroupMixin.get_command:1 of
msgid "Get a :class:`.Command` from the internal list of commands."
msgstr ""

#: 77d72aaabce64e60a149d21b1319d604
#: discord.ext.commands.core.GroupMixin.get_command:4 of
msgid "This could also be used as a way to get aliases."
msgstr ""

#: 3f540ff7c6ba442abc0635a2ce276025
#: discord.ext.commands.core.GroupMixin.get_command:6 of
msgid ""
"The name could be fully qualified (e.g. ``'foo bar'``) will get the "
"subcommand ``bar`` of the group command ``foo``. If a subcommand is not "
"found then ``None`` is returned just as usual."
msgstr ""

#: d9354bca6a4948efb9716c2410e9413a
#: discord.ext.commands.core.GroupMixin.get_command:11 of
msgid "The name of the command to get."
msgstr ""

#: 98d36fa1cabf419197df81cba05fdb4e discord.ext.commands.context.Context:56
#: discord.ext.commands.context.Context:81
#: discord.ext.commands.core.Command:103
#: discord.ext.commands.core.GroupMixin.get_command:15 of
msgid "Optional[:class:`Command`]"
msgstr ""

#: 7b7c1555a358410c85f6ef2538a9156b
#: discord.ext.commands.bot.BotBase.get_context:3 of
msgid "Returns the invocation context from the message."
msgstr ""

#: c65ae05ccc974f74b5932810e2ba0643
#: discord.ext.commands.bot.BotBase.get_context:5 of
msgid ""
"This is a more low-level counter-part for :meth:`.process_commands` to "
"allow users more fine-grained control over the processing."
msgstr ""

#: 5291ea7e7d094bb28812eed968557647
#: discord.ext.commands.bot.BotBase.get_context:8 of
msgid ""
"The returned context is not guaranteed to be a valid invocation context, "
":attr:`.Context.valid` must be checked to make sure it is. If the context"
" is not valid then it is not a valid candidate to be invoked under "
":meth:`~.Bot.invoke`."
msgstr ""

#: 8b35a61c7ba94b27a0c920be2cbc9a74
#: discord.ext.commands.bot.BotBase.get_context:14 of
msgid "The message to get the invocation context from."
msgstr ""

#: 4106c84ada9b403a9888f3aca451fac7
#: discord.ext.commands.bot.BotBase.get_context:17 of
msgid ""
"The factory class that will be used to create the context. By default, "
"this is :class:`.Context`. Should a custom class be provided, it must be "
"similar enough to :class:`.Context`\\'s interface."
msgstr ""

#: a560748f69f04cf0a14045b10804954e
#: discord.ext.commands.bot.BotBase.get_context:24 of
msgid ":class:`.Context`"
msgstr ""

#: 7b604a1feb4d46a2bca090967d256ef8
#: discord.bot.ApplicationCommandMixin.get_desynced_commands:3 of
msgid ""
"Gets the list of commands that are desynced from discord. If ``guild_id``"
" is specified, it will only return guild commands that are desynced from "
"said guild, else it will return global commands."
msgstr ""

#: b60a51ab863e464eb9c454fdae9c6a22
#: discord.bot.ApplicationCommandMixin.get_desynced_commands:7 of
msgid ""
"This function is meant to be used internally, and should only be used if "
"you want to override the default command registration behavior."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:13
#: e6a978a1641c44a283815caa0a1909c8 of
msgid ""
"The guild id to get the desynced commands for, else global commands if "
"unspecified."
msgstr ""

#: 500100e533c44af7b7407da993c87eb1
#: discord.bot.ApplicationCommandMixin.get_desynced_commands:16 of
msgid ""
"If you already fetched the commands, you can pass them here to be used. "
"Not recommended for typical usage."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:19
#: f817262ce5e64a8590082a8280041694 of
msgid ""
"A list of the desynced commands. Each will come with at least the ``cmd``"
" and ``action`` keys, which respectively contain the command and the "
"action to perform. Other keys may also be present depending on the "
"action, including ``id``."
msgstr ""

#: ab7dff05807644ed96e2b974b63dff7e
#: discord.bot.ApplicationCommandMixin.get_desynced_commands:22 of
msgid "List[Dict[:class:`str`, Any]]"
msgstr ""

#: 85c87b8fec81465c9020b141be856fb8 discord.client.Client.get_emoji:1 of
msgid "Returns an emoji with the given ID."
msgstr ""

#: 157f1b3c941147a19ce8edf840834d4a discord.client.Client.get_emoji:7 of
msgid "The custom emoji or ``None`` if not found."
msgstr ""

#: 1c0cbebe556443ec8b777892bbb413ca discord.client.Client.get_emoji:8 of
msgid "Optional[:class:`.Emoji`]"
msgstr ""

#: 3c43e6dcda3848efb665d49d3cb97ad1 discord.client.Client.get_guild:1 of
msgid "Returns a guild with the given ID."
msgstr ""

#: 0351a20e8ffe40e09099eb75e30dc93d discord.client.Client.get_guild:7 of
msgid "The guild or ``None`` if not found."
msgstr ""

#: 4df5d4e82b5c432789f6a9477c590bd3 discord.client.Client.get_guild:8 of
msgid "Optional[:class:`.Guild`]"
msgstr ""

#: ce8c96bbbff74f8bbd3ebd9b88d31149 discord.client.Client.get_message:1 of
msgid "Returns a message the given ID."
msgstr ""

#: 560f12cac3994e419d298070a28577bf discord.client.Client.get_message:3 of
msgid ""
"This is useful if you have a message_id but don't want to do an API call "
"to access the message."
msgstr ""

#: 3faa4e73ac324172bd8e447ab0a92e16 discord.client.Client.get_message:10 of
msgid "The returned message or ``None`` if not found."
msgstr ""

#: 29a148422678430dbb20acdb70e8f5cb discord.client.Client.get_message:11 of
msgid "Optional[:class:`.Message`]"
msgstr ""

#: 275a6d7b15584cc595412689b620e5d8 discord.client.Client.get_or_fetch_user:3
#: of
msgid "Looks up a user in the user cache or fetches if not found."
msgstr ""

#: a0ddffa324eb4f69b621dc78d6085347 discord.client.Client.get_or_fetch_user:9
#: discord.client.Client.get_user:7 of
msgid "The user or ``None`` if not found."
msgstr ""

#: 6750b7f88cee434d86d97c6e26df794e discord.client.Client.get_or_fetch_user:10
#: discord.client.Client.get_user:8 of
msgid "Optional[:class:`~discord.User`]"
msgstr ""

#: discord.client.Client.get_partial_messageable:1
#: e430c83c877c4c3cab0b0160e4441a7c of
msgid "Returns a partial messageable with the given channel ID."
msgstr ""

#: 0906235be1c847718975e2d5950d3263
#: discord.client.Client.get_partial_messageable:3 of
msgid ""
"This is useful if you have a channel_id but don't want to do an API call "
"to send messages to it."
msgstr ""

#: 20f68ab6445a4e1eb3d21d94d48d56f5
#: discord.client.Client.get_partial_messageable:9 of
msgid "The channel ID to create a partial messageable for."
msgstr ""

#: discord.client.Client.get_partial_messageable:12
#: f4cbce994233498eb9c3f7ab43945ed7 of
msgid "The underlying channel type for the partial messageable."
msgstr ""

#: 448098dfa06645d1a21f0383e872fb66
#: discord.client.Client.get_partial_messageable:15 of
msgid "The partial messageable"
msgstr ""

#: 0c8f5fc1798148dc82d346f118df8ac8
#: discord.client.Client.get_partial_messageable:16 of
msgid ":class:`.PartialMessageable`"
msgstr ""

#: 6a88dea154924ac58b40c4ab9e98a394 discord.client.Client.get_poll:1 of
msgid "Returns a poll attached to the given message ID."
msgstr ""

#: 4ad781ecc41c4c0fa34cdc928810b164 discord.client.Client.get_poll:4 of
msgid "The message ID of the poll to search for."
msgstr ""

#: b3004ecd7bfe478c89204898761a7aa8 discord.client.Client.get_poll:7 of
msgid "The poll or ``None`` if not found."
msgstr ""

#: 6070523df32e409d9b1fac2a8f96b3b4 discord.client.Client.get_poll:8 of
msgid "Optional[:class:`.Poll`]"
msgstr ""

#: 05cce8cd9a4d41cb865b62006f90c2f3
#: discord.ext.commands.bot.BotBase.get_prefix:3 of
msgid ""
"Retrieves the prefix the bot is listening to with the message as a "
"context."
msgstr ""

#: c7ba4ac424cc4ca19751b328abfe0998
#: discord.ext.commands.bot.BotBase.get_prefix:7 of
msgid "The message context to get the prefix of."
msgstr ""

#: 4715b82f27524b18bb0212b3bd49ff25
#: discord.ext.commands.bot.BotBase.get_prefix:10 of
msgid "A list of prefixes or a single prefix that the bot is listening for."
msgstr ""

#: 23e4ab83cc1a4d03a15a745646a517a6
#: discord.ext.commands.bot.BotBase.get_prefix:12 of
msgid "Union[List[:class:`str`], :class:`str`]"
msgstr ""

#: 19d360590711420b85975a29897dd4da discord.client.Client.get_stage_instance:1
#: of
msgid "Returns a stage instance with the given stage channel ID."
msgstr ""

#: c1c509ff2b7c46abbd81eba5db015104 discord.client.Client.get_stage_instance:9
#: of
msgid "The stage instance or ``None`` if not found."
msgstr ""

#: 8afa09e8ce9f483187ee524cfbbb7769 discord.client.Client.get_stage_instance:10
#: of
msgid "Optional[:class:`.StageInstance`]"
msgstr ""

#: discord.client.Client.get_sticker:1 f3c2837e8008408bbf23da1bb066e7e6 of
msgid "Returns a guild sticker with the given ID."
msgstr ""

#: 36b40417971b4043b37fd64a140e398f discord.client.Client.get_sticker:7 of
msgid ""
"To retrieve standard stickers, use :meth:`.fetch_sticker`. or "
":meth:`.fetch_premium_sticker_packs`."
msgstr ""

#: 1d52b076ff9e4c908e00cd5a15c2ab81 discord.client.Client.get_sticker:10 of
msgid "The sticker or ``None`` if not found."
msgstr ""

#: 72554f8103de4c6e9cb6a9beaf5e0b7d discord.client.Client.get_sticker:11 of
msgid "Optional[:class:`.GuildSticker`]"
msgstr ""

#: ba4b9a4cd1454d8f96be7a8f51de1611 discord.client.Client.get_user:1 of
msgid "Returns a user with the given ID."
msgstr ""

#: 3c6ffdbfdb4345c6a359147783febc67 discord.ext.commands.Bot.guilds:1 of
msgid "The guilds that the connected client is a member of."
msgstr ""

#: 209488a932bb47e0931fac3e4d09609c discord.ext.commands.Bot.intents:1 of
msgid "The intents configured for this connection."
msgstr ""

#: 3075bea48f2a4ca8852df93b0bd3498d discord.ext.commands.bot.BotBase.invoke:3
#: of
msgid ""
"Invokes the command given under the invocation context and handles all "
"the internal event dispatch mechanisms."
msgstr ""

#: 0f638f48f50f4c09993a064ea83cd283
#: discord.bot.ApplicationCommandMixin.invoke_application_command:7
#: discord.ext.commands.bot.BotBase.invoke:7 of
msgid "The invocation context to invoke."
msgstr ""

#: 6e5ba81f8ba047ec86c62d502cf47bce
#: discord.bot.ApplicationCommandMixin.invoke_application_command:3 of
msgid ""
"Invokes the application command given under the invocation context and "
"handles all the internal event dispatch mechanisms."
msgstr ""

#: 90e5eaa0acd44e75b0f81269d2e4704d discord.client.Client.is_closed:1 of
msgid "Indicates if the WebSocket connection is closed."
msgstr ""

#: discord.client.Client.is_closed:4 discord.client.Client.is_ready:4
#: f2d2ffb4c5de4294b00e0d6960df1d3d of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: 118afb096dbb49fc99f4fa1d450cc94b discord.bot.BotBase.is_owner:3 of
msgid ""
"Checks if a :class:`~discord.User` or :class:`~discord.Member` is the "
"owner of this bot."
msgstr ""

#: 0188040002234e448bfcefb5879da6d0 discord.bot.BotBase.is_owner:6 of
msgid ""
"If an :attr:`owner_id` is not set, it is fetched automatically through "
"the use of :meth:`~.Bot.application_info`."
msgstr ""

#: discord.bot.BotBase.is_owner:9 ea92aef62ae14860a92b74b19f31e2fd of
msgid ""
"The function also checks if the application is team-owned if "
":attr:`owner_ids` is not set."
msgstr ""

#: 75f037142b784ca0b0280584acb209a7 discord.bot.BotBase.is_owner:14 of
msgid "The user to check for."
msgstr ""

#: 0518f3bb4aa1444db2ac2032b93b409a discord.bot.BotBase.is_owner:17 of
msgid "Whether the user is the owner."
msgstr ""

#: 041173496c8247cf8d05c7ccbbfb734f discord.client.Client.is_ready:1 of
msgid "Specifies if the client's internal cache is ready for use."
msgstr ""

#: d06516a48e6c46c6a3e32f6409bc7f1b discord.client.Client.is_ws_ratelimited:1
#: of
msgid "Whether the WebSocket is currently rate limited."
msgstr ""

#: 247b66b1c7ac49109fc876742bb3aa13 discord.client.Client.is_ws_ratelimited:3
#: of
msgid ""
"This can be useful to know when deciding whether you should query members"
" using HTTP or via the gateway. :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: cd244fd94faf4a6d80340bdcbf4fa037 discord.ext.commands.Bot.latency:1 of
msgid "Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: 68a27c5f06f046589b9966084c427b86 discord.ext.commands.Bot.latency:3 of
msgid "This could be referred to as the Discord WebSocket protocol latency."
msgstr ""

#: 73ca6be9f6c44ea39c1efce5ee47bf23 discord.cog.CogMixin.load_extension:1 of
msgid "Loads an extension."
msgstr ""

#: discord.cog.CogMixin.load_extension:3 f6a4fbb9fd74467f9c879de246769ffa of
msgid ""
"An extension is a python module that contains commands, cogs, or "
"listeners."
msgstr ""

#: 975e840eaee14b4dbee8a00ddbbeda2f discord.cog.CogMixin.load_extension:6 of
msgid ""
"An extension must have a global function, ``setup`` defined as the entry "
"point on what to do when the extension is loaded. This entry point must "
"have a single argument, the ``bot``."
msgstr ""

#: 3b164d7e34d1453b97c0f38f3f312a3f discord.cog.CogMixin.load_extension:10 of
msgid ""
"The extension passed can either be the direct name of a file within the "
"current working directory or a folder that contains multiple extensions."
msgstr ""

#: 8e89d87054594008abe505c84310338c discord.cog.CogMixin.load_extension:14 of
msgid ""
"The extension or folder name to load. It must be dot separated like "
"regular Python imports if accessing a submodule. e.g. ``foo.test`` if you"
" want to import ``foo/test.py``."
msgstr ""

#: 7f2cff7a3dcb41ef859adebe2c9703ac discord.cog.CogMixin.load_extension:19
#: discord.cog.CogMixin.load_extensions:12 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"loading an extension using a relative path, e.g ``.foo.test``. Defaults "
"to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: 85cb40e2b8f843238e36491f437ae881 discord.cog.CogMixin.load_extension:19
#: discord.cog.CogMixin.load_extensions:12 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"loading an extension using a relative path, e.g ``.foo.test``. Defaults "
"to ``None``."
msgstr ""

#: 318cf231125c4652934e2e3dcd11f3b4 discord.cog.CogMixin.load_extension:27
#: discord.cog.CogMixin.load_extensions:20 of
msgid ""
"If subdirectories under the given head directory should be recursively "
"loaded. Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: discord.cog.CogMixin.load_extension:27
#: discord.cog.CogMixin.load_extensions:20 e772cf6937df4d08811f8b5aca62ed7e of
msgid ""
"If subdirectories under the given head directory should be recursively "
"loaded. Defaults to ``False``."
msgstr ""

#: 3cecd5dac3b1428186b2006eed2a09ea discord.cog.CogMixin.load_extension:34
#: discord.cog.CogMixin.load_extensions:27 of
msgid ""
"If exceptions should be stored or raised. If set to ``True``, all "
"exceptions encountered will be stored in a returned dictionary as a load "
"status. If set to ``False``, if any exceptions are encountered they will "
"be raised and the bot will be closed. If no exceptions are encountered, a"
" list of loaded extension names will be returned. Defaults to ``False``."
"  .. versionadded:: 2.0"
msgstr ""

#: discord.cog.CogMixin.load_extension:34
#: discord.cog.CogMixin.load_extensions:27 f8f0294e84b04031843107316a63aa39 of
msgid ""
"If exceptions should be stored or raised. If set to ``True``, all "
"exceptions encountered will be stored in a returned dictionary as a load "
"status. If set to ``False``, if any exceptions are encountered they will "
"be raised and the bot will be closed. If no exceptions are encountered, a"
" list of loaded extension names will be returned. Defaults to ``False``."
msgstr ""

#: c16f13ff56c14c05b160e177859de1d9 discord.cog.CogMixin.load_extension:45 of
msgid ""
"If the store parameter is set to ``True``, a dictionary will be returned "
"that contains keys to represent the loaded extension names. The values "
"bound to each key can either be an exception that occurred when loading "
"that extension or a ``True`` boolean representing a successful load. If "
"the store parameter is set to ``False``, either a list containing a list "
"of loaded extensions or nothing due to an encountered exception."
msgstr ""

#: 236d07f9e65049aead2c01b2e184cb28 discord.cog.CogMixin.load_extension:51
#: discord.cog.CogMixin.load_extensions:44 of
msgid ""
"Optional[Union[Dict[:class:`str`, Union[:exc:`errors.ExtensionError`, "
":class:`bool`]], List[:class:`str`]]]"
msgstr ""

#: 52b9fd3899444591860e9ea100e5b710 discord.cog.CogMixin.load_extension:53
#: discord.cog.CogMixin.reload_extension:22 of
msgid ""
"The extension could not be imported.     This is also raised if the name "
"of the extension could not     be resolved using the provided ``package``"
" parameter."
msgstr ""

#: a427a8d14c11445e824427e908258a19 discord.cog.CogMixin.load_extension:54 of
msgid "The extension is already loaded."
msgstr ""

#: 94d3b957e1c145fba0c65ca08b4a9e7d discord.cog.CogMixin.load_extension:55
#: discord.cog.CogMixin.reload_extension:23 of
msgid "The extension does not have a setup function."
msgstr ""

#: 02cb58ade4144bd090d000ee9512e4e5 discord.cog.CogMixin.load_extension:56 of
msgid "The extension or its setup function had an execution error."
msgstr ""

#: discord.cog.CogMixin.load_extensions:1 fc5ee1b90ff04683b6a6a0a44d25f634 of
msgid "Loads multiple extensions at once."
msgstr ""

#: 8dbd82d2722b4abe982887f6fbd463cb discord.cog.CogMixin.load_extensions:3 of
msgid ""
"This method simplifies the process of loading multiple extensions by "
"handling the looping of ``load_extension``."
msgstr ""

#: c6dc0ea347054e669a9fceb19b14f3df discord.cog.CogMixin.load_extensions:7 of
msgid ""
"The extension or folder names to load. It must be dot separated like "
"regular Python imports if accessing a submodule. e.g. ``foo.test`` if you"
" want to import ``foo/test.py``."
msgstr ""

#: c4b1636eec6a4b959f385ec831af35b9 discord.cog.CogMixin.load_extensions:38 of
msgid ""
"If the store parameter is set to ``True``, a dictionary will be returned "
"that contains keys to represent the loaded extension names. The values "
"bound to each key can either be an exception that occurred when loading "
"that extension or a ``True`` boolean representing a successful load. If "
"the store parameter is set to ``False``, either a list containing names "
"of loaded extensions or nothing due to an encountered exception."
msgstr ""

#: dff67721c328405f993460604610704e discord.cog.CogMixin.load_extensions:46 of
msgid ""
"A given extension could not be imported.     This is also raised if the "
"name of the extension could not     be resolved using the provided "
"``package`` parameter."
msgstr ""

#: discord.cog.CogMixin.load_extensions:47 e26df7023d3e44de9392d0ee2666de5b of
msgid "A given extension is already loaded."
msgstr ""

#: 9f8a6c8de9054e5d8f785f7013ff5426 discord.cog.CogMixin.load_extensions:48 of
msgid "A given extension does not have a setup function."
msgstr ""

#: c7ee960eb3ed48cfa6219da68eda0e8a discord.cog.CogMixin.load_extensions:49 of
msgid "A given extension or its setup function had an execution error."
msgstr ""

#: 0cd5999f08474ec09e84b3a0fcf53f6a discord.client.Client.login:3 of
msgid "Logs in the client with the specified credentials."
msgstr ""

#: a83e8afd3b9a4df1aca1563503e19a4f discord.client.Client.login:6 of
msgid ""
"The authentication token. Do not prefix this token with anything as the "
"library will do it for you."
msgstr ""

#: 4a7aece89b5d4b57b8a98d40cd1eb652 discord.client.Client.login:10 of
msgid "The token was in invalid type."
msgstr ""

#: 96d7271f109c4e388ec84a0bd84841ed discord.client.Client.login:11 of
msgid "The wrong credentials are passed."
msgstr ""

#: a224ce433d9d407eada620bbe58b79fb discord.client.Client.login:12 of
msgid ""
"An unknown HTTP related error occurred,     usually when it isn't 200 or "
"the known incorrect credentials     passing status code."
msgstr ""

#: 06aaa4a06f1643458bac9277ab9c0586
#: discord.bot.ApplicationCommandMixin.message_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`add_application_command`. This shortcut "
"is made specifically for :class:`.MessageCommand`."
msgstr ""

#: 7d14b3bdf9634d46bdca6fcd9a21b9e3
#: discord.bot.ApplicationCommandMixin.message_command:7 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.MessageCommand`, adds it to the bot, then returns it."
msgstr ""

#: 3a1f259101664820b1fdf332b5ba0384
#: discord.bot.ApplicationCommandMixin.message_command:9 of
msgid "Callable[..., :class:`MessageCommand`]"
msgstr ""

#: 66802051ce734e8097ec34d915787746
#: discord.bot.BotBase.on_application_command_error:3
#: discord.ext.commands.bot.BotBase.on_command_error:3 of
msgid "The default command error handler provided by the bot."
msgstr ""

#: 1cfd6552a76b4aa8a505f6638f251018
#: discord.bot.BotBase.on_application_command_error:5
#: discord.ext.commands.bot.BotBase.on_command_error:5 of
msgid ""
"By default, this prints to :data:`sys.stderr` however it could be "
"overridden to have a different implementation."
msgstr ""

#: 2bccaf197b874b678e4c7e0f4392290a
#: discord.bot.BotBase.on_application_command_error:8
#: discord.ext.commands.bot.BotBase.on_command_error:8 of
msgid "This only fires if you do not specify any listeners for command error."
msgstr ""

#: discord.client.Client.on_error:3 edd24076077248e7b2b4b2ed5ab4d44f of
msgid "The default error handler provided by the client."
msgstr ""

#: 0109e81b10394bdb842f6887198636a4 discord.client.Client.on_error:5 of
msgid ""
"By default, this prints to :data:`sys.stderr` however it could be "
"overridden to have a different implementation. Check "
":func:`~discord.on_error` for more details."
msgstr ""

#: 373aeb873c344d82970e4a032b9ac217 discord.ext.commands.Bot.persistent_views:1
#: of
msgid "A sequence of persistent views added to the client."
msgstr ""

#: a6ba0d7629694f7f82906545519f7701 discord.ext.commands.Bot.polls:1 of
msgid "The polls that the connected client has."
msgstr ""

#: 2a456fe204bb49ccba1c8ef998f0cc07 discord.ext.commands.Bot.private_channels:1
#: of
msgid "The private channels that the connected client is participating on."
msgstr ""

#: ceac0cfc384647d298f39f12c0acf7ed discord.ext.commands.Bot.private_channels:5
#: of
msgid ""
"This returns only up to 128 most recent private channels due to an "
"internal working on how Discord deals with private channels."
msgstr ""

#: 7182196090184bd2924a20549adf2d46
#: discord.bot.ApplicationCommandMixin.process_application_commands:3
#: discord.ext.commands.bot.BotBase.process_commands:3 of
msgid ""
"This function processes the commands that have been registered to the bot"
" and other groups. Without this coroutine, none of the commands will be "
"triggered."
msgstr ""

#: ba527e37463647ce8c5432016f29f78c
#: discord.bot.ApplicationCommandMixin.process_application_commands:7 of
msgid ""
"By default, this coroutine is called inside the :func:`.on_interaction` "
"event. If you choose to override the :func:`.on_interaction` event, then "
"you should invoke this coroutine as well."
msgstr ""

#: 50c7c9cad8cf4f289847762194b48a53
#: discord.bot.ApplicationCommandMixin.process_application_commands:11 of
msgid ""
"This function finds a registered command matching the interaction id from"
" application commands and invokes it. If no matching command was found, "
"it replies to the interaction with a default message."
msgstr ""

#: cb839530614640e8968e100adf2228d8
#: discord.bot.ApplicationCommandMixin.process_application_commands:18 of
msgid "The interaction to process"
msgstr ""

#: discord.bot.ApplicationCommandMixin.process_application_commands:21
#: ff06c0ebce444f51a73fe1ee516f7264 of
msgid ""
"Whether to automatically sync and unregister the command if it is not "
"found in the internal cache. This will invoke the "
":meth:`~.Bot.sync_commands` method on the context of the command, either "
"globally or per-guild, based on the type of the command, respectively. "
"Defaults to :attr:`.Bot.auto_sync_commands`."
msgstr ""

#: 6804d4b7ab9c43949f7ebec022a2b5e5
#: discord.ext.commands.bot.BotBase.process_commands:7 of
msgid ""
"By default, this coroutine is called inside the :func:`.on_message` "
"event. If you choose to override the :func:`.on_message` event, then you "
"should invoke this coroutine as well."
msgstr ""

#: discord.ext.commands.bot.BotBase.process_commands:11
#: f62bf245cd8e481981dfd17614caa216 of
msgid ""
"This is built using other low level tools, and is equivalent to a call to"
" :meth:`~.Bot.get_context` followed by a call to :meth:`~.Bot.invoke`."
msgstr ""

#: 2d7cb9beeb8349dd9c7fa0501f057e21
#: discord.ext.commands.bot.BotBase.process_commands:14 of
msgid ""
"This also checks if the message's author is a bot and doesn't call "
":meth:`~.Bot.get_context` or :meth:`~.Bot.invoke` if so."
msgstr ""

#: c4b59976df7f42f0a3c51d4f2e358b52
#: discord.ext.commands.bot.BotBase.process_commands:18 of
msgid "The message to process commands for."
msgstr ""

#: 164fb90b104045e89d7c1f0414020a3e
#: discord.bot.ApplicationCommandMixin.register_command:3 of
msgid ""
"Registers a command. If the command has ``guild_ids`` set, or if the "
"``guild_ids`` parameter is passed, the command will be registered as a "
"guild command for those guilds."
msgstr ""

#: 78e53cdddda540b9a21a7fd370ac3b07
#: discord.bot.ApplicationCommandMixin.register_command:7 of
msgid "The command to register."
msgstr ""

#: 608b9bb60d2140218c03a6ef164385a0
#: discord.bot.ApplicationCommandMixin.register_command:10 of
msgid ""
"Whether to force the command to be registered. If this is set to False, "
"the command will only be registered if it seems to already be registered "
"and up to date with our internal cache. Defaults to True."
msgstr ""

#: dad7c61d72ce47a992ed88b6a217b991
#: discord.bot.ApplicationCommandMixin.register_command:14 of
msgid ""
"A list of guild ids to register the command for. If this is not set, the "
"command's :attr:`ApplicationCommand.guild_ids` attribute will be used."
msgstr ""

#: 4e1b3e10ead548c8804fdc8b0a1b2664
#: discord.bot.ApplicationCommandMixin.register_command:18 of
msgid "The command that was registered"
msgstr ""

#: 91dfc7d1b4eb4a6086d3b32f16fd9469
#: discord.bot.ApplicationCommandMixin.register_command:19 of
msgid ":class:`~.ApplicationCommand`"
msgstr ""

#: 62e8f2e9cd354bfaa1251489d46acd96
#: discord.bot.ApplicationCommandMixin.register_commands:3 of
msgid "Register a list of commands."
msgstr ""

#: c5082ea44ddf4a65ab929232d45ea410
#: discord.bot.ApplicationCommandMixin.register_commands:8 of
msgid ""
"A list of commands to register. If this is not set (``None``), then all "
"commands will be registered."
msgstr ""

#: af5a7516da5e45ec8955283376c7ce27
#: discord.bot.ApplicationCommandMixin.register_commands:11 of
msgid ""
"If this is set, the commands will be registered as a guild command for "
"the respective guild. If it is not set, the commands will be registered "
"according to their :attr:`ApplicationCommand.guild_ids` attribute."
msgstr ""

#: 4fae560ecd074d41a1539bb3058d9c8e
#: discord.bot.ApplicationCommandMixin.register_commands:15
#: discord.bot.ApplicationCommandMixin.sync_commands:30 of
msgid ""
"The method to use when registering the commands. If this is set to "
"\"individual\", then each command will be registered individually. If "
"this is set to \"bulk\", then all commands will be registered in bulk. If"
" this is set to \"auto\", then the method will be determined "
"automatically. Defaults to \"bulk\"."
msgstr ""

#: c70634c2e0434418a3a5d78525171060
#: discord.bot.ApplicationCommandMixin.register_commands:20
#: discord.bot.ApplicationCommandMixin.sync_commands:35 of
msgid ""
"Registers the commands regardless of the state of the command on Discord."
" This uses one less API call, but can result in hitting rate limits more "
"often. Defaults to False."
msgstr ""

#: d41fd7f478444437aa26d461b53c89b0
#: discord.bot.ApplicationCommandMixin.register_commands:24
#: discord.bot.ApplicationCommandMixin.sync_commands:52 of
msgid ""
"Whether to delete existing commands that are not in the list of commands "
"to register. Defaults to True."
msgstr ""

#: 9bd42b0833e541da9ea21e3253f0f1e1
#: discord.bot.ApplicationCommandMixin.register_commands:27 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`list\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~discord.types.interactions.ApplicationCommand\\`\\]`"
msgstr ""

#: discord.cog.CogMixin.reload_extension:1 f5bfe1db4bd748fbabc1c2d748a1ad3d of
msgid "Atomically reloads an extension."
msgstr ""

#: discord.cog.CogMixin.reload_extension:3 e00b1c26b7c541efad26075cc3da1773 of
msgid ""
"This replaces the extension with the same extension, only refreshed. This"
" is equivalent to a :meth:`unload_extension` followed by a "
":meth:`load_extension` except done in an atomic way. That is, if an "
"operation fails mid-reload then the bot will roll back to the prior "
"working state."
msgstr ""

#: 7397c9310acb4dc49acf1b6efd3fc08b discord.cog.CogMixin.reload_extension:9 of
msgid ""
"The extension name to reload. It must be dot separated like regular "
"Python imports if accessing a submodule. e.g. ``foo.test`` if you want to"
" import ``foo/test.py``."
msgstr ""

#: 918b442226fd4dcab9ff66a48716b0ea discord.cog.CogMixin.reload_extension:14 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"reloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: 4f400cab8da54866b5de772471327cbc discord.cog.CogMixin.reload_extension:14 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"reloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``."
msgstr ""

#: 84cf47932ab94200b27422be14d0bf12 ce093ca8e94b492b9baae5fe63c4e335
#: discord.cog.CogMixin.reload_extension:21
#: discord.cog.CogMixin.unload_extension:25 of
msgid "The extension was not loaded."
msgstr ""

#: b6163285297844998306e8645322884b discord.cog.CogMixin.reload_extension:24 of
msgid "The extension setup function had an execution error."
msgstr ""

#: a1ef0b2b55144410b778bb7ffb8be5b9
#: discord.bot.ApplicationCommandMixin.remove_application_command:1 of
msgid "Remove an :class:`.ApplicationCommand` from the internal list of commands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.remove_application_command:7
#: e62f5010bdd14887b34428f27772f090 of
msgid "The command to remove."
msgstr ""

#: 36c1c6930d5745a4b82db78c7cc5dae2
#: discord.bot.ApplicationCommandMixin.remove_application_command:10 of
msgid ""
"The command that was removed. If the command has not been added, ``None``"
" is returned instead."
msgstr ""

#: 8c096a18316e4395b5a8c99d778633a6 discord.bot.BotBase.remove_check:1 of
msgid ""
"Removes a global check from the bot. This function is idempotent and will"
" not raise an exception if the function is not in the global checks."
msgstr ""

#: d836f1015d2f4872921e7e2bd23cfd08 discord.bot.BotBase.remove_check:6 of
msgid "The function to remove from the global checks."
msgstr ""

#: 52505a1773da45cd96132292f234668a discord.bot.BotBase.remove_check:8 of
msgid ""
"If the function was added with ``call_once=True`` in the "
":meth:`.Bot.add_check` call or using :meth:`.check_once`."
msgstr ""

#: 4bce31052eae454cb922019dfa00224e discord.cog.CogMixin.remove_cog:1 of
msgid "Removes a cog from the bot and returns it."
msgstr ""

#: 70dceeec61a3451a9e1f6bc70fbcfa91 discord.cog.CogMixin.remove_cog:3 of
msgid ""
"All registered commands and event listeners that the cog has registered "
"will be removed as well."
msgstr ""

#: 4d06c08c84414815a3913eec615e16e7 discord.cog.CogMixin.remove_cog:6 of
msgid "If no cog is found then this method has no effect."
msgstr ""

#: af1036bce59746d093abd81aab79b1d0 discord.cog.CogMixin.remove_cog:9 of
msgid "The name of the cog to remove."
msgstr ""

#: discord.cog.CogMixin.remove_cog:12 e9f40ae4bcf146d9abae3c78d57f5fd5 of
msgid "The cog that was removed. ``None`` if not found."
msgstr ""

#: 7e9562f29ff24c168294ced809e39c48 discord.cog.CogMixin.remove_cog:13 of
msgid "Optional[:class:`.Cog`]"
msgstr ""

#: 72e56541aba94b5094116625bae069d9
#: discord.ext.commands.core.GroupMixin.remove_command:1 of
msgid "Remove a :class:`.Command` from the internal list of commands."
msgstr ""

#: discord.ext.commands.core.GroupMixin.remove_command:4
#: e1f8b4c4d35e4ad8b57c3d018b6f4174 of
msgid "This could also be used as a way to remove aliases."
msgstr ""

#: d399c8aa90334ed29d8c347beafa631d
#: discord.ext.commands.core.GroupMixin.remove_command:7 of
msgid "The name of the command to remove."
msgstr ""

#: 6edfdbe1280e4cf398df37fe2792d8ee
#: discord.ext.commands.core.GroupMixin.remove_command:10 of
msgid ""
"The command that was removed. If the name is not valid then ``None`` is "
"returned instead."
msgstr ""

#: 99f6a7ad97a24341a814e6f291e294d2
#: discord.ext.commands.core.GroupMixin.remove_command:12 of
msgid "Optional[:class:`.Command`]"
msgstr ""

#: 89237b2df8894f028c8d6fe4b723ac9e discord.client.Client.remove_listener:1 of
msgid "Removes a listener from the pool of listeners."
msgstr ""

#: 4126c6c0ad9d41f98850f0a0daf3d13f discord.client.Client.remove_listener:4 of
msgid "The function that was used as a listener to remove."
msgstr ""

#: 04dcea9827704258a9e40aebaabf81cb discord.client.Client.remove_listener:6 of
msgid "The name of the event we want to remove. Defaults to ``func.__name__``."
msgstr ""

#: d770bb73dbb7401f974c801b9884b9d2 discord.client.Client.run:1 of
msgid ""
"A blocking call that abstracts away the event loop initialisation from "
"you."
msgstr ""

#: 7cf3c2253ef341fd9ea4cd589e8a8f24 discord.client.Client.run:4 of
msgid ""
"If you want more control over the event loop then this function should "
"not be used. Use :meth:`start` coroutine or :meth:`connect` + "
":meth:`login`."
msgstr ""

#: 81da8969b71546b2b65729eae997a16f discord.client.Client.run:8 of
msgid "Roughly Equivalent to: ::"
msgstr ""

#: 4e683fc6fb4d4a70936b85ea61e72a74 discord.client.Client.run:20 of
msgid ""
"This function must be the last function to call due to the fact that it "
"is blocking. That means that registration of events or anything being "
"called after this function call will not execute until it returns."
msgstr ""

#: dd492beae05f4a8d8cb809e7edef441e
#: discord.bot.ApplicationCommandMixin.slash_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`add_application_command`. This shortcut "
"is made specifically for :class:`.SlashCommand`."
msgstr ""

#: 802ce9a737a9484c896d16f372e3b6de
#: discord.bot.ApplicationCommandMixin.slash_command:7 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.SlashCommand`, adds it to the bot, then returns it."
msgstr ""

#: 108e23f4f6284ab29c327401bf146ddc
#: discord.bot.ApplicationCommandMixin.slash_command:9 of
msgid "Callable[..., :class:`SlashCommand`]"
msgstr ""

#: 7634d59aa45e4d26b2c565151cc3782e discord.bot.ApplicationCommandMixin.group:1
#: of
msgid ""
"A shortcut decorator that initializes the provided subclass of "
":class:`.SlashCommandGroup` and adds it to the internal command list via "
":meth:`add_application_command`."
msgstr ""

#: 737591a4772a41f6bdeea4dd51546778 discord.bot.ApplicationCommandMixin.group:7
#: of
msgid ""
"The name of the group to create. This will resolve to the name of the "
"decorated class if ``None`` is passed."
msgstr ""

#: d76b1fe4d76f4ca69d1a0ade53afc1ce discord.client.Client.start:3 of
msgid "A shorthand coroutine for :meth:`login` + :meth:`connect`."
msgstr ""

#: 76b5f1a0b02348759deca85bc9662056 discord.client.Client.start:5 of
msgid "An unexpected keyword argument was received."
msgstr ""

#: 63ac3c15418f4a8ab3731229e8c99da7 discord.ext.commands.Bot.status:1 of
msgid "The status being used upon logging on to Discord."
msgstr ""

#: 1538eaf30f75407ab466133776dbc71e discord.ext.commands.Bot.stickers:1 of
msgid "The stickers that the connected client has."
msgstr ""

#: discord.ext.commands.Bot.store_url:1 e5d3eb89db9845c5aec24b89323f4b32 of
msgid "The URL that leads to the application's store page for monetization."
msgstr ""

#: 7f5438a9f9b340e0ab8f4b6c5f5cf6a3 discord.cog.CogMeta:37
#: discord.cog.CogMeta:45 discord.ext.commands.Bot.store_url:5
#: discord.ext.commands.HelpCommand.invoked_with:10
#: discord.ext.commands.core.Command:10 discord.ext.commands.core.Command:79
#: discord.ext.commands.errors.BadBoolArgument:11
#: discord.ext.commands.errors.BadColourArgument:11
#: discord.ext.commands.errors.ChannelNotFound:11
#: discord.ext.commands.errors.CommandRegistrationError:12
#: discord.ext.commands.errors.EmojiNotFound:11
#: discord.ext.commands.errors.ExpectedClosingQuoteError:9
#: discord.ext.commands.errors.GuildNotFound:11
#: discord.ext.commands.errors.GuildStickerNotFound:11
#: discord.ext.commands.errors.InvalidEndOfQuotedStringError:10
#: discord.ext.commands.errors.MemberNotFound:12
#: discord.ext.commands.errors.MessageNotFound:11
#: discord.ext.commands.errors.PartialEmojiConversionFailure:12
#: discord.ext.commands.errors.RoleNotFound:11
#: discord.ext.commands.errors.ThreadNotFound:11
#: discord.ext.commands.errors.UnexpectedQuoteError:9
#: discord.ext.commands.errors.UserNotFound:12
#: discord.ext.commands.flags.Flag:11 discord.ext.commands.flags.Flag:23
#: discord.ext.commands.help.DefaultHelpCommand:49
#: discord.ext.commands.help.DefaultHelpCommand:56
#: discord.ext.commands.help.HelpCommand.command_not_found:14
#: discord.ext.commands.help.HelpCommand.get_command_signature:8
#: discord.ext.commands.help.HelpCommand.remove_mentions:6
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:22
#: discord.ext.commands.help.MinimalHelpCommand:16
#: discord.ext.commands.help.MinimalHelpCommand:23
#: discord.ext.commands.help.MinimalHelpCommand:48
#: discord.ext.commands.help.MinimalHelpCommand.get_command_signature:8
#: discord.ext.commands.help.MinimalHelpCommand.get_ending_note:6
#: discord.ext.commands.help.MinimalHelpCommand.get_opening_note:9
#: discord.ext.commands.help.Paginator:13
#: discord.ext.commands.help.Paginator:19
#: discord.ext.commands.help.Paginator:34 of
msgid ":class:`str`"
msgstr ""

#: 56dee18f303b43e79e6b6a77a2eadd69
#: discord.bot.ApplicationCommandMixin.sync_commands:3 of
msgid ""
"Registers all commands that have been added through "
":meth:`.add_application_command`. This method cleans up all commands over"
" the API and should sync them with the internal cache of commands. It "
"attempts to register the commands in the most efficient way possible, "
"unless ``force`` is set to ``True``, in which case it will always "
"register all commands."
msgstr ""

#: 2ab7c2937ad74760b370b73a6a8ba2ca
#: discord.bot.ApplicationCommandMixin.sync_commands:8 of
msgid ""
"By default, this coroutine is called inside the :func:`.on_connect` "
"event. If you choose to override the :func:`.on_connect` event, then you "
"should invoke this coroutine as well such as the following:"
msgstr ""

#: 76d41f32c4ba46cfbd8dd7155cf5bd05
#: discord.bot.ApplicationCommandMixin.sync_commands:20 of
msgid ""
"If you remove all guild commands from a particular guild, the library may"
" not be able to detect and update the commands accordingly, as it would "
"have to individually check for each guild. To force the library to "
"unregister a guild's commands, call this function with ``commands=[]`` "
"and ``guild_ids=[guild_id]``."
msgstr ""

#: 952a63d7ebec443ea612b0602057c526
#: discord.bot.ApplicationCommandMixin.sync_commands:27 of
msgid ""
"A list of commands to register. If this is not set (None), then all "
"commands will be registered."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:39
#: e8fe7f09dcf84062a21c87edb848005f of
msgid ""
"A list of guild ids to register the commands for. If this is not set, the"
" commands' :attr:`~.ApplicationCommand.guild_ids` attribute will be used."
msgstr ""

#: 8f87ec3068be415190fee8343946adbf
#: discord.bot.ApplicationCommandMixin.sync_commands:43 of
msgid "Whether to register guild commands. Defaults to True."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:46
#: f5a29066bc064defbb80514c03a3f884 of
msgid ""
"A list of guilds ids to check for commands to unregister, since the bot "
"would otherwise have to check all guilds. Unlike ``guild_ids``, this does"
" not alter the commands' :attr:`~.ApplicationCommand.guild_ids` "
"attribute, instead it adds the guild ids to a list of guilds to sync "
"commands for. If ``register_guild_commands`` is set to False, then this "
"parameter is ignored."
msgstr ""

#: d3b66c696d4c429fa2944c1d45bf4f3e discord.cog.CogMixin.unload_extension:1 of
msgid "Unloads an extension."
msgstr ""

#: 9a66a37183ff460ab14866054d375aeb discord.cog.CogMixin.unload_extension:3 of
msgid ""
"When the extension is unloaded, all commands, listeners, and cogs are "
"removed from the bot and the module is un-imported."
msgstr ""

#: a598066c3fe44c7f8e0e5489ed9659e1 discord.cog.CogMixin.unload_extension:6 of
msgid ""
"The extension can provide an optional global function, ``teardown``, to "
"do miscellaneous clean-up if necessary. This function takes a single "
"parameter, the ``bot``, similar to ``setup`` from "
":meth:`~.Bot.load_extension`."
msgstr ""

#: b32f49db4c9e4716a586f8f433a8babb discord.cog.CogMixin.unload_extension:12 of
msgid ""
"The extension name to unload. It must be dot separated like regular "
"Python imports if accessing a submodule. e.g. ``foo.test`` if you want to"
" import ``foo/test.py``."
msgstr ""

#: b8bc526bb85d4212b18245588c6d2774 discord.cog.CogMixin.unload_extension:17 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"unloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: 38ab1a9d45e54b7f9b7a2df37263d789 discord.cog.CogMixin.unload_extension:17 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"unloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``."
msgstr ""

#: 59b51e51c9d8441c8b1d6fa796ed8885 discord.cog.CogMixin.unload_extension:24 of
msgid ""
"The name of the extension could not     be resolved using the provided "
"``package`` parameter."
msgstr ""

#: 25ed7845b9674200a5ba81f4ea0a431d
#: discord.client.Client.update_role_connection_metadata_records:3 of
msgid "Updates the bot's role connection metadata records."
msgstr ""

#: discord.client.Client.update_role_connection_metadata_records:8
#: fa964cb583594724886c942b50bbb257 of
msgid "The new metadata records to send to Discord."
msgstr ""

#: 896b8eabc98b4e468b4e0d752178c9b5
#: discord.client.Client.update_role_connection_metadata_records:11 of
msgid "The updated role connection metadata records."
msgstr ""

#: 65f4a38703104a058b05302678b5631e discord.ext.commands.Bot.user:1 of
msgid "Represents the connected client. ``None`` if not logged in."
msgstr ""

#: b2b91e77f7d741618fea041bc44a2047
#: discord.bot.ApplicationCommandMixin.user_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`add_application_command`. This shortcut "
"is made specifically for :class:`.UserCommand`."
msgstr ""

#: b1b309bd09ac4f3cba07626e0d84770e
#: discord.bot.ApplicationCommandMixin.user_command:7 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.UserCommand`, adds it to the bot, then returns it."
msgstr ""

#: 43ff330447974841a60b8ce9ff1babcc
#: discord.bot.ApplicationCommandMixin.user_command:9 of
msgid "Callable[..., :class:`UserCommand`]"
msgstr ""

#: 85e2b097c0464c2983971f8c305ef6db discord.ext.commands.Bot.users:1 of
msgid "Returns a list of all the users the bot can see."
msgstr ""

#: abdc4c41e9c546b2b961ef5395b29fcf discord.ext.commands.Bot.voice_clients:1 of
msgid "Represents a list of voice connections."
msgstr ""

#: 165917f65ed0449492cc9106a1860d96 discord.ext.commands.Bot.voice_clients:3 of
msgid "These are usually :class:`.VoiceClient` instances."
msgstr ""

#: 15de8e6d9e4640ca8681f96393db605e discord.client.Client.wait_for:3 of
msgid "Waits for a WebSocket event to be dispatched."
msgstr ""

#: discord.client.Client.wait_for:5 f30e7c279c614fe78d5d370ebee54379 of
msgid ""
"This could be used to wait for a user to reply to a message, or to react "
"to a message, or to edit a message in a self-contained way."
msgstr ""

#: 7ffe4d5b36924c5fbf56359a276435bf discord.client.Client.wait_for:9 of
msgid ""
"The ``timeout`` parameter is passed onto :func:`asyncio.wait_for`. By "
"default, it does not timeout. Note that this does propagate the "
":exc:`asyncio.TimeoutError` for you in case of timeout and is provided "
"for ease of use."
msgstr ""

#: 68218290695e4d94a40a0dfa0e6f0eb7 discord.client.Client.wait_for:14 of
msgid ""
"In case the event returns multiple arguments, a :class:`tuple` containing"
" those arguments is returned instead. Please check the "
":ref:`documentation <discord-api-events>` for a list of events and their "
"parameters."
msgstr ""

#: 891286b54b444d3e857a3e11ebd36f2c discord.client.Client.wait_for:19 of
msgid "This function returns the **first event that meets the requirements**."
msgstr ""

#: 53489b7bb49642c6be5938b4b13c4a5d discord.client.Client.wait_for:22 of
msgid ""
"The event name, similar to the :ref:`event reference <discord-api-"
"events>`, but without the ``on_`` prefix, to wait for."
msgstr ""

#: 6b6eeb0f83914b9cade3cb77db136009 discord.client.Client.wait_for:26 of
msgid ""
"A predicate to check what to wait for. The arguments must meet the "
"parameters of the event being waited for."
msgstr ""

#: cdaf56492bf840f6bd28460c4343513a discord.client.Client.wait_for:30 of
msgid ""
"The number of seconds to wait before timing out and raising "
":exc:`asyncio.TimeoutError`."
msgstr ""

#: a9dae933ab7e444fa98d09fc664439ac discord.client.Client.wait_for:34 of
msgid ""
"Returns no arguments, a single argument, or a :class:`tuple` of multiple "
"arguments that mirrors the parameters passed in the :ref:`event reference"
" <discord-api-events>`."
msgstr ""

#: c18ac7e53ef548b3b012fd24da33f00e discord.client.Client.wait_for:39 of
msgid "Raised if a timeout is provided and reached."
msgstr ""

#: 1efb0f90994a4d09b084d196cd2dbd19 discord.client.Client.wait_for:43 of
msgid "Waiting for a user reply: ::"
msgstr ""

#: discord.client.Client.wait_for:57 fec96c30c379416b9f9c0ee73ed2280d of
msgid "Waiting for a thumbs up reaction from the message author: ::"
msgstr ""

#: 4e183d241d704c97af61ff44652e8970 discord.client.Client.wait_until_ready:3 of
msgid "Waits until the client's internal cache is all ready."
msgstr ""

#: discord.bot.ApplicationCommandMixin.walk_application_commands:1
#: e5f1e9c359cb4fd1a94239b501fb3078 of
msgid ""
"An iterator that recursively walks through all application commands and "
"subcommands."
msgstr ""

#: 8cf9700f44cb4982999c7f0e06fae9a7
#: discord.bot.ApplicationCommandMixin.walk_application_commands:3 of
msgid ""
":class:`.ApplicationCommand` -- An application command from the internal "
"list of application commands."
msgstr ""

#: 1456f4943caa4b34a8e69f60b5a07808
#: discord.ext.commands.core.GroupMixin.walk_commands:1 of
msgid "An iterator that recursively walks through all commands and subcommands."
msgstr ""

#: 49f59fb863cd4209bd0f1f4182299127
#: discord.ext.commands.core.GroupMixin.walk_commands:3 of
msgid "Duplicates due to aliases are no longer returned"
msgstr ""

#: c046361221d6494fa948452872c5775c
#: discord.ext.commands.core.GroupMixin.walk_commands:6 of
msgid ""
"Union[:class:`.Command`, :class:`.Group`] -- A command or group from the "
"internal list of commands."
msgstr ""

#: ../../ext/commands/api.rst:53 083f5bc33dcb4586af8062833c6e2a40
msgid "AutoShardedBot"
msgstr ""

#: c43ed20f7e3248c99243a25c12d9b7c9 discord.ext.commands.bot.AutoShardedBot:1
#: of
msgid ""
"This is similar to :class:`.Bot` except that it is inherited from "
":class:`discord.AutoShardedBot` instead."
msgstr ""

#: ../../ext/commands/api.rst:61 0a9ee6adf3384fd2af3d470e981358f8
msgid "Prefix Helpers"
msgstr ""

#: 4c8b697e316940b296c4ff16559692be discord.ext.commands.bot.when_mentioned:1
#: of
msgid "A callable that implements a command prefix equivalent to being mentioned."
msgstr ""

#: 94c1395e027c46d6ade3d6e434844537 discord.ext.commands.bot.when_mentioned:3
#: discord.ext.commands.bot.when_mentioned_or:3 of
msgid ""
"These are meant to be passed into the :attr:`.Bot.command_prefix` "
"attribute."
msgstr ""

#: 871ad9b1ab9946a18c415864a779a250 discord.ext.commands.bot.when_mentioned:9
#: of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`list\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`str\\`\\]`"
msgstr ""

#: 23b7b72806634d609c92fb1e70fe4ad1
#: discord.ext.commands.bot.when_mentioned_or:1 of
msgid "A callable that implements when mentioned or other prefixes provided."
msgstr ""

#: 846bfc51b4944ad4983ff4d1d99850c1
#: discord.ext.commands.bot.when_mentioned_or:5 of
msgid ":func:`.when_mentioned`"
msgstr ""

#: c8eceea9e53d45cc97cfcbb42398acb9
#: discord.ext.commands.bot.when_mentioned_or:15 of
msgid ""
"This callable returns another callable, so if this is done inside a "
"custom callable, you must call the returned callable, for example:"
msgstr ""

#: c5b60bd7da7b4768b14a994651830b23
#: discord.ext.commands.bot.when_mentioned_or:26 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~discord.ext.commands.bot.Bot\\` \\| "
"\\:py\\:class\\:\\`\\~discord.ext.commands.bot.AutoShardedBot\\`\\, "
"\\:py\\:class\\:\\`\\~discord.message.Message\\`\\]\\, "
"\\:py\\:class\\:\\`list\\`\\\\ \\\\\\[\\:py\\:class\\:\\`str\\`\\]\\]`"
msgstr ""

#: ../../ext/commands/api.rst:70 607f676f879e46c0bbd010f553a05c6b
msgid "Event Reference"
msgstr ""

#: ../../ext/commands/api.rst:72 abda3f19786e42ea95de290e49493db7
msgid ""
"These events function similar to :ref:`the regular events <discord-api-"
"events>`, except they are custom to the command extension module."
msgstr ""

#: ../../ext/commands/api.rst:77 9d47bcf3bdba46c0aee61570b0c50c1c
msgid ""
"An error handler that is called when an error is raised inside a command "
"either through user input error, check failure, or an error in your own "
"code."
msgstr ""

#: ../../ext/commands/api.rst:81 dcb78c0a90ce4197baba03a1963d4490
msgid "A default one is provided (:meth:`.Bot.on_command_error`)."
msgstr ""

#: ../../ext/commands/api.rst:83 ../../ext/commands/api.rst:95
#: ../../ext/commands/api.rst:105 08d36c605612426784eaf9ec301a665e
#: discord.ext.commands.flags.FlagConverter.convert:8
#: discord.ext.commands.help.HelpCommand.on_help_command_error:12
#: discord.ext.commands.help.HelpCommand.prepare_help_command:16 of
msgid "The invocation context."
msgstr ""

#: ../../ext/commands/api.rst:85 7db908c9bd4146148c671612f1a21c16
#: discord.ext.commands.help.HelpCommand.on_help_command_error:15 of
msgid "The error that was raised."
msgstr ""

#: ../../ext/commands/api.rst:90 347da799cd5c46d494faa3a6db00ab44
msgid ""
"An event that is called when a command is found and is about to be "
"invoked."
msgstr ""

#: ../../ext/commands/api.rst:92 c7110a45e2cb48e1b8de37062089a003
msgid ""
"This event is called regardless of whether the command itself succeeds "
"via error or completes."
msgstr ""

#: ../../ext/commands/api.rst:100 c0b551f9b80642cab7f482a5e253ccb0
msgid "An event that is called when a command has completed its invocation."
msgstr ""

#: ../../ext/commands/api.rst:102 e6df0f94dea4459b991e737d795fa1ac
msgid ""
"This event is called only if the command succeeded, i.e. all checks have "
"passed and the user input it correctly."
msgstr ""

#: ../../ext/commands/api.rst:111 281bd859cfe442f290d3af15260bf4b3
msgid "Commands"
msgstr ""

#: ../../ext/commands/api.rst:114 2bc62b679dc241c8bbdad200cd956713
msgid "Decorators"
msgstr ""

#: 708aede471434da3975092e896c74818 discord.ext.commands.core.command:1 of
msgid ""
"A decorator that transforms a function into a :class:`.Command` or if "
"called with :func:`.group`, :class:`.Group`."
msgstr ""

#: c63fd729dfb8408dafe13dc7810919fa discord.ext.commands.core.command:4 of
msgid ""
"By default the ``help`` attribute is received automatically from the "
"docstring of the function and is cleaned up with the use of "
"``inspect.cleandoc``. If the docstring is ``bytes``, then it is decoded "
"into :class:`str` using utf-8 encoding."
msgstr ""

#: discord.ext.commands.core.command:9 e53325d7f3aa42c8a94797b99ede0e96 of
msgid ""
"All checks added using the :func:`.check` & co. decorators are added into"
" the function. There is no way to supply your own checks through this "
"decorator."
msgstr ""

#: a0a1831b938245e4bc643705c843a97f discord.ext.commands.core.command:14 of
msgid ""
"The name to create the command with. By default, this uses the function "
"name unchanged."
msgstr ""

#: 2dee1730ac3e4b508e2d0151bdc7b6fc discord.ext.commands.core.command:18 of
msgid ""
"The class to construct with. By default, this is :class:`.Command`. You "
"usually do not change this."
msgstr ""

#: 8750c06b578949b2bec301ab09966274 discord.ext.commands.core.command:21 of
msgid ""
"Keyword arguments to pass into the construction of the class denoted by "
"``cls``."
msgstr ""

#: 2164945e8ddc44eea1067cd31fd4dbee discord.ext.commands.core.command:24 of
msgid "If the function is not a coroutine or is already a command."
msgstr ""

#: 578d8eb6b02947ff986b9f8f510ecdca discord.ext.commands.core.command:26 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ "
"\\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.Concatenate\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`ContextT\\`\\`\\, bound\\= Context\\)\\, "
"\\:py\\:class\\:\\`\\~typing.ParamSpec\\`\\\\ \\\\\\(\\`\\`P\\`\\`\\, "
"bound\\= \\:py\\:obj\\:\\`None\\`\\)\\]\\]\\, "
"\\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\, "
"\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ "
"\\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.Concatenate\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`CogT\\`\\`\\, bound\\= Cog\\)\\, "
"\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`ContextT\\`\\`\\, bound\\= Context\\)\\, "
"\\:py\\:class\\:\\`\\~typing.ParamSpec\\`\\\\ \\\\\\(\\`\\`P\\`\\`\\, "
"bound\\= \\:py\\:obj\\:\\`None\\`\\)\\]\\]\\, "
"\\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`T\\`\\`\\)\\]\\]\\]\\]\\, "
"\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~discord.ext.commands.core.Command\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`CogT\\`\\`\\, bound\\= Cog\\)\\, "
"\\:py\\:class\\:\\`\\~typing.ParamSpec\\`\\\\ \\\\\\(\\`\\`P\\`\\`\\, "
"bound\\= \\:py\\:obj\\:\\`None\\`\\)\\, "
"\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`T\\`\\`\\)\\]\\,"
" \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`CommandT\\`\\`\\, bound\\= Command\\)\\]\\]`"
msgstr ""

#: 55c95dbeda95432bbc44c8e8b1bbfb82 discord.ext.commands.core.group:1 of
msgid "A decorator that transforms a function into a :class:`.Group`."
msgstr ""

#: 0bdb03a91ab2407e8b5340be7023af87 discord.ext.commands.core.group:3 of
msgid ""
"This is similar to the :func:`.command` decorator but the ``cls`` "
"parameter is set to :class:`Group` by default."
msgstr ""

#: 7fb2f6d0e28b47be902cbe75c475e17f discord.ext.commands.core.group:6 of
msgid "The ``cls`` parameter can now be passed."
msgstr ""

#: 9e786b12bf0e42e587114de4fa12b997 discord.ext.commands.core.group:15 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ "
"\\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.Concatenate\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`ContextT\\`\\`\\, bound\\= Context\\)\\, "
"\\:py\\:class\\:\\`\\~typing.ParamSpec\\`\\\\ \\\\\\(\\`\\`P\\`\\`\\, "
"bound\\= \\:py\\:obj\\:\\`None\\`\\)\\]\\]\\, "
"\\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\, "
"\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ "
"\\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.Concatenate\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`CogT\\`\\`\\, bound\\= Cog\\)\\, "
"\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`ContextT\\`\\`\\, bound\\= Context\\)\\, "
"\\:py\\:class\\:\\`\\~typing.ParamSpec\\`\\\\ \\\\\\(\\`\\`P\\`\\`\\, "
"bound\\= \\:py\\:obj\\:\\`None\\`\\)\\]\\]\\, "
"\\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:data\\:\\`\\~typing.Any\\`\\, "
"\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`T\\`\\`\\)\\]\\]\\]\\]\\, "
"\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~discord.ext.commands.core.Group\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`CogT\\`\\`\\, bound\\= Cog\\)\\, "
"\\:py\\:class\\:\\`\\~typing.ParamSpec\\`\\\\ \\\\\\(\\`\\`P\\`\\`\\, "
"bound\\= \\:py\\:obj\\:\\`None\\`\\)\\, "
"\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`T\\`\\`\\)\\]\\,"
" \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`GroupT\\`\\`\\,"
" bound\\= Group\\)\\]\\]`"
msgstr ""

#: ../../ext/commands/api.rst:123 be8eaaf347484952b041ca7193bfde75
msgid "Command"
msgstr ""

#: b2740c0e271c45ffa31ee9e4ef9110d9 discord.ext.commands.core.Command:1 of
msgid "A class that implements the protocol for a bot text command."
msgstr ""

#: 38d70fc6a98e49428906980496be477e discord.ext.commands.core.Command:3 of
msgid ""
"These are not created manually, instead they are created via the "
"decorator or functional interface."
msgstr ""

#: discord.ext.commands.core.Command:8 fea00179db634bc3b5280d608f1aaf46 of
msgid "The name of the command."
msgstr ""

#: 74f8737bef614b73b50cc19b5b1fedcc discord.ext.commands.core.Command:14 of
msgid "The coroutine that is executed when the command is called."
msgstr ""

#: 724c19721b204ffcb58a102838f26c9c discord.ext.commands.core.Command:16 of
msgid ":ref:`coroutine <coroutine>`"
msgstr ""

#: 9cbe2b0ec42e48bc9b35c83c82e2940a discord.ext.commands.core.Command:20 of
msgid "The long help text for the command."
msgstr ""

#: 1cae6d584b4042669667b6b5b19e8ca7 2fa587e86d45443b9e8de44d3a40adb3
#: discord.ext.commands.context.Context:50
#: discord.ext.commands.context.Context:63
#: discord.ext.commands.context.Context:90 discord.ext.commands.core.Command:22
#: discord.ext.commands.core.Command:28 discord.ext.commands.core.Command:34 of
msgid "Optional[:class:`str`]"
msgstr ""

#: b746e9e3fb354ee1a6d3769b00a98e29 discord.ext.commands.core.Command:26 of
msgid "The short help text for the command."
msgstr ""

#: dd8d8fc9f64e45ef87981bb7bc7471f4 discord.ext.commands.core.Command:32 of
msgid "A replacement for arguments in the default help text."
msgstr ""

#: 42fc2c295e1243b79b516d3c03109b96 discord.ext.commands.core.Command:38 of
msgid "The list of aliases the command can be invoked under."
msgstr ""

#: cf54b9762201480cab2c561bc2d887c4 discord.ext.commands.core.Command:40 of
msgid "Union[List[:class:`str`], Tuple[:class:`str`]]"
msgstr ""

#: 0a79f1e290f24adc8156b6f1bd32b74e discord.ext.commands.core.Command:44 of
msgid ""
"A boolean that indicates if the command is currently enabled. If the "
"command is invoked while it is disabled, then :exc:`.DisabledCommand` is "
"raised to the :func:`.on_command_error` event. Defaults to ``True``."
msgstr ""

#: discord.ext.commands.core.Command:53 f54613a1d2e0437eb1091031a27cd79a of
msgid ""
"The parent group that this command belongs to. ``None`` if there isn't "
"one."
msgstr ""

#: 3df23d8b3d4345098f4d4afd3baff1e2 discord.ext.commands.core.Command:56 of
msgid "Optional[:class:`Group`]"
msgstr ""

#: d8e1092e543f43618448013b2110ca43 discord.ext.commands.core.Command:60 of
msgid "The cog that this command belongs to. ``None`` if there isn't one."
msgstr ""

#: 8244542dc8084a9da29dd9ff51c67359 discord.ext.commands.core.Command:66 of
msgid ""
"A list of predicates that verifies if the command could be executed with "
"the given :class:`.Context` as the sole parameter. If an exception is "
"necessary to be thrown to signal failure, then one inherited from "
":exc:`.CommandError` should be used. Note that if the checks fail then "
":exc:`.CheckFailure` exception is raised to the :func:`.on_command_error`"
" event."
msgstr ""

#: 94ebb1d8ffa74c098316e5fc504e71fd discord.ext.commands.core.Command:73 of
msgid "List[Callable[[:class:`.Context`], :class:`bool`]]"
msgstr ""

#: 145735dc029546e0a341c7629552a704 discord.ext.commands.core.Command:77 of
msgid "The message prefixed into the default help command."
msgstr ""

#: 9e57d5cbe57144f392610c29de2f9c85 discord.ext.commands.core.Command:83 of
msgid ""
"If ``True``\\, the default help command does not show this in the help "
"output."
msgstr ""

#: 14cac0f6a6ae461ab7fe5343e0f7f3d0 discord.ext.commands.core.Command:90 of
msgid ""
"If ``False`` and a keyword-only argument is provided then the keyword "
"only argument is stripped and handled as if it was a regular argument "
"that handles :exc:`.MissingRequiredArgument` and default values in a "
"regular matter rather than passing the rest completely raw. If ``True`` "
"then the keyword-only argument will pass in the rest of the arguments in "
"a completely raw matter. Defaults to ``False``."
msgstr ""

#: 093e94bdc8a74603b4cfab983620c699 discord.ext.commands.core.Command:101 of
msgid "The subcommand that was invoked, if any."
msgstr ""

#: b9e5bf62202047d7a0dbd96c11552eb8 discord.ext.commands.core.Command:107 of
msgid ""
"If ``True`` and a variadic positional argument is specified, requires the"
" user to specify at least one argument. Defaults to ``False``."
msgstr ""

#: 4d59accdbe704484b8e291b9fa4bcffd discord.ext.commands.core.Command:116 of
msgid ""
"If ``True``\\, ignores extraneous strings passed to a command if all its "
"requirements are met (e.g. ``?foo a b c`` when only expecting ``a`` and "
"``b``). Otherwise :func:`.on_command_error` and local error handlers are "
"called with :exc:`.TooManyArguments`. Defaults to ``True``."
msgstr ""

#: discord.ext.commands.core.Command:125 f1dc7aea853f496cb8f912346dbd74ba of
msgid ""
"If ``True``\\, cooldown processing is done after argument parsing, which "
"calls converters. If ``False`` then cooldown processing is done first and"
" then the converters are called second. Defaults to ``False``."
msgstr ""

#: acbffbc6ee1a4eae9845e9c260ca365f discord.ext.commands.core.Command:133 of
msgid "A dict of user provided extras to attach to the Command."
msgstr ""

#: da23aa9c2f1b457c89b393dc1ce8d53d discord.ext.commands.core.Command:136 of
msgid "This object may be copied by the library."
msgstr ""

#: bc8667441e1444d0897a7803d2b26f77 discord.cog.CogMeta:65
#: discord.ext.commands.context.Context:35
#: discord.ext.commands.core.Command:138 discord.ext.commands.core.GroupMixin:9
#: discord.ext.commands.help.HelpCommand:44 of
msgid ":class:`dict`"
msgstr ""

#: 349fc1bcfd9746f7be16678892cd7ec9 discord.ext.commands.core.Command:142 of
msgid "cooldown: Optional[:class:`Cooldown`]"
msgstr ""

#: 8f08e59bec544f6fa289612f427d41a9 discord.ext.commands.core.Command:143 of
msgid ""
"The cooldown applied when the command is invoked. ``None`` if the command"
" doesn't have a cooldown."
msgstr ""

#: 90e414e8d0b44cd79cab048aefdf6405
#: discord.ext.commands.core.Command.after_invoke:1
#: discord.ext.commands.core.after_invoke:1 of
msgid "A decorator that registers a coroutine as a post-invoke hook."
msgstr ""

#: d32e1cac49544fd5ae400c1fba138334
#: discord.ext.commands.core.Command.after_invoke:3 of
msgid ""
"A post-invoke hook is called directly after the command is called. This "
"makes it a useful function to clean-up database connections or any type "
"of clean up required."
msgstr ""

#: 51aa7afdb49f4da6ac20b1dcf6b57e06
#: discord.ext.commands.core.Command.after_invoke:7 of
msgid "This post-invoke hook takes a sole parameter, a :class:`.Context`."
msgstr ""

#: 19f8492ddfb9427abc3cde521480b85d
#: discord.ext.commands.core.Command.after_invoke:9 of
msgid "See :meth:`.Bot.after_invoke` for more info."
msgstr ""

#: 7ae4c11caa124e808c7fb7b202116f45
#: discord.ext.commands.core.Command.after_invoke:17
#: discord.ext.commands.core.Command.before_invoke:17 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`HookT\\`\\`\\, bound\\= Hook\\)`"
msgstr ""

#: 855503b6108245fcb68107267c49085e
#: discord.ext.commands.core.Command.before_invoke:1
#: discord.ext.commands.core.before_invoke:1 of
msgid "A decorator that registers a coroutine as a pre-invoke hook."
msgstr ""

#: cf73320a95f4476b80a6f070ab5b02e3
#: discord.ext.commands.core.Command.before_invoke:3 of
msgid ""
"A pre-invoke hook is called directly before the command is called. This "
"makes it a useful function to set up database connections or any type of "
"set up required."
msgstr ""

#: 06e921e2b2fb4c21a72f500bd46a2810
#: discord.ext.commands.core.Command.before_invoke:7 of
msgid "This pre-invoke hook takes a sole parameter, a :class:`.Context`."
msgstr ""

#: 40fdc1fda7b94b879512d0e996f8258d
#: discord.ext.commands.core.Command.before_invoke:9 of
msgid "See :meth:`.Bot.before_invoke` for more info."
msgstr ""

#: discord.ext.commands.core.Command.error:1 e84346f5de634da79e860d51d22db014
#: of
msgid "A decorator that registers a coroutine as a local error handler."
msgstr ""

#: discord.ext.commands.core.Command.error:3 f38c35e1e73e491699c0f0ddb73663c7
#: of
msgid ""
"A local error handler is an :func:`.on_command_error` event limited to a "
"single command. However, the :func:`.on_command_error` is still invoked "
"afterwards as the catch-all."
msgstr ""

#: 23a93b3beb964d8cbe69ad9ff6b02688 discord.ext.commands.core.Command.error:8
#: of
msgid "The coroutine to register as the local error handler."
msgstr ""

#: 20f06aa013104c82b4b355c39d43a727 discord.ext.commands.core.Command.error:13
#: of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`ErrorT\\`\\`\\, bound\\= Error\\)`"
msgstr ""

#: ad8decf8dfa04986bacfea9596033dc8
#: discord.ext.commands.core.Command.add_check:1 of
msgid "Adds a check to the command."
msgstr ""

#: ade7620bbb9c4a79a2272aa1abd4ec09
#: discord.ext.commands.core.Command.add_check:3 of
msgid "This is the non-decorator interface to :func:`.check`."
msgstr ""

#: 94e53b88c7864946aa8238fa03858fcf df2ebe85b1c24e0994ef469c4abbb696
#: discord.ext.commands.core.Command.add_check:8
#: discord.ext.commands.help.HelpCommand.add_check:6 of
msgid "The function that will be used as a check."
msgstr ""

#: c9b66986248346dba1791fd1cb802588
#: discord.ext.commands.core.Command.remove_check:1 of
msgid "Removes a check from the command."
msgstr ""

#: 03c21e4d038949829e3d40810fc4b45d 765ac029ae7e480ab864cfded7dc1d08
#: discord.ext.commands.core.Command.remove_check:3
#: discord.ext.commands.help.HelpCommand.remove_check:3 of
msgid ""
"This function is idempotent and will not raise an exception if the "
"function is not in the command's checks."
msgstr ""

#: 53d65f268cfb4a8ba97bcd294871ec32 dc6b6d44452748f48fb47d44228fb6fa
#: discord.ext.commands.core.Command.remove_check:9
#: discord.ext.commands.help.HelpCommand.remove_check:9 of
msgid "The function to remove from the checks."
msgstr ""

#: 2d740adac15a4ca48c6960d4946687a2 discord.ext.commands.core.Command.update:1
#: of
msgid "Updates :class:`Command` instance with updated attribute."
msgstr ""

#: 3420696530994c2dbd03cb86dbc54b25 discord.ext.commands.core.Command.update:3
#: of
msgid ""
"This works similarly to the :func:`.command` decorator in terms of "
"parameters in that they are passed to the :class:`Command` or subclass "
"constructors, sans the name and callback."
msgstr ""

#: a94a96db6cea4071aed07dc63c09457a
#: discord.ext.commands.core.Command.__call__:3 of
msgid "Calls the internal callback that the command holds."
msgstr ""

#: 06e2104d086e4245b4d7953660649bc0
#: discord.ext.commands.core.Command.__call__:7 of
msgid ""
"This bypasses all mechanisms -- including checks, converters, invoke "
"hooks, cooldowns, etc. You must take care to pass the proper arguments "
"and types to this function."
msgstr ""

#: 71c24cc891e04432849002e8709dfdf0
#: discord.ext.commands.context.Context.invoke:27
#: discord.ext.commands.core.Command.__call__:19 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`T\\`\\`\\)`"
msgstr ""

#: 6cd1c8a959c040b78e73444a59627b2c discord.ext.commands.core.Command.copy:1 of
msgid "Creates a copy of this command."
msgstr ""

#: 1db5a8f7327d4ba1a4f75c7409af2b59 discord.ext.commands.core.Command.copy:3 of
msgid "A new instance of this command."
msgstr ""

#: c0493f185aa540c18c9db1724fd3fb0e discord.ext.commands.core.Command.copy:4 of
msgid ":class:`Command`"
msgstr ""

#: 422208602e70468a8cc4695ddaf9285c discord.ext.commands.Command.clean_params:1
#: discord.ext.commands.Group.clean_params:1 of
msgid ""
"Dict[:class:`str`, :class:`inspect.Parameter`]: Retrieves the parameter "
"dictionary without the context or self parameters."
msgstr ""

#: 697abd5fedc04c189332444f2135a9ac discord.ext.commands.Command.clean_params:4
#: discord.ext.commands.Group.clean_params:4 of
msgid "Useful for inspecting signature."
msgstr ""

#: 512c2c1ea4184e77bfd168579929e201
#: discord.ext.commands.Command.full_parent_name:1
#: discord.ext.commands.Group.full_parent_name:1 of
msgid "Retrieves the fully qualified parent command name."
msgstr ""

#: c3494ed24b134e688ac5f49b5eb047d7
#: discord.ext.commands.Command.full_parent_name:3
#: discord.ext.commands.Group.full_parent_name:3 of
msgid ""
"This the base command name required to execute it. For example, in ``?one"
" two three`` the parent name would be ``one two``."
msgstr ""

#: b6e4c6ca7e85435f9351a14cbf9b2bcb discord.ext.commands.Command.parents:1
#: discord.ext.commands.Group.parents:1 of
msgid "Retrieves the parents of this command."
msgstr ""

#: 21ee38bff0764697b17dd22c2db5ed96 discord.ext.commands.Command.parents:3
#: discord.ext.commands.Group.parents:3 of
msgid "If the command has no parents then it returns an empty :class:`list`."
msgstr ""

#: 5eedd15d7f0045a89807cee976a97cc0 discord.ext.commands.Command.parents:5
#: discord.ext.commands.Group.parents:5 of
msgid "For example in commands ``?a b c test``, the parents are ``[c, b, a]``."
msgstr ""

#: discord.ext.commands.Command.root_parent:1
#: discord.ext.commands.Group.root_parent:1 e65c9a5c570a416f969edeec9068e39a of
msgid "Retrieves the root parent of this command."
msgstr ""

#: 2f1f6da9123b4f4aa3d0a56f508f3e3b discord.ext.commands.Command.root_parent:3
#: discord.ext.commands.Group.root_parent:3 of
msgid "If the command has no parents then it returns ``None``."
msgstr ""

#: 6521e09bdf944e6db9d3f60cbe90b65f discord.ext.commands.Command.root_parent:5
#: discord.ext.commands.Group.root_parent:5 of
msgid "For example in commands ``?a b c test``, the root parent is ``a``."
msgstr ""

#: bcf9477a72ac4c729bb905cfcb4e2405
#: discord.ext.commands.Command.qualified_name:1
#: discord.ext.commands.Group.qualified_name:1 of
msgid "Retrieves the fully qualified command name."
msgstr ""

#: d070d67e1ecf455b8dfd8194fa5d3e29
#: discord.ext.commands.Command.qualified_name:3
#: discord.ext.commands.Group.qualified_name:3 of
msgid ""
"This is the full parent name with the command name as well. For example, "
"in ``?one two three`` the qualified name would be ``one two three``."
msgstr ""

#: 30141c30cc364576aac449f316b52da0
#: discord.ext.commands.core.Command.is_on_cooldown:1 of
msgid "Checks whether the command is currently on cooldown."
msgstr ""

#: 6e7a91b24b664b699c0791b676c4aaac
#: discord.ext.commands.core.Command.is_on_cooldown:4 of
msgid "The invocation context to use when checking the command's cooldown status."
msgstr ""

#: b4eff87099ad4ac9852614c8f3eb7862
#: discord.ext.commands.core.Command.is_on_cooldown:7 of
msgid "A boolean indicating if the command is on cooldown."
msgstr ""

#: 8a5495bda5cb470183ef2086755ce0f0
#: discord.ext.commands.core.Command.reset_cooldown:1 of
msgid "Resets the cooldown on this command."
msgstr ""

#: ca312cee971a438abb381bf66fb2cbff
#: discord.ext.commands.core.Command.reset_cooldown:4 of
msgid "The invocation context to reset the cooldown under."
msgstr ""

#: 51fa09d7f11f43a1b781787a52ce8436
#: discord.ext.commands.core.Command.get_cooldown_retry_after:1 of
msgid "Retrieves the amount of seconds before this command can be tried again."
msgstr ""

#: 45878d40a5fa4890ad42de0e8e9edc6e
#: discord.ext.commands.core.Command.get_cooldown_retry_after:6 of
msgid "The invocation context to retrieve the cooldown from."
msgstr ""

#: discord.ext.commands.core.Command.get_cooldown_retry_after:9
#: fdf38ba24dc14b689ad1e1eab70c6c1d of
msgid ""
"The amount of time left on this command's cooldown in seconds. If this is"
" ``0.0`` then the command isn't on cooldown."
msgstr ""

#: 34090bfda6e1409eb479e3b919bede99 discord.ext.commands.cooldowns.Cooldown:13
#: discord.ext.commands.cooldowns.Cooldown.get_retry_after:9
#: discord.ext.commands.core.Command.get_cooldown_retry_after:11
#: discord.ext.commands.errors.CommandOnCooldown:22 of
msgid ":class:`float`"
msgstr ""

#: 3970666bdb78497b8d5a65197482a7bc
#: discord.ext.commands.core.Command.has_error_handler:1 of
msgid ""
"Checks whether the command has an error handler registered. :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: a5a5f0ae305348feb8f1456838a1ee4a discord.ext.commands.Command.cog_name:1
#: discord.ext.commands.Group.cog_name:1 of
msgid "The name of the cog this command belongs to, if any."
msgstr ""

#: a359e8b0858f4bff80df0d29205d3ab0 discord.ext.commands.Command.short_doc:1
#: discord.ext.commands.Group.short_doc:1 of
msgid "Gets the \"short\" documentation of a command."
msgstr ""

#: 8f95d0a88a984f439e3dadb59ef199aa discord.ext.commands.Command.short_doc:3
#: discord.ext.commands.Group.short_doc:3 of
msgid ""
"By default, this is the :attr:`.brief` attribute. If that lookup leads to"
" an empty string then the first line of the :attr:`.help` attribute is "
"used instead."
msgstr ""

#: 0c0b9317fcac46ecae100cfc277bf9f6 discord.ext.commands.Command.signature:1
#: discord.ext.commands.Group.signature:1 of
msgid "Returns a POSIX-like signature useful for help command output."
msgstr ""

#: cc5fd641e6244884961560f59e53c689 discord.ext.commands.core.Command.can_run:3
#: of
msgid ""
"Checks if the command can be executed by checking all the predicates "
"inside the :attr:`~Command.checks` attribute. This also checks whether "
"the command is disabled."
msgstr ""

#: 3950bda5fbf14e40adee997651342820 discord.ext.commands.core.Command.can_run:7
#: of
msgid "Checks whether the command is disabled or not"
msgstr ""

#: a6de3b877d0e4c7a991b4259bdb1f086
#: discord.ext.commands.core.Command.can_run:11 of
msgid "The ctx of the command currently being invoked."
msgstr ""

#: discord.ext.commands.core.Command.can_run:14
#: ff73ac563b12400cbce6a1ad1f8c9d09 of
msgid "A boolean indicating if the command can be invoked."
msgstr ""

#: 076a8f5c048c40b2bcc438d5a1ea5158
#: discord.ext.commands.core.Command.can_run:17 of
msgid ""
"Any command error that was raised during a check call will be propagated"
"     by this function."
msgstr ""

#: ../../ext/commands/api.rst:142 29f1aee053a242acbeb1f2c4aecfe1da
msgid "Group"
msgstr ""

#: 65da7b12e7ed47018fbcd2ff170d1f42 discord.ext.commands.core.Group:1 of
msgid ""
"A class that implements a grouping protocol for commands to be executed "
"as subcommands."
msgstr ""

#: 44ff4fdaef554c62906b9c12c2cd9e96 discord.ext.commands.core.Group:4 of
msgid ""
"This class is a subclass of :class:`.Command` and thus all options valid "
"in :class:`.Command` are valid in here as well."
msgstr ""

#: cd807d5e802148398e05f6c146d7f48a discord.ext.commands.core.Group:9 of
msgid ""
"Indicates if the group callback should begin parsing and invocation only "
"if no subcommand was found. Useful for making it an error handling "
"function to tell the user that no subcommand was found or to have "
"different functionality in case no subcommand was found. If this is "
"``False``, then the group callback will always be invoked first. This "
"means that the checks and the parsing dictated by its parameters will be "
"executed. Defaults to ``False``."
msgstr ""

#: 91d77491c49d418ebb264e030f237dc4 discord.ext.commands.core.Group:22 of
msgid ""
"Indicates if the group's commands should be case-insensitive. Defaults to"
" ``False``."
msgstr ""

#: b43b4fa9017b4d8f854052a65d37b34b discord.ext.commands.core.Group.copy:1 of
msgid "Creates a copy of this :class:`Group`."
msgstr ""

#: bc8bbf36168a464287d18919b8ea1f56 discord.ext.commands.core.Group.copy:3 of
msgid "A new instance of this group."
msgstr ""

#: 479727513b454596af0d83565a93505c discord.ext.commands.core.Group.copy:4 of
msgid ":class:`Group`"
msgstr ""

#: ../../ext/commands/api.rst:167 843f0ae741c841bfa76f1b6f1d03c365
msgid "GroupMixin"
msgstr ""

#: b31eb1a7344948f0a4b726060f32dcc5 discord.ext.commands.core.GroupMixin:1 of
msgid ""
"A mixin that implements common functionality for classes that behave "
"similar to :class:`.Group` and are allowed to register commands."
msgstr ""

#: 01122ecc57164cf2a9d1668806c98ec7 discord.ext.commands.core.GroupMixin:6 of
msgid "A mapping of command name to :class:`.Command` objects."
msgstr ""

#: b98c3fc6b795488fbf03190087b1ed2e discord.ext.commands.core.GroupMixin:13 of
msgid "Whether the commands should be case-insensitive. Defaults to ``False``."
msgstr ""

#: ../../ext/commands/api.rst:184 e2038f767482430fba55bbdb2a1b9bb1
msgid "Cogs"
msgstr ""

#: ../../ext/commands/api.rst:187 4b29b920e0514019815c861364b806d7
msgid "Cog"
msgstr ""

#: 1456f4943caa4b34a8e69f60b5a07808
#: discord.ext.commands.cog.Cog.walk_commands:1 of
msgid ""
"An iterator that recursively walks through this cog's commands and "
"subcommands."
msgstr ""

#: b0889f2d31ab45d59206aac0730ee26b
#: discord.ext.commands.cog.Cog.walk_commands:3 of
msgid ""
"Union[:class:`.Command`, :class:`.Group`] -- A command or group from the "
"cog."
msgstr ""

#: discord.ext.commands.cog.Cog.get_commands:1 e903471dee0946f698493b70bbd6bfff
#: of
msgid ""
"A :class:`list` of commands that are defined inside this cog.  .. note::"
"      This does not include subcommands."
msgstr ""

#: 10b1036c1fb04d5fadf115fd0156dc7d discord.ext.commands.cog.Cog.get_commands:1
#: of
msgid "A :class:`list` of commands that are defined inside this cog."
msgstr ""

#: c8f8940e1a334d72ace74656658dc636 discord.ext.commands.cog.Cog.get_commands:5
#: of
msgid "This does not include subcommands."
msgstr ""

#: 4eef2169b57545a39732b35f19317928 discord.ext.commands.cog.Cog.get_commands:6
#: of
msgid "List[Union[:class:`~discord.ApplicationCommand`, :class:`.Command`]]"
msgstr ""

#: ../../ext/commands/api.rst:195 9ffc5edca62a4591b776577d4c3be17a
msgid "CogMeta"
msgstr ""

#: 6d3498e089d64e64bd39b02748feed7a discord.cog.CogMeta:1 of
msgid "A metaclass for defining a cog."
msgstr ""

#: 818b7abc0e4e4c92ad300745b12e67f3 discord.cog.CogMeta:3 of
msgid ""
"Note that you should probably not use this directly. It is exposed purely"
" for documentation purposes along with making custom metaclasses to "
"intermix with other metaclasses such as the :class:`abc.ABCMeta` "
"metaclass."
msgstr ""

#: 14bca144e04f49f2b6a2ffa5bd12bb21 discord.cog.CogMeta:7 of
msgid ""
"For example, to create an abstract cog mixin class, the following would "
"be done."
msgstr ""

#: 8541d72ae9d240c5853b5b012bac5870 discord.cog.CogMeta:24 of
msgid ""
"When passing an attribute of a metaclass that is documented below, note "
"that you must pass it as a keyword-only argument to the class creation "
"like the following example:"
msgstr ""

#: 4d0773ce7be443b3b02b0723cfa9ee2a discord.cog.CogMeta:35 of
msgid ""
"The cog name. By default, it is the name of the class with no "
"modification."
msgstr ""

#: dbc8e995b5204e4b90abebe755df26d2 discord.cog.CogMeta:41 of
msgid "The cog description. By default, it is the cleaned docstring of the class."
msgstr ""

#: 005387bb127242fc80381666a6e1faf3 discord.cog.CogMeta:49 of
msgid ""
"A list of attributes to apply to every command inside this cog. The "
"dictionary is passed into the :class:`Command` options at ``__init__``. "
"If you specify attributes inside the command attribute in the class, it "
"will override the one specified inside this attribute. For example:"
msgstr ""

#: discord.cog.CogMeta:69 e654676f10784a318be772baf59e50ac of
msgid ""
"A shortcut to :attr:`.command_attrs`, what ``guild_ids`` should all "
"application commands have in the cog. You can override this by setting "
"``guild_ids`` per command."
msgstr ""

#: discord.cog.CogMeta:74 f873bb0240304b34b00b4783ad8f63aa of
msgid "Optional[List[:class:`int`]]"
msgstr ""

#: ../../ext/commands/api.rst:205 3ba5cbee70fb46a8a7289027a30c1154
msgid "Help Commands"
msgstr ""

#: ../../ext/commands/api.rst:208 a9b0e1487f8544b8bd6c8377c81509ad
msgid "HelpCommand"
msgstr ""

#: 3728d038715e49f5a3791584fce2a04c discord.ext.commands.help.HelpCommand:1 of
msgid "The base implementation for help command formatting."
msgstr ""

#: 4bf99b5a33634da38019379fa568c795 discord.ext.commands.help.HelpCommand:5 of
msgid ""
"Internally instances of this class are deep copied every time the command"
" itself is invoked to prevent a race condition mentioned in :dpy-"
"issue:`2123`."
msgstr ""

#: 57d8ce635a7c4dfd85c2969ac2a3326d discord.ext.commands.help.HelpCommand:9 of
msgid ""
"This means that relying on the state of this class to be the same between"
" command invocations would not work as expected."
msgstr ""

#: 8c76b92e97954a5fb2a3b8af6e6cc3db discord.ext.commands.help.HelpCommand:14 of
msgid ""
"The context that invoked this help formatter. This is generally set after"
" the help command assigned, :func:`command_callback`\\, has been called."
msgstr ""

#: 92aebe5e9b4d4fecaa3da5db20b743c7 discord.ext.commands.help.HelpCommand:17 of
msgid "Optional[:class:`Context`]"
msgstr ""

#: 28d3ba87fb3143faafc7eb87f9d151bf discord.ext.commands.help.HelpCommand:21 of
msgid ""
"Specifies if hidden commands should be shown in the output. Defaults to "
"``False``."
msgstr ""

#: 1ec7123c827d411a81fe0bee61f34a24 discord.ext.commands.help.HelpCommand:28 of
msgid ""
"Specifies if commands should have their :attr:`.Command.checks` called "
"and verified. If ``True``, always calls :attr:`.Command.checks`. If "
"``None``, only calls :attr:`.Command.checks` in a guild setting. If "
"``False``, never calls :attr:`.Command.checks`. Defaults to ``True``."
msgstr ""

#: 308cf1e234b44a168f5eb03f15d8e8be
#: discord.ext.commands.help.DefaultHelpCommand:29
#: discord.ext.commands.help.HelpCommand:35
#: discord.ext.commands.help.MinimalHelpCommand:34 of
msgid "Optional[:class:`bool`]"
msgstr ""

#: 1ccdbf4b50b44ab0b1fd37f54bd29a43 discord.ext.commands.help.HelpCommand:39 of
msgid ""
"A dictionary of options to pass in for the construction of the help "
"command. This allows you to change the command behaviour without actually"
" changing the implementation of the command. The attributes will be the "
"same as the ones passed in the :class:`.Command` constructor."
msgstr ""

#: c57ad58f60af400783c843a1cebeb8b7
#: discord.ext.commands.help.HelpCommand.add_check:1 of
msgid "Adds a check to the help command."
msgstr ""

#: 54b841f106a3437e9947dfc91d5d0e84
#: discord.ext.commands.help.HelpCommand.remove_check:1 of
msgid "Removes a check from the help command."
msgstr ""

#: 59fa9d80d1b34f4bb1a23eb82603def1
#: discord.ext.commands.help.HelpCommand.get_bot_mapping:1 of
msgid "Retrieves the bot mapping passed to :meth:`send_bot_help`."
msgstr ""

#: discord.ext.commands.HelpCommand.invoked_with:1
#: fe94b765ac834e9bb6aa25e17682999d of
msgid ""
"Similar to :attr:`Context.invoked_with` except properly handles the case "
"where :meth:`Context.send_help` is used."
msgstr ""

#: bad68c0718fe4f8dbbd049e0bb78b35a
#: discord.ext.commands.HelpCommand.invoked_with:4 of
msgid ""
"If the help command was used regularly then this returns the "
":attr:`Context.invoked_with` attribute. Otherwise, if the help command "
"was called using :meth:`Context.send_help` then it returns the internal "
"command name of the help command."
msgstr ""

#: 9605ca58dc7540ba809f5b9944de8e93
#: discord.ext.commands.HelpCommand.invoked_with:9 of
msgid "The command name that triggered this invocation."
msgstr ""

#: 9d4ac7ff40e040b3b6a9aeb703e66c99
#: discord.ext.commands.help.HelpCommand.get_command_signature:1
#: discord.ext.commands.help.MinimalHelpCommand.get_command_signature:1 of
msgid "Retrieves the signature portion of the help page."
msgstr ""

#: b3103498c74f46489696da57302a113e
#: discord.ext.commands.help.HelpCommand.get_command_signature:4
#: discord.ext.commands.help.MinimalHelpCommand.get_command_signature:4 of
msgid "The command to get the signature of."
msgstr ""

#: 0870226ae3fd45bbb1d7b250eedd749c
#: discord.ext.commands.help.HelpCommand.get_command_signature:7
#: discord.ext.commands.help.MinimalHelpCommand.get_command_signature:7 of
msgid "The signature for the command."
msgstr ""

#: a2e753b9567a47f8bc8fa70e5ad3c66d
#: discord.ext.commands.help.HelpCommand.remove_mentions:1 of
msgid "Removes mentions from the string to prevent abuse."
msgstr ""

#: 1ba0ed368b63426894a070cbaab0c580
#: discord.ext.commands.help.HelpCommand.remove_mentions:3 of
msgid "This includes ``@everyone``, ``@here``, member mentions and role mentions."
msgstr ""

#: 818a2ecc265d46fca2d1e230a5e1256f
#: discord.ext.commands.help.HelpCommand.remove_mentions:5 of
msgid "The string with mentions removed."
msgstr ""

#: 6733db68c82649d2ad2b96e2b5b0606a discord.ext.commands.HelpCommand.cog:1 of
msgid "A property for retrieving or setting the cog for the help command."
msgstr ""

#: discord.ext.commands.HelpCommand.cog:3 f0a6d3eda29d4e77884be9d27dc414c3 of
msgid ""
"When a cog is set for the help command, it is as-if the help command "
"belongs to that cog. All cog special methods will apply to the help "
"command, and it will be automatically unset on unload."
msgstr ""

#: bd2865c7de154f0393060ce06ec5c389 discord.ext.commands.HelpCommand.cog:7 of
msgid "To unbind the cog from the help command, you can set it to ``None``."
msgstr ""

#: b572e133ce4f4e49afc52d6cf5f868fc discord.ext.commands.HelpCommand.cog:9 of
msgid "The cog that is currently set for the help command."
msgstr ""

#: a9b1544b7406441bbc26c947190156a5
#: discord.ext.commands.help.HelpCommand.command_not_found:1
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:1 of
msgid "|maybecoro|"
msgstr ""

#: 11b6366f06024bc18f31f51384b84719
#: discord.ext.commands.help.HelpCommand.command_not_found:3 of
msgid ""
"A method called when a command is not found in the help command. This is "
"useful to override for i18n."
msgstr ""

#: 870b0c00321c4963b624a270b9ec77ad
#: discord.ext.commands.help.HelpCommand.command_not_found:6 of
msgid "Defaults to ``No command called {0} found.``"
msgstr ""

#: a7682b9639e94a5f8c68412a2d7a34bd
#: discord.ext.commands.help.HelpCommand.command_not_found:9 of
msgid ""
"The string that contains the invalid command. Note that this has had "
"mentions removed to prevent abuse."
msgstr ""

#: discord.ext.commands.help.HelpCommand.command_not_found:13
#: f966be26463f407884dbcda0640ec7c1 of
msgid "The string to use when a command has not been found."
msgstr ""

#: 90f61b1e8c2b42159ea4d0f65e3ab6be
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:3 of
msgid ""
"A method called when a command did not have a subcommand requested in the"
" help command. This is useful to override for i18n."
msgstr ""

#: 04095c7b194645cc8c006f273579b8b7
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:6 of
msgid "Defaults to either:"
msgstr ""

#: bd93202046e7474bbfd1271fb5aebfa7
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:8 of
msgid "``'Command \"{command.qualified_name}\" has no subcommands.'``"
msgstr ""

#: 2f9dbb03410e41b39b38db1520d17207
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:9 of
msgid "If there is no subcommand in the ``command`` parameter."
msgstr ""

#: 1bd86a8162e147a2b78964b23a6da060
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:10 of
msgid ""
"``'Command \"{command.qualified_name}\" has no subcommand named "
"{string}'``"
msgstr ""

#: d742621c65014debaf4e6ef8da190d11
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:11 of
msgid "If the ``command`` parameter has subcommands but not one named ``string``."
msgstr ""

#: c7f990e681054582bab785f391126075
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:14 of
msgid "The command that did not have the subcommand requested."
msgstr ""

#: de81605a27384dbb9bfee27cb9f993c6
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:17 of
msgid ""
"The string that contains the invalid subcommand. Note that this has had "
"mentions removed to prevent abuse."
msgstr ""

#: bf836e28f2c04c2cb1c3ceb955a4c816
#: discord.ext.commands.help.HelpCommand.subcommand_not_found:21 of
msgid "The string to use when the command did not have the subcommand requested."
msgstr ""

#: 8cdeecd1f78a45a490d0b086b59dbfea
#: discord.ext.commands.help.HelpCommand.filter_commands:3 of
msgid "Returns a filtered list of commands and optionally sorts them."
msgstr ""

#: c3c2bdabbbf04ae289fa869f1aac253a
#: discord.ext.commands.help.HelpCommand.filter_commands:5 of
msgid ""
"This takes into account the :attr:`verify_checks` and :attr:`show_hidden`"
" attributes."
msgstr ""

#: 2e41bb491bbf4887818e70951501c8c3
#: discord.ext.commands.help.HelpCommand.filter_commands:9 of
msgid "An iterable of commands that are getting filtered."
msgstr ""

#: discord.ext.commands.help.HelpCommand.filter_commands:12
#: e8074b04eb1b465ca6f97d8caa66f96c of
msgid "Whether to sort the result."
msgstr ""

#: discord.ext.commands.help.HelpCommand.filter_commands:15
#: f82defb618954648af121dc1a4a87f4f of
msgid ""
"An optional key function to pass to :func:`py:sorted` that takes a "
":class:`Command` as its sole parameter. If ``sort`` is passed as ``True``"
" then this will default as the command name."
msgstr ""

#: 9f05a77eef2445268d540b4f9653f322
#: discord.ext.commands.help.HelpCommand.filter_commands:20 of
msgid "A list of commands that passed the filter."
msgstr ""

#: 0722f1eb0d854e748d5363eedae8ec27
#: discord.ext.commands.help.HelpCommand.filter_commands:21 of
msgid "List[:class:`Command`]"
msgstr ""

#: 1d7ab689f36d49ea84a4187da695f2cd
#: discord.ext.commands.help.HelpCommand.get_max_size:1 of
msgid "Returns the largest name length of the specified command list."
msgstr ""

#: b0df17a168244fc881783a67405bc86d
#: discord.ext.commands.help.HelpCommand.get_max_size:4 of
msgid "A sequence of commands to check for the largest size."
msgstr ""

#: 638a8223116c44afbc70a3490dc30977
#: discord.ext.commands.help.HelpCommand.get_max_size:7 of
msgid "The maximum width of the commands."
msgstr ""

#: 36db3ba452e247c3ad141758bb50a822 discord.ext.commands.cooldowns.Cooldown:7
#: discord.ext.commands.cooldowns.Cooldown.get_tokens:9
#: discord.ext.commands.errors.MaxConcurrencyReached:9
#: discord.ext.commands.flags.Flag:42
#: discord.ext.commands.help.DefaultHelpCommand:12
#: discord.ext.commands.help.DefaultHelpCommand:42
#: discord.ext.commands.help.HelpCommand.get_max_size:8
#: discord.ext.commands.help.Paginator:25 of
msgid ":class:`int`"
msgstr ""

#: 11d5736edd904be0909712cba6262a08
#: discord.ext.commands.help.DefaultHelpCommand.get_destination:1
#: discord.ext.commands.help.HelpCommand.get_destination:1
#: discord.ext.commands.help.MinimalHelpCommand.get_destination:1 of
msgid ""
"Returns the :class:`~discord.abc.Messageable` where the help command will"
" be output."
msgstr ""

#: 0da023124b764228803413e8e928ba2e 0fff7255071443deb952fb069385e343
#: 221263475094489f990e402ae86805f6 4c8415699f38454caa3f28ff7645e137
#: discord.ext.commands.help.DefaultHelpCommand.get_destination:3
#: discord.ext.commands.help.HelpCommand.get_destination:3
#: discord.ext.commands.help.HelpCommand.send_bot_help:11
#: discord.ext.commands.help.HelpCommand.send_cog_help:11
#: discord.ext.commands.help.HelpCommand.send_command_help:10
#: discord.ext.commands.help.HelpCommand.send_error_message:6
#: discord.ext.commands.help.HelpCommand.send_group_help:11
#: discord.ext.commands.help.MinimalHelpCommand.get_destination:3
#: f8c115ff7057440482dceb4d05d3c394 of
msgid "You can override this method to customise the behaviour."
msgstr ""

#: 7463ee9371c746469ce380c3c6a9f69b
#: discord.ext.commands.help.DefaultHelpCommand.get_destination:5
#: discord.ext.commands.help.HelpCommand.get_destination:5
#: discord.ext.commands.help.MinimalHelpCommand.get_destination:5 of
msgid "By default, this returns the context's channel."
msgstr ""

#: d4a4dc4660df41218b1ef139ba681fc6
#: discord.ext.commands.help.DefaultHelpCommand.get_destination:7
#: discord.ext.commands.help.HelpCommand.get_destination:7
#: discord.ext.commands.help.MinimalHelpCommand.get_destination:7 of
msgid "The destination where the help command will be output."
msgstr ""

#: 22ac12821be84e64abe4208c66e428ca
#: discord.ext.commands.help.DefaultHelpCommand.get_destination:8
#: discord.ext.commands.help.HelpCommand.get_destination:8
#: discord.ext.commands.help.MinimalHelpCommand.get_destination:8 of
msgid ":class:`.abc.Messageable`"
msgstr ""

#: discord.ext.commands.help.HelpCommand.send_error_message:3
#: ecf08844becf48199a5aba387a75a395 of
msgid ""
"Handles the implementation when an error happens in the help command. For"
" example, the result of :meth:`command_not_found` will be passed here."
msgstr ""

#: 91bb9645a42e40298a5fa110a0f0f035
#: discord.ext.commands.help.HelpCommand.send_error_message:8 of
msgid ""
"By default, this sends the error message to the destination specified by "
":meth:`get_destination`."
msgstr ""

#: 145f3f00a2854c308de39ac9f2935d3d 1a16d349e6b147ea8072bbe46e99443b
#: 44d8a4471f8d46199d03cf08d9d852fb bb2b8cf7f8da4ab498331b3d6bfb0f42
#: discord.ext.commands.help.HelpCommand.send_bot_help:15
#: discord.ext.commands.help.HelpCommand.send_cog_help:15
#: discord.ext.commands.help.HelpCommand.send_command_help:14
#: discord.ext.commands.help.HelpCommand.send_error_message:13
#: discord.ext.commands.help.HelpCommand.send_group_help:15 of
msgid "You can access the invocation context with :attr:`HelpCommand.context`."
msgstr ""

#: discord.ext.commands.help.HelpCommand.send_error_message:16
#: f7931984f74a4af5a0f13a3131100e8f of
msgid ""
"The error message to display to the user. Note that this has had mentions"
" removed to prevent abuse."
msgstr ""

#: 62a23463e67743778ff5b5ffda0e1cb5
#: discord.ext.commands.help.HelpCommand.on_help_command_error:3 of
msgid ""
"The help command's error handler, as specified by "
":ref:`ext_commands_error_handler`."
msgstr ""

#: 2b2100cd275e4909a0cc009c6a3d63d9
#: discord.ext.commands.help.HelpCommand.on_help_command_error:5 of
msgid ""
"Useful to override if you need some specific behaviour when the error "
"handler is called."
msgstr ""

#: discord.ext.commands.help.HelpCommand.on_help_command_error:8
#: f9b68e3eab0e4186b0e12bab0d4c59e5 of
msgid ""
"By default, this method does nothing and just propagates to the default "
"error handlers."
msgstr ""

#: b1bcd236de8d485e97c9dcf3a2b6c09c
#: discord.ext.commands.help.HelpCommand.send_bot_help:3 of
msgid ""
"Handles the implementation of the bot command page in the help command. "
"This function is called when the help command is called with no "
"arguments."
msgstr ""

#: 2d550440e5cf4edc8ced1cacaeea627b 8733bb9051b04e2f91d902a402af6929
#: 92cd46fd01884b549196ce7d6f3affaf d2912db2232849caa145cdcedd335057
#: discord.ext.commands.help.HelpCommand.send_bot_help:6
#: discord.ext.commands.help.HelpCommand.send_cog_help:6
#: discord.ext.commands.help.HelpCommand.send_command_help:5
#: discord.ext.commands.help.HelpCommand.send_group_help:6 of
msgid ""
"It should be noted that this method does not return anything -- rather "
"the actual message sending should be done inside this method. Well-"
"behaved subclasses should use :meth:`get_destination` to know where to "
"send, as this is a customisation point for other users."
msgstr ""

#: b39a59a79b09468a9c8275ebfce85a16
#: discord.ext.commands.help.HelpCommand.send_bot_help:17 of
msgid ""
"Also, the commands in the mapping are not filtered. To do the filtering "
"you will have to call :meth:`filter_commands` yourself."
msgstr ""

#: 02dcb1f0bd02493bbe5ae9e872616207
#: discord.ext.commands.help.HelpCommand.send_bot_help:21 of
msgid ""
"A mapping of cogs to commands that have been requested by the user for "
"help. The key of the mapping is the :class:`~.commands.Cog` that the "
"command belongs to, or ``None`` if there isn't one, and the value is a "
"list of commands that belongs to that cog."
msgstr ""

#: a828d648b1ea4065b69f360aaf334a2e
#: discord.ext.commands.help.HelpCommand.send_cog_help:3 of
msgid ""
"Handles the implementation of the cog page in the help command. This "
"function is called when the help command is called with a cog as the "
"argument."
msgstr ""

#: 0fca5ad2726a4da3aa2b4cd57bc85212
#: discord.ext.commands.help.HelpCommand.send_cog_help:17 of
msgid ""
"To get the commands that belong to this cog see :meth:`Cog.get_commands`."
" The commands returned not filtered. To do the filtering you will have to"
" call :meth:`filter_commands` yourself."
msgstr ""

#: 98ac7e67a5fa4e958a227fe3594c0796
#: discord.ext.commands.help.HelpCommand.send_cog_help:22 of
msgid "The cog that was requested for help."
msgstr ""

#: 27ac13aaf6a54dcd9614dba2b03d98c9
#: discord.ext.commands.help.HelpCommand.send_group_help:3 of
msgid ""
"Handles the implementation of the group page in the help command. This "
"function is called when the help command is called with a group as the "
"argument."
msgstr ""

#: 8bc4bcfb9f3141838dbe400cd555c11c
#: discord.ext.commands.help.HelpCommand.send_group_help:17 of
msgid ""
"To get the commands that belong to this group without aliases see "
":attr:`Group.commands`. The commands returned not filtered. To do the "
"filtering you will have to call :meth:`filter_commands` yourself."
msgstr ""

#: 481ed9cbfcfe4d5c945aedb7f564be2e
#: discord.ext.commands.help.HelpCommand.send_group_help:22 of
msgid "The group that was requested for help."
msgstr ""

#: 55e69ff04387467396ff5f080c4b729c
#: discord.ext.commands.help.HelpCommand.send_command_help:3 of
msgid "Handles the implementation of the single command page in the help command."
msgstr ""

#: 15230ebc88374c4696b38f30fd9070a2
#: discord.ext.commands.help.HelpCommand.send_command_help:16 of
msgid "Showing Help"
msgstr ""

#: discord.ext.commands.help.HelpCommand.send_command_help:19
#: e5bdf0c519cc42b5ba11a16bd65b33aa of
msgid ""
"There are certain attributes and methods that are helpful for a help "
"command to show such as the following:"
msgstr ""

#: 3491b2a4d9d74002b8ead57973164b4f
#: discord.ext.commands.help.HelpCommand.send_command_help:22 of
msgid ":attr:`Command.help`"
msgstr ""

#: 0d6cc8451c074f339f08d2ea9ff6f289
#: discord.ext.commands.help.HelpCommand.send_command_help:23 of
msgid ":attr:`Command.brief`"
msgstr ""

#: discord.ext.commands.help.HelpCommand.send_command_help:24
#: fd4e0a0770cb4dd583602d3067e81b24 of
msgid ":attr:`Command.short_doc`"
msgstr ""

#: 76ce4a6e88d444ecbad32de75bc5fe22
#: discord.ext.commands.help.HelpCommand.send_command_help:25 of
msgid ":attr:`Command.description`"
msgstr ""

#: 20889f14e1744f53bf91b3810fd8bf36
#: discord.ext.commands.help.HelpCommand.send_command_help:26 of
msgid ":meth:`get_command_signature`"
msgstr ""

#: 3049f2cecc1b439da3d78baacd2005e2
#: discord.ext.commands.help.HelpCommand.send_command_help:28 of
msgid ""
"There are more than just these attributes but feel free to play around "
"with these to help you get started to get the output that you want."
msgstr ""

#: 0a14d7e642ed4889b30688b6c0048821
#: discord.ext.commands.help.HelpCommand.send_command_help:32 of
msgid "The command that was requested for help."
msgstr ""

#: 404a74fe43794d0fbed34f5c3d1ea920
#: discord.ext.commands.help.HelpCommand.prepare_help_command:3 of
msgid ""
"A low level method that can be used to prepare the help command before it"
" does anything. For example, if you need to prepare some state in your "
"subclass before the command does its processing then this would be the "
"place to do it."
msgstr ""

#: 85592828042a4467a6777ebda074bc0c
#: discord.ext.commands.help.HelpCommand.prepare_help_command:8
#: discord.ext.commands.help.MinimalHelpCommand.get_ending_note:3 of
msgid "The default implementation does nothing."
msgstr ""

#: discord.ext.commands.help.HelpCommand.prepare_help_command:12
#: ea87701788ad4a47b061de81d0fe4850 of
msgid ""
"This is called *inside* the help command callback body. So all the usual "
"rules that happen inside apply here as well."
msgstr ""

#: 210b8f6390bb4dc69b4eadd6b4ddfc9b
#: discord.ext.commands.help.HelpCommand.prepare_help_command:19 of
msgid "The argument passed to the help command."
msgstr ""

#: 11a8f56569d6415181816fa4eefa4fb6
#: discord.ext.commands.help.HelpCommand.command_callback:3 of
msgid "The actual implementation of the help command."
msgstr ""

#: b6cdc3d230bc4daca9399775d44f4ce2
#: discord.ext.commands.help.HelpCommand.command_callback:5 of
msgid ""
"It is not recommended to override this method and instead change the "
"behaviour through the methods that actually get dispatched."
msgstr ""

#: 3f473bec01bb44ac91e8ff68715f11e9
#: discord.ext.commands.help.HelpCommand.command_callback:8 of
msgid ":meth:`send_bot_help`"
msgstr ""

#: 80edd5df25254ff99b0ad02aa9274411
#: discord.ext.commands.help.HelpCommand.command_callback:9 of
msgid ":meth:`send_cog_help`"
msgstr ""

#: discord.ext.commands.help.HelpCommand.command_callback:10
#: eb6bdd4d05734e8991acd54e5104d075 of
msgid ":meth:`send_group_help`"
msgstr ""

#: 6dee8753a3564294b028a06230aeb65f
#: discord.ext.commands.help.HelpCommand.command_callback:11 of
msgid ":meth:`send_command_help`"
msgstr ""

#: 3c5f3d8e5cbe4e5aaa7c3f131a3045de
#: discord.ext.commands.help.HelpCommand.command_callback:12 of
msgid ":meth:`get_destination`"
msgstr ""

#: 39474771f7684d45b5373b17b69f2f6e
#: discord.ext.commands.help.HelpCommand.command_callback:13 of
msgid ":meth:`command_not_found`"
msgstr ""

#: discord.ext.commands.help.HelpCommand.command_callback:14
#: f3c5d3d6839c4af5ba7d4184930ea80f of
msgid ":meth:`subcommand_not_found`"
msgstr ""

#: d5005de494d94770b7117858517d4bad
#: discord.ext.commands.help.HelpCommand.command_callback:15 of
msgid ":meth:`send_error_message`"
msgstr ""

#: 83cbfb0f715e49a2a63f2b66d6fc98ff
#: discord.ext.commands.help.HelpCommand.command_callback:16 of
msgid ":meth:`on_help_command_error`"
msgstr ""

#: 05293fc84d7d40f29448138536a0d84d
#: discord.ext.commands.help.HelpCommand.command_callback:17 of
msgid ":meth:`prepare_help_command`"
msgstr ""

#: ../../ext/commands/api.rst:216 280052a3bfce4f8a8146f4f398509707
msgid "DefaultHelpCommand"
msgstr ""

#: 9de62005f62e44ff9931e1d9a2f0d6a2
#: discord.ext.commands.help.DefaultHelpCommand:1 of
msgid "The implementation of the default help command."
msgstr ""

#: 98cc93d14ebe483c8ea65f00dd5b35bb
#: discord.ext.commands.help.DefaultHelpCommand:3
#: discord.ext.commands.help.MinimalHelpCommand:3 of
msgid "This inherits from :class:`HelpCommand`."
msgstr ""

#: 2d8f18b9ac2a4f7ebcfbc98885b666e5
#: discord.ext.commands.help.DefaultHelpCommand:5 of
msgid "It extends it with the following attributes."
msgstr ""

#: df8735e1f5c348a88ce9829e4c3bd4da
#: discord.ext.commands.help.DefaultHelpCommand:9 of
msgid "The maximum number of characters that fit in a line. Defaults to 80."
msgstr ""

#: ad75381379ab48acb3057dc68b6c4a37
#: discord.ext.commands.help.DefaultHelpCommand:16
#: discord.ext.commands.help.MinimalHelpCommand:7 of
msgid ""
"Whether to sort the commands in the output alphabetically. Defaults to "
"``True``."
msgstr ""

#: discord.ext.commands.help.DefaultHelpCommand:22
#: discord.ext.commands.help.MinimalHelpCommand:27
#: fcb81f11c0f146b49699484d0ce0f808 of
msgid ""
"A tribool that indicates if the help command should DM the user instead "
"of sending it to the channel it received it from. If the boolean is set "
"to ``True``, then all help output is DM'd. If ``False``, none of the help"
" output is DM'd. If ``None``, then the bot will only DM when the help "
"message becomes too long (dictated by more than :attr:`dm_help_threshold`"
" characters). Defaults to ``False``."
msgstr ""

#: bdb32d5c391a4020a14aa9e04df4dfb3
#: discord.ext.commands.help.DefaultHelpCommand:33
#: discord.ext.commands.help.MinimalHelpCommand:38 of
msgid ""
"The number of characters the paginator must accumulate before getting "
"DM'd to the user if :attr:`dm_help` is set to ``None``. Defaults to 1000."
msgstr ""

#: 3ed75e87187148e5b3a2193a292ef53b
#: discord.ext.commands.help.DefaultHelpCommand:36
#: discord.ext.commands.help.MinimalHelpCommand:41 of
msgid "Optional[:class:`int`]"
msgstr ""

#: ca0e9178e75445c5bc4e6128b058880c
#: discord.ext.commands.help.DefaultHelpCommand:40 of
msgid "How much to indent the commands from a heading. Defaults to ``2``."
msgstr ""

#: 0ccd0499465045b780f7a265704d5d53
#: discord.ext.commands.help.DefaultHelpCommand:46 of
msgid ""
"The command list's heading string used when the help command is invoked "
"with a category name. Useful for i18n. Defaults to ``\"Commands:\"``"
msgstr ""

#: 506d95ebb9664f17a10381534561613a
#: discord.ext.commands.help.DefaultHelpCommand:53
#: discord.ext.commands.help.MinimalHelpCommand:45 of
msgid ""
"The string used when there is a command which does not belong to any "
"category(cog). Useful for i18n. Defaults to ``\"No Category\"``"
msgstr ""

#: 1ad02dd72b1b4b84a48ebbb3b20dcf54
#: discord.ext.commands.help.DefaultHelpCommand:60
#: discord.ext.commands.help.MinimalHelpCommand:52 of
msgid "The paginator used to paginate the help command output."
msgstr ""

#: discord.ext.commands.help.DefaultHelpCommand:62
#: discord.ext.commands.help.MinimalHelpCommand:54
#: eb7ca19c2ce740f49eafb5aa2225772f of
msgid ":class:`Paginator`"
msgstr ""

#: 94814d7b6a2f4e74a8ef24ccfb43fc0b
#: discord.ext.commands.help.DefaultHelpCommand.shorten_text:1 of
msgid "Shortens text to fit into the :attr:`width`."
msgstr ""

#: discord.ext.commands.converter.clean_content.convert:19
#: discord.ext.commands.help.DefaultHelpCommand.get_ending_note:4
#: discord.ext.commands.help.DefaultHelpCommand.shorten_text:5
#: ea5d814f698e427c927fe26e57311142 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`str\\``"
msgstr ""

#: d2d8ce0a6f2947739d49d1a3d2b80967
#: discord.ext.commands.help.DefaultHelpCommand.get_ending_note:1 of
msgid ""
"Returns help command's ending note. This is mainly useful to override for"
" i18n purposes."
msgstr ""

#: 561ce69694644ee584ffcd113fb09369
#: discord.ext.commands.help.DefaultHelpCommand.add_indented_commands:1 of
msgid "Indents a list of commands after the specified heading."
msgstr ""

#: 02d98ac7859f4ade9548622bb854fc31
#: discord.ext.commands.help.DefaultHelpCommand.add_indented_commands:3 of
msgid "The formatting is added to the :attr:`paginator`."
msgstr ""

#: d1c297d5dfe44c07ab17475943a517cf
#: discord.ext.commands.help.DefaultHelpCommand.add_indented_commands:5 of
msgid ""
"The default implementation is the command name indented by :attr:`indent`"
" spaces, padded to ``max_size`` followed by the command's "
":attr:`Command.short_doc` and then shortened to fit into the "
":attr:`width`."
msgstr ""

#: dacbb4c5af9145caac90d727d81893c0
#: discord.ext.commands.help.DefaultHelpCommand.add_indented_commands:11 of
msgid "A list of commands to indent for output."
msgstr ""

#: 9a760df2465e482a9ccab7abd60204a4
#: discord.ext.commands.help.DefaultHelpCommand.add_indented_commands:14 of
msgid ""
"The heading to add to the output. This is only added if the list of "
"commands is greater than 0."
msgstr ""

#: cd7322b48f414511b8f0e5a791f99e01
#: discord.ext.commands.help.DefaultHelpCommand.add_indented_commands:18 of
msgid ""
"The max size to use for the gap between indents. If unspecified, calls "
":meth:`~HelpCommand.get_max_size` on the commands parameter."
msgstr ""

#: 604e96dc969d4a16ab5e5513a0590f96
#: discord.ext.commands.help.DefaultHelpCommand.send_pages:1
#: discord.ext.commands.help.MinimalHelpCommand.send_pages:1 of
msgid ""
"A helper utility to send the page output from :attr:`paginator` to the "
"destination."
msgstr ""

#: 0c64282ae9a7447db39ab64e33fb73aa
#: discord.ext.commands.help.DefaultHelpCommand.add_command_formatting:1 of
msgid ""
"A utility function to format the non-indented block of commands and "
"groups."
msgstr ""

#: 56429d0375c84befb1b01caa55354f47
#: discord.ext.commands.help.DefaultHelpCommand.add_command_formatting:4
#: discord.ext.commands.help.MinimalHelpCommand.add_command_formatting:4 of
msgid "The command to format."
msgstr ""

#: ../../ext/commands/api.rst:225 b08b39dd303f4219b5448e9c41960424
msgid "MinimalHelpCommand"
msgstr ""

#: 782cc545def54629a84441b98b842142
#: discord.ext.commands.help.MinimalHelpCommand:1 of
msgid "An implementation of a help command with minimal output."
msgstr ""

#: 0d0161510712488bba1af85693fb13c1
#: discord.ext.commands.help.MinimalHelpCommand:13 of
msgid ""
"The command list's heading string used when the help command is invoked "
"with a category name. Useful for i18n. Defaults to ``\"Commands\"``"
msgstr ""

#: 2a3d9de0455d454db86f48ea4fce0bee
#: discord.ext.commands.help.MinimalHelpCommand:20 of
msgid ""
"The alias list's heading string used to list the aliases of the command. "
"Useful for i18n. Defaults to ``\"Aliases:\"``."
msgstr ""

#: bf9bfcfccb6d4729ab5e79ca296f4be7
#: discord.ext.commands.help.MinimalHelpCommand.get_opening_note:1 of
msgid ""
"Returns help command's opening note. This is mainly useful to override "
"for i18n purposes."
msgstr ""

#: 89825549a52b49f0b61ce22ede84a59b
#: discord.ext.commands.help.MinimalHelpCommand.get_opening_note:3 of
msgid "The default implementation returns ::"
msgstr ""

#: 1b33ab9eb24c4202a2d0f6d49d35944e
#: discord.ext.commands.help.MinimalHelpCommand.get_opening_note:8 of
msgid "The help command opening note."
msgstr ""

#: c7be250c990b40f894b42471edbb3f04
#: discord.ext.commands.help.MinimalHelpCommand.get_ending_note:1 of
msgid ""
"Return the help command's ending note. This is mainly useful to override "
"for i18n purposes."
msgstr ""

#: 73dd495170d14ddb8230ad7b4b9fde74
#: discord.ext.commands.help.MinimalHelpCommand.get_ending_note:5 of
msgid "The help command ending note."
msgstr ""

#: dc6008496d7f47f98cba8124a45e9fd8
#: discord.ext.commands.help.MinimalHelpCommand.add_bot_commands_formatting:1
#: of
msgid "Adds the minified bot heading with commands to the output."
msgstr ""

#: 7b8dc415474a458294ed699b814d8908
#: discord.ext.commands.help.MinimalHelpCommand.add_aliases_formatting:3
#: discord.ext.commands.help.MinimalHelpCommand.add_bot_commands_formatting:3
#: discord.ext.commands.help.MinimalHelpCommand.add_subcommand_formatting:3 of
msgid "The formatting should be added to the :attr:`paginator`."
msgstr ""

#: 173c5382465042adb49b12d09c20a4e9
#: discord.ext.commands.help.MinimalHelpCommand.add_bot_commands_formatting:5
#: of
msgid ""
"The default implementation is a bold underline heading followed by "
"commands separated by an EN SPACE (U+2002) in the next line."
msgstr ""

#: 6bbc75e158a44e9ab07b181c71107a32
#: discord.ext.commands.help.MinimalHelpCommand.add_bot_commands_formatting:9
#: of
msgid "A list of commands that belong to the heading."
msgstr ""

#: 812ae0735d0048639c1084356979556a
#: discord.ext.commands.help.MinimalHelpCommand.add_bot_commands_formatting:12
#: of
msgid "The heading to add to the line."
msgstr ""

#: 432e24a0d5014f5f9fd67c74acc6e33c
#: discord.ext.commands.help.MinimalHelpCommand.add_subcommand_formatting:1 of
msgid "Adds formatting information on a subcommand."
msgstr ""

#: 8680c6a80a314ee4867833116e05da47
#: discord.ext.commands.help.MinimalHelpCommand.add_subcommand_formatting:5 of
msgid ""
"The default implementation is the prefix and the "
":attr:`Command.qualified_name` optionally followed by an En dash and the "
"command's :attr:`Command.short_doc`."
msgstr ""

#: 36593ac4e6934eb69a5ebb891697a668
#: discord.ext.commands.help.MinimalHelpCommand.add_subcommand_formatting:9 of
msgid "The command to show information of."
msgstr ""

#: ab5863e544b64f7b87d3f984d5c394d4
#: discord.ext.commands.help.MinimalHelpCommand.add_aliases_formatting:1 of
msgid "Adds the formatting information on a command's aliases."
msgstr ""

#: db40888f62d34d5aaba4d8576d27cbf4
#: discord.ext.commands.help.MinimalHelpCommand.add_aliases_formatting:5 of
msgid ""
"The default implementation is the :attr:`aliases_heading` bolded followed"
" by a comma separated list of aliases."
msgstr ""

#: 57236ac0df9640058e87d6c99e2af3e6
#: discord.ext.commands.help.MinimalHelpCommand.add_aliases_formatting:8 of
msgid "This is not called if there are no aliases to format."
msgstr ""

#: 9c56559714724ad8804be05c5188648a
#: discord.ext.commands.help.MinimalHelpCommand.add_aliases_formatting:11 of
msgid "A list of aliases to format."
msgstr ""

#: discord.ext.commands.help.MinimalHelpCommand.add_command_formatting:1
#: ef842cc9007e4bf4967e22877b29c9b3 of
msgid "A utility function to format commands and groups."
msgstr ""

#: ../../ext/commands/api.rst:234 e087918d096d4026ae2a63986aa52427
msgid "Paginator"
msgstr ""

#: discord.ext.commands.help.Paginator:1 f4b68527e826465aa64533fd9b28a338 of
msgid "A class that aids in paginating code blocks for Discord messages."
msgstr ""

#: 198c467dbad64882b4699ce2063dc523 discord.ext.commands.help.Paginator:7 of
msgid "Returns the total number of characters in the paginator."
msgstr ""

#: 528352da5fe14198a01e6fef61626b57 discord.ext.commands.help.Paginator:11 of
msgid "The prefix inserted to every page. e.g. three backticks."
msgstr ""

#: 457c0e8dfeaa4f79955f96a9ebe8f605 discord.ext.commands.help.Paginator:17 of
msgid "The suffix appended at the end of every page. e.g. three backticks."
msgstr ""

#: discord.ext.commands.help.Paginator:23 ef009d5cd2d84fce81fd6b4f1782cb73 of
msgid "The maximum amount of codepoints allowed in a page."
msgstr ""

#: 3bd1178464ce48e4bd3fd97e62c20268 discord.ext.commands.help.Paginator:31 of
msgid "The character string inserted between lines. e.g. a newline character."
msgstr ""

#: discord.ext.commands.help.Paginator.clear:1 f2fe538d81054b20bc5330048409a978
#: of
msgid "Clears the paginator to have no pages."
msgstr ""

#: a889ff4c34e14afb871b9789e307a078
#: discord.ext.commands.help.Paginator.add_line:1 of
msgid "Adds a line to the current page."
msgstr ""

#: 46f22c4041284ea785c2e00a9d318648
#: discord.ext.commands.help.Paginator.add_line:3 of
msgid "If the line exceeds the :attr:`max_size` then an exception is raised."
msgstr ""

#: discord.ext.commands.help.Paginator.add_line:7
#: f0def295b6fd46abb95f378c74fd8d1b of
msgid "The line to add."
msgstr ""

#: 5c5acb52ec8841aa917643fcee21679e
#: discord.ext.commands.help.Paginator.add_line:10 of
msgid "Indicates if another empty line should be added."
msgstr ""

#: 9b7fe0db24cc4c3ea3a7265e7dbe6695
#: discord.ext.commands.help.Paginator.add_line:13 of
msgid "The line was too big for the current :attr:`max_size`."
msgstr ""

#: c7e11f385ddf48978184752e980418d2
#: discord.ext.commands.help.Paginator.close_page:1 of
msgid "Prematurely terminate a page."
msgstr ""

#: a117c5b0ea474b4391c3709d34b040dc discord.ext.commands.Paginator.pages:1 of
msgid "Returns the rendered list of pages."
msgstr ""

#: ../../ext/commands/api.rst:242 32059f72f8f54d26835e62adf60c9b0d
msgid "Enums"
msgstr ""

#: ../../ext/commands/api.rst:247 e4a49416872d4ff8938b8ee02ce3e083
msgid "Specifies a type of bucket for, e.g. a cooldown."
msgstr ""

#: ../../ext/commands/api.rst:251 ede6efcacb2449b4bae045591438d616
msgid "The default bucket operates on a global basis."
msgstr ""

#: ../../ext/commands/api.rst:254 b2dfdaa7dd0d4c73af1575cec0eb30a2
msgid "The user bucket operates on a per-user basis."
msgstr ""

#: ../../ext/commands/api.rst:257 5b9ba9dc86144fd78ff0344a4e94c378
msgid "The guild bucket operates on a per-guild basis."
msgstr ""

#: ../../ext/commands/api.rst:260 50a3c2d61733481f855ca57326ac580d
msgid "The channel bucket operates on a per-channel basis."
msgstr ""

#: ../../ext/commands/api.rst:263 e2627dc43a1646aaaaea2f01d1ee3f45
msgid "The member bucket operates on a per-member basis."
msgstr ""

#: ../../ext/commands/api.rst:266 42fba9ff10cd483cb92dc22f6fa9eb97
msgid "The category bucket operates on a per-category basis."
msgstr ""

#: ../../ext/commands/api.rst:269 2d885b860c264455889f5e4443d092f5
msgid "The role bucket operates on a per-role basis."
msgstr ""

#: ../../ext/commands/api.rst:277 3697effeb84b450380a6217332bf7ed3
msgid "Checks"
msgstr ""

#: 8f81b5584b3b4d4fa4663b09d276fa5a discord.ext.commands.core.check:1 of
msgid ""
"A decorator that adds a check to the :class:`.Command` or its subclasses."
" These checks could be accessed via :attr:`.Command.checks`."
msgstr ""

#: 3c2d00f8a23041ec9335281080bf4edc discord.ext.commands.core.check:4 of
msgid ""
"These checks should be predicates that take in a single parameter taking "
"a :class:`.Context`. If the check returns a ``False``\\-like value then "
"during invocation a :exc:`.CheckFailure` exception is raised and sent to "
"the :func:`.on_command_error` event."
msgstr ""

#: 4f5494b1e3554410800f085bfbffbf9c discord.ext.commands.core.check:9 of
msgid ""
"If an exception should be thrown in the predicate then it should be a "
"subclass of :exc:`.CommandError`. Any exception not subclassed from it "
"will be propagated while those subclassed will be sent to "
":func:`.on_command_error`."
msgstr ""

#: 3d1a87c8862542469116e77863535058 discord.ext.commands.core.check:14 of
msgid ""
"A special attribute named ``predicate`` is bound to the value returned by"
" this decorator to retrieve the predicate passed to the decorator. This "
"allows the following introspection and chaining to be done:"
msgstr ""

#: 9e93c35970eb43ecbdeb837dfcff73da discord.ext.commands.core.check:30 of
msgid ""
"The function returned by ``predicate`` is **always** a coroutine, even if"
" the original function was not a coroutine."
msgstr ""

#: 5c3b4dcd8381445fabe4944d88c6c1e8 discord.ext.commands.core.check:33 of
msgid "The ``predicate`` attribute was added."
msgstr ""

#: 0bcd317d5e9f4e9e91ca1b060403a727 discord.ext.commands.core.check:38 of
msgid "Creating a basic check to see if the command invoker is you."
msgstr ""

#: dd48570384ea4a05aac75e08169fd0f8 discord.ext.commands.core.check:50 of
msgid "Transforming common checks into its own decorator:"
msgstr ""

#: 02a2a5184ec947eaaf5460150b287c2c discord.ext.commands.core.check:65 of
msgid "The predicate to check if the command should be invoked."
msgstr ""

#: 641aba9d9e1242ee81b39f49ea575ac7 9624b70cfbee4ca3af484bcf68e4e8ab
#: d1219c96be1d44378e6cc2e7e6537aaa
#: discord.ext.commands.core.bot_has_any_role:15
#: discord.ext.commands.core.bot_has_guild_permissions:8
#: discord.ext.commands.core.bot_has_permissions:9
#: discord.ext.commands.core.bot_has_role:15 discord.ext.commands.core.check:68
#: discord.ext.commands.core.check_any:21 discord.ext.commands.core.cooldown:27
#: discord.ext.commands.core.dynamic_cooldown:29
#: discord.ext.commands.core.guild_only:9
#: discord.ext.commands.core.has_any_role:19
#: discord.ext.commands.core.has_guild_permissions:11
#: discord.ext.commands.core.has_permissions:18
#: discord.ext.commands.core.has_role:25 discord.ext.commands.core.is_owner:10
#: discord.ext.commands.core.max_concurrency:24 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`T\\`\\`\\)\\]\\, \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`T\\`\\`\\)\\]`"
msgstr ""

#: 649033939727472cbd4f8a6f09454810 discord.ext.commands.core.check_any:1 of
msgid ""
"A :func:`check` that is added that checks if any of the checks passed "
"will pass, i.e. using logical OR."
msgstr ""

#: 5e230c760ea048268aa0056ae3f03f4e discord.ext.commands.core.check_any:4 of
msgid ""
"If all checks fail then :exc:`.CheckAnyFailure` is raised to signal the "
"failure. It inherits from :exc:`.CheckFailure`."
msgstr ""

#: discord.ext.commands.core.check_any:9 e990ee703a2549a897471de430a1da05 of
msgid "The ``predicate`` attribute for this function **is** a coroutine."
msgstr ""

#: 4a7b81eca1c3484fba8cf44b85ba6fdc discord.ext.commands.core.check_any:14 of
msgid ""
"An argument list of checks that have been decorated with the "
":func:`check` decorator."
msgstr ""

#: 0a3c24e60414491ba64d3853fc673029 discord.ext.commands.core.check_any:18 of
msgid ""
"A check passed has not been decorated with the :func:`check`     "
"decorator."
msgstr ""

#: discord.ext.commands.core.check_any:23 e375d514f6dc4418ab45510e055e9919 of
msgid "Creating a basic check to see if it's the bot owner or the server owner:"
msgstr ""

#: 81ea5857330741739c83ed3dc41dde4e discord.ext.commands.core.has_role:1 of
msgid ""
"A :func:`.check` that is added that checks if the member invoking the "
"command has the role specified via the name or ID specified."
msgstr ""

#: ca512848d2bb4648a0bdb9addbf84a42 discord.ext.commands.core.has_role:4 of
msgid ""
"If a string is specified, you must give the exact name of the role, "
"including caps and spelling."
msgstr ""

#: 393358caeb1f4b51b551ddb9b959abef discord.ext.commands.core.has_role:7 of
msgid ""
"If an integer is specified, you must give the exact snowflake ID of the "
"role."
msgstr ""

#: 78c59b4d3b6349ba846bc6eb0826344b discord.ext.commands.core.has_role:9 of
msgid ""
"If the message is invoked in a private message context then the check "
"will return ``False``."
msgstr ""

#: 8452153ef43340fba093ab84f4df5a56 discord.ext.commands.core.has_role:12 of
msgid ""
"This check raises one of two special exceptions, :exc:`.MissingRole` if "
"the user is missing a role, or :exc:`.NoPrivateMessage` if it is used in "
"a private message. Both inherit from :exc:`.CheckFailure`."
msgstr ""

#: b03d3b707fb44779acdfb64a04c67537 discord.ext.commands.core.has_role:18 of
msgid ""
"Raise :exc:`.MissingRole` or :exc:`.NoPrivateMessage` instead of generic "
":exc:`.CheckFailure`"
msgstr ""

#: 5cca5ffe93f440dd85df9dc52292045e discord.ext.commands.core.has_role:22 of
msgid "The name or ID of the role to check."
msgstr ""

#: 72a7042c5b714f9a82015a2f50305e10 discord.ext.commands.core.has_permissions:1
#: of
msgid ""
"A :func:`.check` that is added that checks if the member has all of the "
"permissions necessary."
msgstr ""

#: b36c2e278059410ebb228e8102743974 discord.ext.commands.core.has_permissions:4
#: of
msgid ""
"Note that this check operates on the current channel permissions, not the"
" guild wide permissions."
msgstr ""

#: bf44a1aa790e4c76b7585d4744c49ade discord.ext.commands.core.has_permissions:7
#: of
msgid ""
"The permissions passed in must be exactly like the properties shown under"
" :class:`.discord.Permissions`."
msgstr ""

#: b65895b130444cd3b829c68a0599c012
#: discord.ext.commands.core.has_permissions:10 of
msgid ""
"This check raises a special exception, :exc:`.MissingPermissions` that is"
" inherited from :exc:`.CheckFailure`."
msgstr ""

#: 46edcac0a3e6496ea9e80f35ca24f270
#: discord.ext.commands.core.has_permissions:13 of
msgid "If the command is executed within a DM, it returns ``True``."
msgstr ""

#: a4c609c072e54e3f84a6a00d7843380a
#: discord.ext.commands.core.has_permissions:16 of
msgid "An argument list of permissions to check for."
msgstr ""

#: 93b6336c75374f4d84a059524c59dff7
#: discord.ext.commands.core.has_guild_permissions:1 of
msgid ""
"Similar to :func:`.has_permissions`, but operates on guild wide "
"permissions instead of the current channel permissions."
msgstr ""

#: 6b5b1ee1f906410abcadc2b79fc8dad4
#: discord.ext.commands.core.has_guild_permissions:4 of
msgid ""
"If this check is called in a DM context, it will raise an exception, "
":exc:`.NoPrivateMessage`."
msgstr ""

#: 7c5a4039354e4b71b6f01196a16a2740 discord.ext.commands.core.has_any_role:1 of
msgid ""
"A :func:`.check` that is added that checks if the member invoking the "
"command has **any** of the roles specified. This means that if they have "
"one out of the three roles specified, then this check will return `True`."
msgstr ""

#: 6fc2639d3bfe40a3983045e6959bd1a5 discord.ext.commands.core.has_any_role:5 of
msgid "Similar to :func:`.has_role`\\, the names or IDs passed in must be exact."
msgstr ""

#: 5da254078bdc405689d63c4229f9bf8e discord.ext.commands.core.has_any_role:7 of
msgid ""
"This check raises one of two special exceptions, :exc:`.MissingAnyRole` "
"if the user is missing all roles, or :exc:`.NoPrivateMessage` if it is "
"used in a private message. Both inherit from :exc:`.CheckFailure`."
msgstr ""

#: 35ade017b87c4fe4b05145ddc2f2f201 discord.ext.commands.core.has_any_role:13
#: of
msgid ""
"Raise :exc:`.MissingAnyRole` or :exc:`.NoPrivateMessage` instead of "
"generic :exc:`.CheckFailure`"
msgstr ""

#: a94c7b20e99a4d3d8b7b90aa74e6271c discord.ext.commands.core.has_any_role:17
#: of
msgid "An argument list of names or IDs to check that the member has roles wise."
msgstr ""

#: ab9f894a18c44d9e9a4899949d10abcd discord.ext.commands.core.bot_has_role:1 of
msgid "Similar to :func:`.has_role` except checks if the bot itself has the role."
msgstr ""

#: 8ef5c87638f942bf8deadf8ebbd596d5 discord.ext.commands.core.bot_has_role:4 of
msgid ""
"This check raises one of two special exceptions, :exc:`.BotMissingRole` "
"if the bot is missing the role, or :exc:`.NoPrivateMessage` if it is used"
" in a private message. Both inherit from :exc:`.CheckFailure`."
msgstr ""

#: 94f6e1f2bbe042f7b4d946ecfa351b19 discord.ext.commands.core.bot_has_role:10
#: of
msgid ""
"Raise :exc:`.BotMissingRole` or :exc:`.NoPrivateMessage` instead of "
"generic :exc:`.CheckFailure`"
msgstr ""

#: 31696f0d12c64bcba9fe56a3e1a6e3c0
#: discord.ext.commands.core.bot_has_permissions:1 of
msgid ""
"Similar to :func:`.has_permissions` except checks if the bot itself has "
"the permissions listed."
msgstr ""

#: 649ad7d58605463aba43ee78c2fe92ca
#: discord.ext.commands.core.bot_has_permissions:4 of
msgid ""
"This check raises a special exception, :exc:`.BotMissingPermissions` that"
" is inherited from :exc:`.CheckFailure`."
msgstr ""

#: 6e1dea28f1e242dcb89ac9f27aba156f
#: discord.ext.commands.core.bot_has_guild_permissions:1 of
msgid ""
"Similar to :func:`.has_guild_permissions`, but checks the bot members "
"guild permissions."
msgstr ""

#: 504a86050e164f1cbc2ef3dfab214b6e
#: discord.ext.commands.core.bot_has_any_role:1 of
msgid ""
"Similar to :func:`.has_any_role` except checks if the bot itself has any "
"of the roles listed."
msgstr ""

#: 85b5f7bf08514667a71efb8c49f1dcf8
#: discord.ext.commands.core.bot_has_any_role:4 of
msgid ""
"This check raises one of two special exceptions, "
":exc:`.BotMissingAnyRole` if the bot is missing all roles, or "
":exc:`.NoPrivateMessage` if it is used in a private message. Both inherit"
" from :exc:`.CheckFailure`."
msgstr ""

#: ac715be0bb8a4b75b4be55e531a54809
#: discord.ext.commands.core.bot_has_any_role:10 of
msgid ""
"Raise :exc:`.BotMissingAnyRole` or :exc:`.NoPrivateMessage` instead of "
"generic :exc:`.CheckFailure`."
msgstr ""

#: discord.ext.commands.core.cooldown:1 e9dbbf29266342019191e100cc14b33e of
msgid "A decorator that adds a cooldown to a command"
msgstr ""

#: a718cc3afe304175996a7f319afead4a discord.ext.commands.core.cooldown:3
#: discord.ext.commands.core.dynamic_cooldown:8 of
msgid ""
"A cooldown allows a command to only be used a specific amount of times in"
" a specific time frame. These cooldowns can be based either on a per-"
"guild, per-channel, per-user, per-role or global basis. Denoted by the "
"third argument of ``type`` which must be of enum type "
":class:`.BucketType`."
msgstr ""

#: 1a5e6e01b634462489aa2c9b72d75c8e discord.ext.commands.core.cooldown:9
#: discord.ext.commands.core.dynamic_cooldown:14 of
msgid ""
"If a cooldown is triggered, then :exc:`.CommandOnCooldown` is triggered "
"in :func:`.on_command_error` and the local error handler."
msgstr ""

#: 4149b91a8b9b4f4ebcb203d68f34a4c2 discord.ext.commands.core.cooldown:12
#: discord.ext.commands.core.dynamic_cooldown:17 of
msgid "A command can only have a single cooldown."
msgstr ""

#: discord.ext.commands.core.cooldown:15 f571532f4e36472da1ad4894c98e70f2 of
msgid "The number of times a command can be used before triggering a cooldown."
msgstr ""

#: 3c9e0cce40ef4459b3b93b81f9112985 discord.ext.commands.core.cooldown:18 of
msgid "The amount of seconds to wait for a cooldown when it's been triggered."
msgstr ""

#: 768f7ee582bb422f8b4f95c93a20d22f discord.ext.commands.core.cooldown:21 of
msgid ""
"The type of cooldown to have. If callable, should return a key for the "
"mapping.  .. versionchanged:: 1.7     Callables are now supported for "
"custom bucket types."
msgstr ""

#: 2dcd9030125648b1b302cd76f6a181e4 discord.ext.commands.core.cooldown:21 of
msgid ""
"The type of cooldown to have. If callable, should return a key for the "
"mapping."
msgstr ""

#: 2f0d5a5a8e65496d84352249b0582557 discord.ext.commands.core.cooldown:23 of
msgid "Callables are now supported for custom bucket types."
msgstr ""

#: 6094d0e28a9c4019a165562f2964df1c
#: discord.ext.commands.core.dynamic_cooldown:1 of
msgid "A decorator that adds a dynamic cooldown to a command"
msgstr ""

#: 079f58510a774037972396f8a7e81087
#: discord.ext.commands.core.dynamic_cooldown:3 of
msgid ""
"This differs from :func:`.cooldown` in that it takes a function that "
"accepts a single parameter of type :class:`.discord.Message` and must "
"return a :class:`.Cooldown` or ``None``. If ``None`` is returned then "
"that cooldown is effectively bypassed."
msgstr ""

#: 672cd5f2ef144f6fbad1395b2f5c0b95
#: discord.ext.commands.core.dynamic_cooldown:22 of
msgid ""
"A function that takes a message and returns a cooldown that will apply to"
" this invocation or ``None`` if the cooldown should be bypassed."
msgstr ""

#: 593c7a5e5b1d4edda83dc41a14a274cd
#: discord.ext.commands.core.dynamic_cooldown:26 of
msgid "The type of cooldown to have."
msgstr ""

#: discord.ext.commands.core.max_concurrency:1 fa44abacc86b4549a649aa49b5b6ac82
#: of
msgid "A decorator that adds a maximum concurrency to a command"
msgstr ""

#: discord.ext.commands.core.max_concurrency:3 e94f4d66c33a4a8095e7fbf8d1a92968
#: of
msgid ""
"This enables you to only allow a certain number of command invocations at"
" the same time, for example if a command takes too long or if only one "
"user can use it at a time. This differs from a cooldown in that there is "
"no set waiting period or token bucket -- only a set number of people can "
"run the command."
msgstr ""

#: a11c0e11f70d46c9993cbeeadecc0979
#: discord.ext.commands.core.max_concurrency:11 of
msgid ""
"The maximum number of invocations of this command that can be running at "
"the same time."
msgstr ""

#: a412433be92548c09349f173e0f21567
#: discord.ext.commands.core.max_concurrency:14 of
msgid ""
"The bucket that this concurrency is based on, e.g. ``BucketType.guild`` "
"would allow it to be used up to ``number`` times per guild."
msgstr ""

#: 4606a73966d64b4a90a6cdd92f2e88aa
#: discord.ext.commands.core.max_concurrency:18 of
msgid ""
"Whether the command should wait for the queue to be over. If this is set "
"to ``False`` then instead of waiting until the command can run again, the"
" command raises :exc:`.MaxConcurrencyReached` to its error handler. If "
"this is set to ``True`` then the command waits until it can be executed."
msgstr ""

#: discord.ext.commands.core.before_invoke:3 f5e756aa4e554e66a3257a5129c4ef4b
#: of
msgid ""
"This allows you to refer to one before invoke hook for several commands "
"that do not have to be within the same cog. :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`T\\`\\`\\)\\]\\, \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`T\\`\\`\\)\\]`"
msgstr ""

#: discord.ext.commands.core.after_invoke:3 f74267b631a5439eb0c212f5feded4e0 of
msgid ""
"This allows you to refer to one after invoke hook for several commands "
"that do not have to be within the same cog. :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`T\\`\\`\\)\\]\\, \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`T\\`\\`\\)\\]`"
msgstr ""

#: 6e1c6fc4c43844059652d7bf1c1d21d5 discord.ext.commands.core.guild_only:1 of
msgid ""
"A :func:`.check` that indicates this command must only be used in a guild"
" context only. Basically, no private messages are allowed when using the "
"command."
msgstr ""

#: 51b7f083cf344183970934ed917e18fc discord.ext.commands.core.guild_only:5 of
msgid ""
"This check raises a special exception, :exc:`.NoPrivateMessage` that is "
"inherited from :exc:`.CheckFailure`."
msgstr ""

#: 887a1905103842a688e15cf1b6ee6216 discord.ext.commands.core.dm_only:1 of
msgid ""
"A :func:`.check` that indicates this command must only be used in a DM "
"context. Only private messages are allowed when using the command."
msgstr ""

#: 590b200bb7aa4c1080ac46793bed34f7 discord.ext.commands.core.dm_only:5 of
msgid ""
"This check raises a special exception, :exc:`.PrivateMessageOnly` that is"
" inherited from :exc:`.CheckFailure`. :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`T\\`\\`\\)\\]\\, \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`T\\`\\`\\)\\]`"
msgstr ""

#: 887311557f434bafa7caf9d0257629cb discord.ext.commands.core.is_owner:1 of
msgid ""
"A :func:`.check` that checks if the person invoking this command is the "
"owner of the bot."
msgstr ""

#: caeb6f7d083e49cab51f2b82ee02f9ee discord.ext.commands.core.is_owner:4 of
msgid "This is powered by :meth:`.Bot.is_owner`."
msgstr ""

#: c1106d33034b4444bbbcbf91375f5fcc discord.ext.commands.core.is_owner:6 of
msgid ""
"This check raises a special exception, :exc:`.NotOwner` that is derived "
"from :exc:`.CheckFailure`."
msgstr ""

#: 1b423666d7694ad387cc429489d03abe discord.ext.commands.core.is_nsfw:1 of
msgid "A :func:`.check` that checks if the channel is a NSFW channel."
msgstr ""

#: discord.ext.commands.core.is_nsfw:3 fba7938014474c98afff1432159e3000 of
msgid ""
"This check raises a special exception, :exc:`.NSFWChannelRequired` that "
"is derived from :exc:`.CheckFailure`. :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\"
" \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ "
"\\\\\\(\\`\\`T\\`\\`\\)\\]\\, \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`T\\`\\`\\)\\]`"
msgstr ""

#: 7588f10840c442aea15f191eac9ae20c discord.ext.commands.core.is_nsfw:10 of
msgid ""
"Raise :exc:`.NSFWChannelRequired` instead of generic "
":exc:`.CheckFailure`. DM channels will also now pass this check."
msgstr ""

#: ../../ext/commands/api.rst:339 a1663529490742deab91241c83f67df8
msgid "Cooldown"
msgstr ""

#: discord.ext.commands.cooldowns.Cooldown:1 f693cf1699b84066aad9b40c50de702a
#: of
msgid "Represents a cooldown for a command."
msgstr ""

#: a8e6375201964283838d7bebb18fd640 discord.ext.commands.cooldowns.Cooldown:5
#: of
msgid "The total number of tokens available per :attr:`per` seconds."
msgstr ""

#: 9922824a0cb34709ac41ec5fb31849e8 discord.ext.commands.cooldowns.Cooldown:11
#: of
msgid "The length of the cooldown period in seconds."
msgstr ""

#: d95a9dfdb80445d98472f84997e7fc9a
#: discord.ext.commands.cooldowns.Cooldown.get_tokens:1 of
msgid "Returns the number of available tokens before rate limiting is applied."
msgstr ""

#: 94930446a5ce4847b1c683389d552a57
#: discord.ext.commands.cooldowns.Cooldown.get_tokens:4 of
msgid ""
"The time in seconds since Unix epoch to calculate tokens at. If not "
"supplied then :func:`time.time()` is used."
msgstr ""

#: 37c64c1f6261438891a797a6a574ac89
#: discord.ext.commands.cooldowns.Cooldown.get_tokens:8 of
msgid "The number of tokens available before the cooldown is to be applied."
msgstr ""

#: discord.ext.commands.cooldowns.Cooldown.get_retry_after:1
#: ebc6225bfbf4471ea8705b0813f0c2ca of
msgid "Returns the time in seconds until the cooldown will be reset."
msgstr ""

#: discord.ext.commands.cooldowns.Cooldown.get_retry_after:4
#: e762ab85aab44884be1d2bd769467a1e of
msgid ""
"The current time in seconds since Unix epoch. If not supplied, then "
":func:`time.time()` is used."
msgstr ""

#: c6cf86ab00b84adbb67edd54f9fac287
#: discord.ext.commands.cooldowns.Cooldown.get_retry_after:8 of
msgid "The number of seconds to wait before this cooldown will be reset."
msgstr ""

#: discord.ext.commands.cooldowns.Cooldown.update_rate_limit:1
#: e116ae67c1cd4dc285f47b3476ee09be of
msgid "Updates the cooldown rate limit."
msgstr ""

#: discord.ext.commands.cooldowns.Cooldown.update_rate_limit:4
#: fe6e90f08c66469ea5d5f007bd8444b2 of
msgid ""
"The time in seconds since Unix epoch to update the rate limit at. If not "
"supplied, then :func:`time.time()` is used."
msgstr ""

#: 451125af000a49a4a8a75a4da1012f89
#: discord.ext.commands.cooldowns.Cooldown.update_rate_limit:8 of
msgid "The retry-after time in seconds if rate limited."
msgstr ""

#: 337ae2421ec549f8afa675182a9a8eab
#: discord.ext.commands.cooldowns.Cooldown.update_rate_limit:9 of
msgid "Optional[:class:`float`]"
msgstr ""

#: c37c3555b58b45a7804186ddaefded8d
#: discord.ext.commands.cooldowns.Cooldown.reset:1 of
msgid "Reset the cooldown to its initial state."
msgstr ""

#: b701fd3d4965415e8b93f8b7254478ba
#: discord.ext.commands.cooldowns.Cooldown.copy:1 of
msgid "Creates a copy of this cooldown."
msgstr ""

#: 958e6160c5d34c63afa9f3c9414d1927
#: discord.ext.commands.cooldowns.Cooldown.copy:3 of
msgid "A new instance of this cooldown."
msgstr ""

#: dac0d660be9a427495f6cbf44647e95d
#: discord.ext.commands.cooldowns.Cooldown.copy:4 of
msgid ":class:`Cooldown`"
msgstr ""

#: ../../ext/commands/api.rst:347 4942dd8081954a83978bfc1c1e8ae392
msgid "Context"
msgstr ""

#: 2a57cbae1bfa4447b0bc2a09e3f4f878 discord.ext.commands.context.Context:1 of
msgid "Represents the context in which a command is being invoked under."
msgstr ""

#: 8032257bdf734e74b87c614d3237173a discord.ext.commands.context.Context:3 of
msgid ""
"This class contains a lot of metadata to help you understand more about "
"the invocation context. This class is not created manually and is instead"
" passed around to commands as the first parameter."
msgstr ""

#: discord.ext.commands.context.Context:7 e0c4816bb06d4bd2a34987e6818214c2 of
msgid "This class implements the :class:`~discord.abc.Messageable` ABC."
msgstr ""

#: df100d3bf6124f60895f455a7f705170 discord.ext.commands.context.Context:11 of
msgid "The message that triggered the command being executed."
msgstr ""

#: 6c79017c8b06446498c3190155904db2 discord.ext.commands.context.Context:13
#: discord.ext.commands.context.Context.reply:9
#: e1bc43a7b22b49f7bb9f4ba8e292f620 of
msgid ":class:`.Message`"
msgstr ""

#: 6004a27f6c4540209779e671c47e15e3 discord.ext.commands.context.Context:17 of
msgid "The bot that contains the command being executed."
msgstr ""

#: 7e00bcb1f585437696837bdd6b95547f discord.ext.commands.context.Context:19 of
msgid ":class:`.Bot`"
msgstr ""

#: 708802b8cfb84541895d3b8f333bd922 discord.ext.commands.context.Context:23 of
msgid ""
"The list of transformed arguments that were passed into the command. If "
"this is accessed during the :func:`.on_command_error` event then this "
"list could be incomplete."
msgstr ""

#: 1b9289e73d8242c7ba23ba6e1e013dde discord.ext.commands.context.Context:27 of
msgid ":class:`list`"
msgstr ""

#: 44a48bb25cec474f9ee80bd4f8294ad8 discord.ext.commands.context.Context:31 of
msgid ""
"A dictionary of transformed arguments that were passed into the command. "
"Similar to :attr:`args`\\, if this is accessed in the "
":func:`.on_command_error` event then this dict could be incomplete."
msgstr ""

#: d8ba277419e4447db3c9c9a0f367840b discord.ext.commands.context.Context:39 of
msgid ""
"The parameter that is currently being inspected and converted. This is "
"only of use for within converters."
msgstr ""

#: 87b4052a2fbc4a99b8faca40162e548e discord.ext.commands.context.Context:44 of
msgid "Optional[:class:`inspect.Parameter`]"
msgstr ""

#: 35b629babfae442680af8ef790c77862 discord.ext.commands.context.Context:48 of
msgid "The prefix that was used to invoke the command."
msgstr ""

#: 010aa10818794f5e9150e284ed0e5d53 discord.ext.commands.context.Context:54 of
msgid "The command that is being invoked currently."
msgstr ""

#: 12b1f3d1af694899946545d0df78f3c7 discord.ext.commands.context.Context:60 of
msgid ""
"The command name that triggered this invocation. Useful for finding out "
"which alias called the command."
msgstr ""

#: 2d3c6624565f41f183a437ef5099cc50 discord.ext.commands.context.Context:67 of
msgid ""
"The command names of the parents that triggered this invocation. Useful "
"for finding out which aliases called the command."
msgstr ""

#: 23c2f761a59c4f3bb5fdb60ddbd0b33b discord.ext.commands.context.Context:70 of
msgid ""
"For example in commands ``?a b c test``, the invoked parents are ``['a', "
"'b', 'c']``."
msgstr ""

#: 9205feec771a4b34b5d819ac90529941 discord.ext.commands.context.Context:74
#: discord.ext.commands.errors.BotMissingPermissions:10
#: discord.ext.commands.errors.MissingPermissions:10
#: discord.ext.commands.errors.TooManyFlags:17
#: discord.ext.commands.flags.Flag:17 of
msgid "List[:class:`str`]"
msgstr ""

#: 5bb9c8cd59e1402ea7fcc3bc6401b70e discord.ext.commands.context.Context:78 of
msgid ""
"The subcommand that was invoked. If no valid subcommand was invoked then "
"this is equal to ``None``."
msgstr ""

#: 269228517d874a2984924a4675897cfc discord.ext.commands.context.Context:85 of
msgid ""
"The string that was attempted to call a subcommand. This does not have to"
" point to a valid registered subcommand and could just point to a "
"nonsense string. If nothing was passed to attempt a call to a subcommand "
"then this is set to ``None``."
msgstr ""

#: 7f645d52858449aa8a2efd0f66f235b4 discord.ext.commands.context.Context:94 of
msgid ""
"A boolean that indicates if the command failed to be parsed, checked, or "
"invoked."
msgstr ""

#: 61fb3dc224d44b0783c3b04b7fea1ddd discord.abc.Messageable.history:1 of
msgid ""
"Returns an :class:`~discord.AsyncIterator` that enables receiving the "
"destination's message history."
msgstr ""

#: 89afaf721f6643aab53272b5f881dec9 discord.abc.Messageable.history:3 of
msgid ""
"You must have :attr:`~discord.Permissions.read_message_history` "
"permissions to use this."
msgstr ""

#: 51ebc16f2d4d414a99faa0ae6bcf7601 discord.abc.Messageable.history:6 of
msgid ""
"The number of messages to retrieve. If ``None``, retrieves every message "
"in the channel. Note, however, that this would make it a slow operation."
msgstr ""

#: discord.abc.Messageable.history:11 eaf31d1fd11746ff859caaec64b90ca1 of
msgid ""
"Retrieve messages before this date or message. If a datetime is provided,"
" it is recommended to use a UTC aware datetime. If the datetime is naive,"
" it is assumed to be local time."
msgstr ""

#: 57b793e910ca43faadaa044dc537fe87 discord.abc.Messageable.history:16 of
msgid ""
"Retrieve messages after this date or message. If a datetime is provided, "
"it is recommended to use a UTC aware datetime. If the datetime is naive, "
"it is assumed to be local time."
msgstr ""

#: discord.abc.Messageable.history:21 f1761b940ade4a788c4e8430b8edaf05 of
msgid ""
"Retrieve messages around this date or message. If a datetime is provided,"
" it is recommended to use a UTC aware datetime. If the datetime is naive,"
" it is assumed to be local time. When using this argument, the maximum "
"limit is 101. Note that if the limit is an even number, then this will "
"return at most limit + 1 messages."
msgstr ""

#: 53fb69e1b6954079bd5f2985c156bf5b discord.abc.Messageable.history:28 of
msgid ""
"If set to ``True``, return messages in oldest->newest order. Defaults to "
"``True`` if ``after`` is specified, otherwise ``False``."
msgstr ""

#: 83b8d6805ef1420b87d97e31bc10efdf discord.abc.Messageable.history:32 of
msgid ":class:`~discord.Message` -- The message with the message data parsed."
msgstr ""

#: 9510fd4d07914ac0a5d62b96ad673bbc discord.abc.Messageable.history:34 of
msgid "You do not have permissions to get channel message history."
msgstr ""

#: 4355deb6fa9d4bdfb104c171c05cdabd discord.abc.Messageable.history:35 of
msgid "The request to get message history failed."
msgstr ""

#: b2ded6cd5eef4474a03a58b81418e0fd discord.abc.Messageable.history:36 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.iterators.HistoryIterator\\``"
msgstr ""

#: 1cad16da9e4a4a039e1c0be9c6789df6 discord.abc.Messageable.history:47 of
msgid "Flattening into a list: ::"
msgstr ""

#: 36d6064ff8644307a143e9643a73d3b1 discord.abc.Messageable.typing:1 of
msgid ""
"Returns a context manager that allows you to type for an indefinite "
"period of time."
msgstr ""

#: 186d34907d0f42f0be28a22e9c5d48f6 discord.abc.Messageable.typing:3 of
msgid ""
"This is useful for denoting long computations in your bot. :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.context\\_managers.Typing\\``"
msgstr ""

#: 03c747a982a54571968a3331429f7a20 discord.abc.Messageable.typing:9 of
msgid ""
"This is both a regular context manager and an async context manager. This"
" means that both ``with`` and ``async with`` work with this."
msgstr ""

#: a48fc9f9ab9846158116f6d2cd0dee5b discord.abc.Messageable.typing:12 of
msgid "Example Usage: ::"
msgstr ""

#: 0c5cca1e94144653989d617b781dc61a
#: discord.ext.commands.context.Context.invoke:3 of
msgid "Calls a command with the arguments given."
msgstr ""

#: 3c31d3de30834b32ad5f1b70ba33922b
#: discord.ext.commands.context.Context.invoke:5 of
msgid ""
"This is useful if you want to just call the callback that a "
":class:`.Command` holds internally."
msgstr ""

#: ba95aa92309b4ac1bdcb9344fcd4f787
#: discord.ext.commands.context.Context.invoke:10 of
msgid ""
"This does not handle converters, checks, cooldowns, pre-invoke, or after-"
"invoke hooks in any matter. It calls the internal callback directly as-if"
" it was a regular function."
msgstr ""

#: c027a3c528604f43b1436b5cfa0640c5
#: discord.ext.commands.context.Context.invoke:14 of
msgid ""
"You must take care in passing the proper arguments when using this "
"function."
msgstr ""

#: 721b6a15a25543cebe7d83e0ffac4465
#: discord.ext.commands.context.Context.invoke:18 of
msgid "The command that is going to be called."
msgstr ""

#: 99d44329ceb947579cd3bce2c2cf2aa6
#: discord.ext.commands.context.Context.invoke:21 of
msgid "The arguments to use."
msgstr ""

#: 63e53520af0043749b354138ad9211a1
#: discord.ext.commands.context.Context.invoke:23 of
msgid "The keyword arguments to use."
msgstr ""

#: 05c7de921b3f4b9c9df3814555cc5fd1
#: discord.ext.commands.context.Context.invoke:25 of
msgid "The command argument to invoke is missing."
msgstr ""

#: c7fe99da5385412abfc8c220108ef77c
#: discord.ext.commands.context.Context.reinvoke:3 of
msgid "Calls the command again."
msgstr ""

#: 04d502dbc692422eaceb397b4b6ad11a
#: discord.ext.commands.context.Context.reinvoke:5 of
msgid ""
"This is similar to :meth:`~.Context.invoke` except that it bypasses "
"checks, cooldowns, and error handlers."
msgstr ""

#: 1cdff60fefdc4f86b552f02bd81be288
#: discord.ext.commands.context.Context.reinvoke:10 of
msgid ""
"If you want to bypass :exc:`.UserInputError` derived exceptions, it is "
"recommended to use the regular :meth:`~.Context.invoke` as it will work "
"more naturally. After all, this will end up using the old arguments the "
"user has used and will thus just fail again."
msgstr ""

#: 075d311288124d9996697486ed5104e7
#: discord.ext.commands.context.Context.reinvoke:17 of
msgid "Whether to call the before and after invoke hooks."
msgstr ""

#: 203459acad88404ab30cd45897df3052
#: discord.ext.commands.context.Context.reinvoke:20 of
msgid ""
"Whether to start the call chain from the very beginning or where we left "
"off (i.e. the command that caused the error). The default is to start "
"where we left off."
msgstr ""

#: 2f6aa4215b0a4936bb6bacfb0d2b72af
#: discord.ext.commands.context.Context.reinvoke:25 of
msgid "The context to reinvoke is not valid."
msgstr ""

#: discord.ext.commands.Context.valid:1 e537426c5a4243f3980cb0e87280d9c6 of
msgid "Checks if the invocation context is valid to be invoked with."
msgstr ""

#: 78c10dddc1524e24aa3ad63f554c414f discord.ext.commands.Context.clean_prefix:1
#: of
msgid ""
"The cleaned up invoke prefix. i.e. mentions are ``@name`` instead of "
"``<@id>``."
msgstr ""

#: discord.ext.commands.Context.cog:1 fd2658097cc24f7db5314f08ca902c2c of
msgid ""
"Returns the cog associated with this context's command. None if it does "
"not exist."
msgstr ""

#: ../../docstring 3b3b16de997e4e54877d2d70b173cfe2
#: discord.ext.commands.Context.guild:1 of
msgid ""
"Returns the guild associated with this context's command. None if not "
"available."
msgstr ""

#: ../../docstring 40a2b9fd266f44c69a5de1c7ee7ed5ff
#: discord.ext.commands.Context.channel:1 of
msgid ""
"Returns the channel associated with this context's command. Shorthand for"
" :attr:`.Message.channel`."
msgstr ""

#: ../../docstring dd56849813db4c7299d6a6f2757ca297
#: discord.ext.commands.Context.author:1 of
msgid ""
"Union[:class:`~discord.User`, :class:`.Member`]: Returns the author "
"associated with this context's command. Shorthand for "
":attr:`.Message.author`"
msgstr ""

#: ../../docstring a3c47787a8d44d61ba8043b2dcfd58ab
#: discord.ext.commands.Context.me:1 of
msgid ""
"Union[:class:`.Member`, :class:`.ClientUser`]: Similar to "
":attr:`.Guild.me` except it may return the :class:`.ClientUser` in "
"private message message contexts, or when :meth:`Intents.guilds` is "
"absent."
msgstr ""

#: a3ce24b8f1b54cb7bad801cd08901ef2 discord.ext.commands.Context.voice_client:1
#: of
msgid "A shortcut to :attr:`.Guild.voice_client`\\, if applicable."
msgstr ""

#: b801313d2d364c268100784609b70816
#: discord.ext.commands.context.Context.send_help:3 of
msgid ""
"Shows the help command for the specified entity if given. The entity can "
"be a command or a cog."
msgstr ""

#: 45cea76cc29a4eb1b767fc7c489a81e5
#: discord.ext.commands.context.Context.send_help:6 of
msgid "If no entity is given, then it'll show help for the entire bot."
msgstr ""

#: discord.ext.commands.context.Context.send_help:9
#: e49a64b80a234858915386f65ba97580 of
msgid ""
"If the entity is a string, then it looks up whether it's a :class:`Cog` "
"or a :class:`Command`."
msgstr ""

#: 2d8cd3a7d42f4f7faf846ef88b04a2e5
#: discord.ext.commands.context.Context.send_help:14 of
msgid ""
"Due to the way this function works, instead of returning something "
"similar to :meth:`~.commands.HelpCommand.command_not_found` this returns "
":class:`None` on bad input or no help command."
msgstr ""

#: 13a046373ec84445af9a1a75a3426873
#: discord.ext.commands.context.Context.send_help:18 of
msgid "The entity to show help for."
msgstr ""

#: 68525271233843f89cac1a272fb172f9
#: discord.ext.commands.context.Context.send_help:21 of
msgid "The result of the help command, if any."
msgstr ""

#: 2f8ba1ce6e854c78bb794c8d818a52fc discord.abc.Messageable.can_send:1 of
msgid ""
"Returns a :class:`bool` indicating whether you have the permissions to "
"send the object(s)."
msgstr ""

#: caa6e97a4c40413b818721112e133895 discord.abc.Messageable.can_send:3 of
msgid "Indicates whether you have the permissions to send the object(s)."
msgstr ""

#: c9c33719233542fc9ab097fbef9946b7 discord.abc.Messageable.can_send:6 of
msgid "An invalid type has been passed."
msgstr ""

#: 39474d78af2f441d818ba1b7ccdeccd0 discord.abc.Messageable.fetch_message:3 of
msgid "Retrieves a single :class:`~discord.Message` from the destination."
msgstr ""

#: 680a3c9536194ffd9086dc8f20207694 discord.abc.Messageable.fetch_message:6 of
msgid "The message ID to look for."
msgstr ""

#: 3f227eccd4324618943ec343072814bf discord.abc.Messageable.fetch_message:9 of
msgid "The message asked for."
msgstr ""

#: 2f6f2c77fe9f49d6af547d8b4d988847 discord.abc.Messageable.fetch_message:10
#: discord.abc.Messageable.send:100 of
msgid ":class:`~discord.Message`"
msgstr ""

#: cfef24f3237e4958816a5a01baa12172 discord.abc.Messageable.fetch_message:12 of
msgid "The specified message was not found."
msgstr ""

#: 93b6c7c33ef84abfa0fba2952731ae42 discord.abc.Messageable.fetch_message:13 of
msgid "You do not have the permissions required to get a message."
msgstr ""

#: 87417e86a48a426f9a94bb355a04bab5 discord.abc.Messageable.fetch_message:14 of
msgid "Retrieving the message failed."
msgstr ""

#: c0f7203f91234dcf9b71d4aa08c2743e discord.abc.Messageable.pins:3 of
msgid "Retrieves all messages that are currently pinned in the channel."
msgstr ""

#: 5897281b37544f1ab20f5339ce9ab3ed discord.abc.Messageable.pins:7 of
msgid ""
"Due to a limitation with the Discord API, the :class:`.Message` objects "
"returned by this method do not contain complete "
":attr:`.Message.reactions` data."
msgstr ""

#: 7bad27e461a740d299b8c4bd148fd4e3 discord.abc.Messageable.pins:11 of
msgid "The messages that are currently pinned."
msgstr ""

#: discord.abc.Messageable.pins:12 e8b1b5f758104e489149fdbb07deeafb of
msgid "List[:class:`~discord.Message`]"
msgstr ""

#: 46fce97e3e2044b9812605b7371e03c5 discord.abc.Messageable.pins:14 of
msgid "Retrieving the pinned messages failed."
msgstr ""

#: 666fc58fd984426b9fc3697183d98530
#: discord.ext.commands.context.Context.reply:3 of
msgid ""
"A shortcut method to :meth:`.abc.Messageable.send` to reply to the "
":class:`.Message`."
msgstr ""

#: 07908514f89544cd8fadb56e8b84c9ea discord.abc.Messageable.send:99
#: discord.ext.commands.context.Context.reply:8 of
msgid "The message that was sent."
msgstr ""

#: 44cfdba165a2496f86c393e4ff002312 discord.abc.Messageable.send:102
#: discord.ext.commands.context.Context.reply:11 of
msgid "Sending the message failed."
msgstr ""

#: 1baacf7f645a4a3e98b1d53ae7e82fa4 discord.abc.Messageable.send:103
#: discord.ext.commands.context.Context.reply:12 of
msgid "You do not have the proper permissions to send the message."
msgstr ""

#: dd5c11c9c7f04d8da2c0fcf683585cbd
#: discord.ext.commands.context.Context.reply:13 of
msgid ""
"The ``files`` list is not of the appropriate size, or     you specified "
"both ``file`` and ``files``."
msgstr ""

#: 233e5db05eb849cc92f9a5d67a3c1cb0 discord.abc.Messageable.send:3 of
msgid "Sends a message to the destination with the content given."
msgstr ""

#: 401b162816dd4269983af2a0953407c2 discord.abc.Messageable.send:5 of
msgid ""
"The content must be a type that can convert to a string through "
"``str(content)``. If the content is set to ``None`` (the default), then "
"the ``embed`` parameter must be provided."
msgstr ""

#: discord.abc.Messageable.send:9 fc1fb167cc7c4368938fbc342518f479 of
msgid ""
"To upload a single file, the ``file`` parameter should be used with a "
"single :class:`~discord.File` object. To upload multiple files, the "
"``files`` parameter should be used with a :class:`list` of "
":class:`~discord.File` objects. **Specifying both parameters will lead to"
" an exception**."
msgstr ""

#: a67e87cd5c8d44fdb709013d4ff36929 discord.abc.Messageable.send:14 of
msgid ""
"To upload a single embed, the ``embed`` parameter should be used with a "
"single :class:`~discord.Embed` object. To upload multiple embeds, the "
"``embeds`` parameter should be used with a :class:`list` of "
":class:`~discord.Embed` objects. **Specifying both parameters will lead "
"to an exception**."
msgstr ""

#: a59873e3c70548c5a2419384906c6096 discord.abc.Messageable.send:20 of
msgid "The content of the message to send."
msgstr ""

#: c4b9c97ff6d14d1bb9ea552fb6386908 discord.abc.Messageable.send:23 of
msgid "Indicates if the message should be sent using text-to-speech."
msgstr ""

#: 75e503161f364fa5a593ca4873cec071 discord.abc.Messageable.send:26 of
msgid "The rich embed for the content."
msgstr ""

#: ce1d5306f02a4b228235ba11840ae1da discord.abc.Messageable.send:29 of
msgid "The file to upload."
msgstr ""

#: 657cdc05b2744bf99bd70c4f327ae6a6 discord.abc.Messageable.send:32 of
msgid "A list of files to upload. Must be a maximum of 10."
msgstr ""

#: 5dedce0b1ad64c5f98413e459d91b5d9 discord.abc.Messageable.send:35 of
msgid ""
"The nonce to use for sending this message. If the message was "
"successfully sent, then the message will have a nonce with this value."
msgstr ""

#: 9e1547829fc343e9a1b366baf07c9b31 discord.abc.Messageable.send:39 of
msgid "Whether :attr:`nonce` is enforced to be validated.  .. versionadded:: 2.5"
msgstr ""

#: 4210f7e257dd4a96af7c38683f665d88 discord.abc.Messageable.send:39 of
msgid "Whether :attr:`nonce` is enforced to be validated."
msgstr ""

#: a634d6f1d80b454f9468298d1ddef3d6 discord.abc.Messageable.send:44 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message we just sent. If the deletion fails, then it is "
"silently ignored."
msgstr ""

#: 8e05171456134fe3b53ec51198be752f discord.abc.Messageable.send:49 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`~discord.Client.allowed_mentions`."
" The merging behaviour only overrides attributes that have been "
"explicitly passed to the object, otherwise it uses the attributes set in "
":attr:`~discord.Client.allowed_mentions`. If no object is passed at all "
"then the defaults given by :attr:`~discord.Client.allowed_mentions` are "
"used instead.  .. versionadded:: 1.4"
msgstr ""

#: 310aceb3d63846e8a3c93bc70dea8dbe discord.abc.Messageable.send:49 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`~discord.Client.allowed_mentions`."
" The merging behaviour only overrides attributes that have been "
"explicitly passed to the object, otherwise it uses the attributes set in "
":attr:`~discord.Client.allowed_mentions`. If no object is passed at all "
"then the defaults given by :attr:`~discord.Client.allowed_mentions` are "
"used instead."
msgstr ""

#: db923c5ea4f34a8ab38cd7fd07aa8f96 discord.abc.Messageable.send:59 of
msgid ""
"A reference to the :class:`~discord.Message` to which you are replying, "
"this can be created using :meth:`~discord.Message.to_reference` or passed"
" directly as a :class:`~discord.Message`. You can control whether this "
"mentions the author of the referenced message using the "
":attr:`~discord.AllowedMentions.replied_user` attribute of "
"``allowed_mentions`` or by setting ``mention_author``.  .. versionadded::"
" 1.6"
msgstr ""

#: discord.abc.Messageable.send:59 e35ba87b49314f98b33ba3227b02d2e0 of
msgid ""
"A reference to the :class:`~discord.Message` to which you are replying, "
"this can be created using :meth:`~discord.Message.to_reference` or passed"
" directly as a :class:`~discord.Message`. You can control whether this "
"mentions the author of the referenced message using the "
":attr:`~discord.AllowedMentions.replied_user` attribute of "
"``allowed_mentions`` or by setting ``mention_author``."
msgstr ""

#: 1124d9197c524ad5b4c48f4a10574a39 discord.abc.Messageable.send:68 of
msgid ""
"If set, overrides the :attr:`~discord.AllowedMentions.replied_user` "
"attribute of ``allowed_mentions``.  .. versionadded:: 1.6"
msgstr ""

#: discord.abc.Messageable.send:68 e5ea147dab2a42f9a952890a2690940b of
msgid ""
"If set, overrides the :attr:`~discord.AllowedMentions.replied_user` "
"attribute of ``allowed_mentions``."
msgstr ""

#: 23c9f13fa7754faf8b1ab81a09dc4688 discord.abc.Messageable.send:73 of
msgid "A Discord UI View to add to the message."
msgstr ""

#: 3ad8c72fa9314999b37d175de732583d discord.abc.Messageable.send:76 of
msgid ""
"A list of embeds to upload. Must be a maximum of 10.  .. versionadded:: "
"2.0"
msgstr ""

#: 1ee790371a76498aac1fa3332d7a306a discord.abc.Messageable.send:76 of
msgid "A list of embeds to upload. Must be a maximum of 10."
msgstr ""

#: c01e8fe8d227480387cf8df951050189 discord.abc.Messageable.send:81 of
msgid ""
"A list of stickers to upload. Must be a maximum of 3.  .. versionadded:: "
"2.0"
msgstr ""

#: 8e58570511c14eba84fb64fefa25077d discord.abc.Messageable.send:81 of
msgid "A list of stickers to upload. Must be a maximum of 3."
msgstr ""

#: 30c1bd01caa44c0693f3a649d876db8b discord.abc.Messageable.send:86 of
msgid "Whether to suppress embeds for the message."
msgstr ""

#: 4a4c60e54808412797081f64973c2198 discord.abc.Messageable.send:89 of
msgid ""
"Whether to suppress push and desktop notifications for the message.  .. "
"versionadded:: 2.4"
msgstr ""

#: 8007bf6be7b3451e82b1bb3047cfe9cd discord.abc.Messageable.send:89 of
msgid "Whether to suppress push and desktop notifications for the message."
msgstr ""

#: discord.abc.Messageable.send:94 e4817933749f49f39bff7308c3294a2f of
msgid "The poll to send.  .. versionadded:: 2.6"
msgstr ""

#: 29bd5583d5a045a7903518ab2ed3337d discord.abc.Messageable.send:94 of
msgid "The poll to send."
msgstr ""

#: 92fd7f8bda8f4e59a6add001c2ae563e discord.abc.Messageable.send:104 of
msgid ""
"The ``files`` list is not of the appropriate size,     you specified both"
" ``file`` and ``files``,     or you specified both ``embed`` and "
"``embeds``,     or the ``reference`` object is not a "
":class:`~discord.Message`,     :class:`~discord.MessageReference` or "
":class:`~discord.PartialMessage`."
msgstr ""

#: 7e981ac3a20345ffb61daf4c3509de80 discord.abc.Messageable.trigger_typing:3 of
msgid "Triggers a *typing* indicator to the destination."
msgstr ""

#: b663ff6e5f654ad88fa62051626ab64d discord.abc.Messageable.trigger_typing:5 of
msgid ""
"*Typing* indicator will go away after 10 seconds, or after a message is "
"sent."
msgstr ""

#: ../../ext/commands/api.rst:365 6129e2344292447d859948329c263665
msgid "Converters"
msgstr ""

#: 646dda467a2949ffb2a6f2b4d12b9da9 discord.ext.commands.converter.Converter:1
#: of
msgid ""
"The base class of custom converters that require the :class:`.Context` to"
" be passed to be useful."
msgstr ""

#: 736c189e21924d62b1bca6145d56aaa5 discord.ext.commands.converter.Converter:4
#: of
msgid ""
"This allows you to implement converters that function similar to the "
"special cased ``discord`` classes."
msgstr ""

#: b09220a3e54145b982ce91fd4028ad9c discord.ext.commands.converter.Converter:7
#: of
msgid ""
"Classes that derive from this should override the "
":meth:`~.Converter.convert` method to do its conversion logic. This "
"method must be a :ref:`coroutine <coroutine>`."
msgstr ""

#: 2b33792d59994112b5f8ae2f18cdd1e9
#: discord.ext.commands.converter.CategoryChannelConverter.convert:3
#: discord.ext.commands.converter.ColourConverter.convert:3
#: discord.ext.commands.converter.Converter.convert:3
#: discord.ext.commands.converter.EmojiConverter.convert:3
#: discord.ext.commands.converter.ForumChannelConverter.convert:3
#: discord.ext.commands.converter.GameConverter.convert:3
#: discord.ext.commands.converter.GuildChannelConverter.convert:3
#: discord.ext.commands.converter.GuildConverter.convert:3
#: discord.ext.commands.converter.GuildStickerConverter.convert:3
#: discord.ext.commands.converter.InviteConverter.convert:3
#: discord.ext.commands.converter.MemberConverter.convert:3
#: discord.ext.commands.converter.MessageConverter.convert:3
#: discord.ext.commands.converter.ObjectConverter.convert:3
#: discord.ext.commands.converter.PartialEmojiConverter.convert:3
#: discord.ext.commands.converter.PartialMessageConverter.convert:3
#: discord.ext.commands.converter.RoleConverter.convert:3
#: discord.ext.commands.converter.StageChannelConverter.convert:3
#: discord.ext.commands.converter.TextChannelConverter.convert:3
#: discord.ext.commands.converter.ThreadConverter.convert:3
#: discord.ext.commands.converter.UserConverter.convert:3
#: discord.ext.commands.converter.VoiceChannelConverter.convert:3
#: discord.ext.commands.converter.clean_content.convert:3 of
msgid "The method to override to do conversion logic."
msgstr ""

#: 9d9f9443ace94d45aff747a2a2a753af
#: discord.ext.commands.converter.CategoryChannelConverter.convert:5
#: discord.ext.commands.converter.ColourConverter.convert:5
#: discord.ext.commands.converter.Converter.convert:5
#: discord.ext.commands.converter.EmojiConverter.convert:5
#: discord.ext.commands.converter.ForumChannelConverter.convert:5
#: discord.ext.commands.converter.GameConverter.convert:5
#: discord.ext.commands.converter.GuildChannelConverter.convert:5
#: discord.ext.commands.converter.GuildConverter.convert:5
#: discord.ext.commands.converter.GuildStickerConverter.convert:5
#: discord.ext.commands.converter.InviteConverter.convert:5
#: discord.ext.commands.converter.MemberConverter.convert:5
#: discord.ext.commands.converter.MessageConverter.convert:5
#: discord.ext.commands.converter.ObjectConverter.convert:5
#: discord.ext.commands.converter.PartialEmojiConverter.convert:5
#: discord.ext.commands.converter.PartialMessageConverter.convert:5
#: discord.ext.commands.converter.RoleConverter.convert:5
#: discord.ext.commands.converter.StageChannelConverter.convert:5
#: discord.ext.commands.converter.TextChannelConverter.convert:5
#: discord.ext.commands.converter.ThreadConverter.convert:5
#: discord.ext.commands.converter.UserConverter.convert:5
#: discord.ext.commands.converter.VoiceChannelConverter.convert:5
#: discord.ext.commands.converter.clean_content.convert:5 of
msgid ""
"If an error is found while converting, it is recommended to raise a "
":exc:`.CommandError` derived exception as it will properly propagate to "
"the error handlers."
msgstr ""

#: 8e1557a164a24dd18a9d3e3d7524d840
#: discord.ext.commands.converter.CategoryChannelConverter.convert:10
#: discord.ext.commands.converter.ColourConverter.convert:10
#: discord.ext.commands.converter.Converter.convert:10
#: discord.ext.commands.converter.EmojiConverter.convert:10
#: discord.ext.commands.converter.ForumChannelConverter.convert:10
#: discord.ext.commands.converter.GameConverter.convert:10
#: discord.ext.commands.converter.GuildChannelConverter.convert:10
#: discord.ext.commands.converter.GuildConverter.convert:10
#: discord.ext.commands.converter.GuildStickerConverter.convert:10
#: discord.ext.commands.converter.InviteConverter.convert:10
#: discord.ext.commands.converter.MemberConverter.convert:10
#: discord.ext.commands.converter.MessageConverter.convert:10
#: discord.ext.commands.converter.ObjectConverter.convert:10
#: discord.ext.commands.converter.PartialEmojiConverter.convert:10
#: discord.ext.commands.converter.PartialMessageConverter.convert:10
#: discord.ext.commands.converter.RoleConverter.convert:10
#: discord.ext.commands.converter.StageChannelConverter.convert:10
#: discord.ext.commands.converter.TextChannelConverter.convert:10
#: discord.ext.commands.converter.ThreadConverter.convert:10
#: discord.ext.commands.converter.UserConverter.convert:10
#: discord.ext.commands.converter.VoiceChannelConverter.convert:10
#: discord.ext.commands.converter.clean_content.convert:10 of
msgid "The invocation context that the argument is being used in."
msgstr ""

#: 28f8742b518343c0a0621906d8c7afa4
#: discord.ext.commands.converter.CategoryChannelConverter.convert:13
#: discord.ext.commands.converter.ColourConverter.convert:13
#: discord.ext.commands.converter.Converter.convert:13
#: discord.ext.commands.converter.EmojiConverter.convert:13
#: discord.ext.commands.converter.ForumChannelConverter.convert:13
#: discord.ext.commands.converter.GameConverter.convert:13
#: discord.ext.commands.converter.GuildChannelConverter.convert:13
#: discord.ext.commands.converter.GuildConverter.convert:13
#: discord.ext.commands.converter.GuildStickerConverter.convert:13
#: discord.ext.commands.converter.InviteConverter.convert:13
#: discord.ext.commands.converter.MemberConverter.convert:13
#: discord.ext.commands.converter.MessageConverter.convert:13
#: discord.ext.commands.converter.ObjectConverter.convert:13
#: discord.ext.commands.converter.PartialEmojiConverter.convert:13
#: discord.ext.commands.converter.PartialMessageConverter.convert:13
#: discord.ext.commands.converter.RoleConverter.convert:13
#: discord.ext.commands.converter.StageChannelConverter.convert:13
#: discord.ext.commands.converter.TextChannelConverter.convert:13
#: discord.ext.commands.converter.ThreadConverter.convert:13
#: discord.ext.commands.converter.UserConverter.convert:13
#: discord.ext.commands.converter.VoiceChannelConverter.convert:13
#: discord.ext.commands.converter.clean_content.convert:13 of
msgid "The argument that is being converted."
msgstr ""

#: 4d5298f99ee649468bc32cbb48858423
#: discord.ext.commands.converter.CategoryChannelConverter.convert:16
#: discord.ext.commands.converter.ColourConverter.convert:16
#: discord.ext.commands.converter.Converter.convert:16
#: discord.ext.commands.converter.EmojiConverter.convert:16
#: discord.ext.commands.converter.ForumChannelConverter.convert:16
#: discord.ext.commands.converter.GameConverter.convert:16
#: discord.ext.commands.converter.GuildChannelConverter.convert:16
#: discord.ext.commands.converter.GuildConverter.convert:16
#: discord.ext.commands.converter.GuildStickerConverter.convert:16
#: discord.ext.commands.converter.InviteConverter.convert:16
#: discord.ext.commands.converter.MemberConverter.convert:16
#: discord.ext.commands.converter.MessageConverter.convert:16
#: discord.ext.commands.converter.ObjectConverter.convert:16
#: discord.ext.commands.converter.PartialEmojiConverter.convert:16
#: discord.ext.commands.converter.PartialMessageConverter.convert:16
#: discord.ext.commands.converter.RoleConverter.convert:16
#: discord.ext.commands.converter.StageChannelConverter.convert:16
#: discord.ext.commands.converter.TextChannelConverter.convert:16
#: discord.ext.commands.converter.ThreadConverter.convert:16
#: discord.ext.commands.converter.UserConverter.convert:16
#: discord.ext.commands.converter.VoiceChannelConverter.convert:16
#: discord.ext.commands.converter.clean_content.convert:16 of
msgid "A generic exception occurred when converting the argument."
msgstr ""

#: discord.ext.commands.converter.CategoryChannelConverter.convert:17
#: discord.ext.commands.converter.ColourConverter.convert:17
#: discord.ext.commands.converter.Converter.convert:17
#: discord.ext.commands.converter.EmojiConverter.convert:17
#: discord.ext.commands.converter.ForumChannelConverter.convert:17
#: discord.ext.commands.converter.GameConverter.convert:17
#: discord.ext.commands.converter.GuildChannelConverter.convert:17
#: discord.ext.commands.converter.GuildConverter.convert:17
#: discord.ext.commands.converter.GuildStickerConverter.convert:17
#: discord.ext.commands.converter.InviteConverter.convert:17
#: discord.ext.commands.converter.MemberConverter.convert:17
#: discord.ext.commands.converter.MessageConverter.convert:17
#: discord.ext.commands.converter.ObjectConverter.convert:17
#: discord.ext.commands.converter.PartialEmojiConverter.convert:17
#: discord.ext.commands.converter.PartialMessageConverter.convert:17
#: discord.ext.commands.converter.RoleConverter.convert:17
#: discord.ext.commands.converter.StageChannelConverter.convert:17
#: discord.ext.commands.converter.TextChannelConverter.convert:17
#: discord.ext.commands.converter.ThreadConverter.convert:17
#: discord.ext.commands.converter.UserConverter.convert:17
#: discord.ext.commands.converter.VoiceChannelConverter.convert:17
#: discord.ext.commands.converter.clean_content.convert:17
#: e5f482e53ee44aa2a15113dc1e1e41de of
msgid "The converter failed to convert the argument."
msgstr ""

#: c601cdd1c13e49e1995ff8a62823953d
#: discord.ext.commands.converter.Converter.convert:19 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\"
" \\\\\\(\\`\\`T\\_co\\`\\`\\, covariant\\=True\\)`"
msgstr ""

#: 0e92c7b2d8f147b69988c8e009418b69
#: discord.ext.commands.converter.ObjectConverter:1 of
msgid "Converts to a :class:`~discord.Object`."
msgstr ""

#: 727747e448be408ca7871bda57d10222
#: discord.ext.commands.converter.ObjectConverter:3 of
msgid ""
"The argument must follow the valid ID or mention formats (e.g. "
"`<@80088516616269824>`)."
msgstr ""

#: 8908a3f472604dd1b17e67bf4cce1a98
#: discord.ext.commands.converter.CategoryChannelConverter:6
#: discord.ext.commands.converter.EmojiConverter:6
#: discord.ext.commands.converter.ForumChannelConverter:6
#: discord.ext.commands.converter.GuildChannelConverter:6
#: discord.ext.commands.converter.GuildConverter:3
#: discord.ext.commands.converter.GuildStickerConverter:6
#: discord.ext.commands.converter.MemberConverter:6
#: discord.ext.commands.converter.MessageConverter:5
#: discord.ext.commands.converter.ObjectConverter:7
#: discord.ext.commands.converter.RoleConverter:6
#: discord.ext.commands.converter.StageChannelConverter:8
#: discord.ext.commands.converter.TextChannelConverter:6
#: discord.ext.commands.converter.ThreadConverter:5
#: discord.ext.commands.converter.UserConverter:5
#: discord.ext.commands.converter.VoiceChannelConverter:6 of
msgid "The lookup strategy is as follows (in order):"
msgstr ""

#: 81bc7f6190a44dfdad07b950eef59a75
#: discord.ext.commands.converter.CategoryChannelConverter:8
#: discord.ext.commands.converter.EmojiConverter:8
#: discord.ext.commands.converter.ForumChannelConverter:8
#: discord.ext.commands.converter.GuildChannelConverter:8
#: discord.ext.commands.converter.GuildConverter:5
#: discord.ext.commands.converter.MemberConverter:8
#: discord.ext.commands.converter.ObjectConverter:9
#: discord.ext.commands.converter.RoleConverter:8
#: discord.ext.commands.converter.StageChannelConverter:10
#: discord.ext.commands.converter.TextChannelConverter:8
#: discord.ext.commands.converter.ThreadConverter:7
#: discord.ext.commands.converter.UserConverter:7
#: discord.ext.commands.converter.VoiceChannelConverter:8 of
msgid "Lookup by ID."
msgstr ""

#: afdd2a4d0f1840cfad2fbddc72f9d667
#: discord.ext.commands.converter.ObjectConverter:10 of
msgid "Lookup by member, role, or channel mention."
msgstr ""

#: 76bd5224cbd7404a82a7e1a65a2ba7e7
#: discord.ext.commands.converter.ObjectConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.object.Object\\``"
msgstr ""

#: 742769f030bb4786b80dbd891805017e
#: discord.ext.commands.converter.MemberConverter:1 of
msgid "Converts to a :class:`~discord.Member`."
msgstr ""

#: 437a2f3b32a94663b8596fabd903f9b8
#: discord.ext.commands.converter.CategoryChannelConverter:3
#: discord.ext.commands.converter.ForumChannelConverter:3
#: discord.ext.commands.converter.GuildChannelConverter:3
#: discord.ext.commands.converter.MemberConverter:3
#: discord.ext.commands.converter.StageChannelConverter:5
#: discord.ext.commands.converter.TextChannelConverter:3
#: discord.ext.commands.converter.VoiceChannelConverter:3 of
msgid ""
"All lookups are via the local guild. If in a DM context, then the lookup "
"is done by the global cache."
msgstr ""

#: 2f289a0b34b94af6b7788cb39ee945d5
#: discord.ext.commands.converter.CategoryChannelConverter:9
#: discord.ext.commands.converter.ForumChannelConverter:9
#: discord.ext.commands.converter.GuildChannelConverter:9
#: discord.ext.commands.converter.MemberConverter:9
#: discord.ext.commands.converter.RoleConverter:9
#: discord.ext.commands.converter.StageChannelConverter:11
#: discord.ext.commands.converter.TextChannelConverter:9
#: discord.ext.commands.converter.ThreadConverter:8
#: discord.ext.commands.converter.UserConverter:8
#: discord.ext.commands.converter.VoiceChannelConverter:9 of
msgid "Lookup by mention."
msgstr ""

#: 0d48779a2f444266936b946c2049cc49
#: discord.ext.commands.converter.MemberConverter:10
#: discord.ext.commands.converter.UserConverter:9 of
msgid "Lookup by name#discrim"
msgstr ""

#: cb41bf47efbc46a88f1fb382c99df3a8
#: discord.ext.commands.converter.CategoryChannelConverter:10
#: discord.ext.commands.converter.EmojiConverter:10
#: discord.ext.commands.converter.ForumChannelConverter:10
#: discord.ext.commands.converter.MemberConverter:11
#: discord.ext.commands.converter.RoleConverter:10
#: discord.ext.commands.converter.StageChannelConverter:12
#: discord.ext.commands.converter.TextChannelConverter:10
#: discord.ext.commands.converter.UserConverter:10
#: discord.ext.commands.converter.VoiceChannelConverter:10 of
msgid "Lookup by name"
msgstr ""

#: 24bf57716efe420eb9723a91f138c0b1
#: discord.ext.commands.converter.MemberConverter:12 of
msgid "Lookup by nickname"
msgstr ""

#: 4cf7868345df4c21a983edab41b1b0d9
#: discord.ext.commands.converter.MemberConverter:14 of
msgid "Raise :exc:`.MemberNotFound` instead of generic :exc:`.BadArgument`"
msgstr ""

#: 5e76492d4be6488b995dabf985898d99
#: discord.ext.commands.converter.MemberConverter:17 of
msgid ""
"This converter now lazily fetches members from the gateway and HTTP APIs,"
" optionally caching the result if :attr:`.MemberCacheFlags.joined` is "
"enabled."
msgstr ""

#: 8d06743c4aaf4e759f2e26bec639327d
#: discord.ext.commands.converter.MemberConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.member.Member\\``"
msgstr ""

#: 412f9a2fbaf94008a49dc5d7e0485240
#: discord.ext.commands.converter.UserConverter:1 of
msgid "Converts to a :class:`~discord.User`."
msgstr ""

#: 974a011359994de7af1c409ba415d6b6
#: discord.ext.commands.converter.UserConverter:3 of
msgid "All lookups are via the global user cache."
msgstr ""

#: 9f3a5094c8b04217b84085255960e9cf
#: discord.ext.commands.converter.UserConverter:12 of
msgid "Raise :exc:`.UserNotFound` instead of generic :exc:`.BadArgument`"
msgstr ""

#: 3bee8790498d44a396c4c3893cf43aa0
#: discord.ext.commands.converter.UserConverter:15 of
msgid ""
"This converter now lazily fetches users from the HTTP APIs if an ID is "
"passed, and it's not available in cache."
msgstr ""

#: 18ca02cf99df44a79e77275819dfec4b
#: discord.ext.commands.converter.UserConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.user.User\\``"
msgstr ""

#: 2a032d08244340bfa4dc4be912b4932c
#: discord.ext.commands.converter.MessageConverter:1 of
msgid "Converts to a :class:`discord.Message`."
msgstr ""

#: bfabc815487148ad94863e1ac2f8634f
#: discord.ext.commands.converter.MessageConverter:7 of
msgid ""
"Lookup by \"{channel ID}-{message ID}\" (retrieved by shift-clicking on "
"\"Copy ID\")"
msgstr ""

#: d5024e9b27bc4c5bbac52cc20e642175
#: discord.ext.commands.converter.MessageConverter:8 of
msgid "Lookup by message ID (the message **must** be in the context channel)"
msgstr ""

#: 32e249ca19b74aa09bfbd282a5f9c214
#: discord.ext.commands.converter.MessageConverter:9 of
msgid "Lookup by message URL"
msgstr ""

#: 2abe1582bd5341d5bf25227a0bc0cb70
#: discord.ext.commands.converter.MessageConverter:11 of
msgid ""
"Raise :exc:`.ChannelNotFound`, :exc:`.MessageNotFound` or "
":exc:`.ChannelNotReadable` instead of generic :exc:`.BadArgument`"
msgstr ""

#: discord.ext.commands.converter.MessageConverter.convert:19
#: f69d6050db19450db3668e8de5bcfd6f of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.message.Message\\``"
msgstr ""

#: ae67fe03686c4532bdc49de9b2070f16
#: discord.ext.commands.converter.PartialMessageConverter:1 of
msgid "Converts to a :class:`discord.PartialMessage`."
msgstr ""

#: d924d7ff07ac42489f5c1ce537fa7b03
#: discord.ext.commands.converter.PartialMessageConverter:5 of
msgid "The creation strategy is as follows (in order):"
msgstr ""

#: 85bdb7294d554afbabc5e1eb19bc11c3
#: discord.ext.commands.converter.PartialMessageConverter:7 of
msgid ""
"By \"{channel ID}-{message ID}\" (retrieved by shift-clicking on \"Copy "
"ID\")"
msgstr ""

#: 8a6d3c3213c644568d162301e0ce3fe6
#: discord.ext.commands.converter.PartialMessageConverter:8 of
msgid "By message ID (The message is assumed to be in the context channel.)"
msgstr ""

#: 76454ca185ae45b1bd5cb22ac59e1909
#: discord.ext.commands.converter.PartialMessageConverter:9 of
msgid "By message URL"
msgstr ""

#: d9900b47bbf7468e8ac55515c260f4ca
#: discord.ext.commands.converter.PartialMessageConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.message.PartialMessage\\``"
msgstr ""

#: 2cfea3fb0254411fb0b6754daa3ce282
#: discord.ext.commands.converter.GuildChannelConverter:1 of
msgid "Converts to a :class:`~discord.abc.GuildChannel`."
msgstr ""

#: 34555afe05c64c22ba65fa8c467758fb
#: discord.ext.commands.converter.GuildChannelConverter:10
#: discord.ext.commands.converter.ThreadConverter:9 of
msgid "Lookup by name."
msgstr ""

#: 1196b93dbf1843f9871f472f0fdaa174
#: discord.ext.commands.converter.GuildChannelConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.abc.GuildChannel\\``"
msgstr ""

#: 6c443151bd9b488ea48551a8364f6d33
#: discord.ext.commands.converter.TextChannelConverter:1 of
msgid "Converts to a :class:`~discord.TextChannel`."
msgstr ""

#: 4ea1417c2e794a5e9f8755ffbf256902
#: discord.ext.commands.converter.CategoryChannelConverter:12
#: discord.ext.commands.converter.TextChannelConverter:12
#: discord.ext.commands.converter.VoiceChannelConverter:12 of
msgid "Raise :exc:`.ChannelNotFound` instead of generic :exc:`.BadArgument`"
msgstr ""

#: 9acb0ac5aac34aa78efac7c13d4a1331
#: discord.ext.commands.converter.TextChannelConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.channel.TextChannel\\``"
msgstr ""

#: 8ccdd108a7064b83aca8e4ab62fd305a
#: discord.ext.commands.converter.VoiceChannelConverter:1 of
msgid "Converts to a :class:`~discord.VoiceChannel`."
msgstr ""

#: 2096498a3b5340ad90200fbfb19632ff
#: discord.ext.commands.converter.VoiceChannelConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.channel.VoiceChannel\\``"
msgstr ""

#: 20f52a031cab406dab1a51afced52432
#: discord.ext.commands.converter.StageChannelConverter:1 of
msgid "Converts to a :class:`~discord.StageChannel`."
msgstr ""

#: a929e67bd3d04b41a0dabcb8512f778a
#: discord.ext.commands.converter.StageChannelConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.channel.StageChannel\\``"
msgstr ""

#: a83f903ad1b34ad487fb7a4a03dc5b27
#: discord.ext.commands.converter.CategoryChannelConverter:1 of
msgid "Converts to a :class:`~discord.CategoryChannel`."
msgstr ""

#: 2623771c36a040caab45e6a378ce74e0
#: discord.ext.commands.converter.CategoryChannelConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.channel.CategoryChannel\\``"
msgstr ""

#: 172a64bd6247459f9b5b43137b24c5bc
#: discord.ext.commands.converter.ForumChannelConverter:1 of
msgid "Converts to a :class:`~discord.ForumChannel`."
msgstr ""

#: 0de36a5f0a2b41c1b482db1e3a98f017
#: discord.ext.commands.converter.ForumChannelConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.channel.ForumChannel\\``"
msgstr ""

#: b779ed1feb044884a3e36e41011028ba
#: discord.ext.commands.converter.InviteConverter:1 of
msgid "Converts to a :class:`~discord.Invite`."
msgstr ""

#: discord.ext.commands.converter.InviteConverter:3
#: fce31dd1ef1141ddbd7d7502bcab8a40 of
msgid "This is done via an HTTP request using :meth:`.Bot.fetch_invite`."
msgstr ""

#: 77f0d4a2234e4ddf85645b0da2eac317
#: discord.ext.commands.converter.InviteConverter:5 of
msgid "Raise :exc:`.BadInviteArgument` instead of generic :exc:`.BadArgument`"
msgstr ""

#: bc6ce10d467f4390ac66c2d5d0ca23ca
#: discord.ext.commands.converter.InviteConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.invite.Invite\\``"
msgstr ""

#: 6b7a74325383465caf8f1f009428b33b
#: discord.ext.commands.converter.GuildConverter:1 of
msgid "Converts to a :class:`~discord.Guild`."
msgstr ""

#: discord.ext.commands.converter.GuildConverter:6
#: fd52a4dd3bc0463c896b76e00dde8a04 of
msgid ""
"Lookup by name. (There is no disambiguation for Guilds with multiple "
"matching names)."
msgstr ""

#: 39ab7f0b8b79427689539f5cef19c853
#: discord.ext.commands.converter.GuildConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.guild.Guild\\``"
msgstr ""

#: 7c2bee80870241ea9d20251d3217dc89
#: discord.ext.commands.converter.RoleConverter:1 of
msgid "Converts to a :class:`~discord.Role`."
msgstr ""

#: 61d67e8d54b04821a028d8ab39e6c98a
#: discord.ext.commands.converter.RoleConverter:3 of
msgid ""
"All lookups are via the local guild. If in a DM context, the converter "
"raises :exc:`.NoPrivateMessage` exception."
msgstr ""

#: 08b6aa908bb64dcea42329171a14f5c2
#: discord.ext.commands.converter.RoleConverter:12 of
msgid "Raise :exc:`.RoleNotFound` instead of generic :exc:`.BadArgument`"
msgstr ""

#: 45e204c610ee43ed950dcc22b1ecac5d
#: discord.ext.commands.converter.RoleConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.role.Role\\``"
msgstr ""

#: discord.ext.commands.converter.GameConverter:1
#: f68137599ad141848aea62797bd0b069 of
msgid "Converts to :class:`~discord.Game`."
msgstr ""

#: 7dbcdc21d90f448b9d1efd11e118645f
#: discord.ext.commands.converter.GameConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.activity.Game\\``"
msgstr ""

#: discord.ext.commands.converter.ColourConverter:1
#: f4e87a79041a451c801d3b6c0c26393c of
msgid "Converts to a :class:`~discord.Colour`."
msgstr ""

#: bd1d31daa2fe4f7ba99d73ef48a4d20a
#: discord.ext.commands.converter.ColourConverter:3 of
msgid "Add an alias named ColorConverter"
msgstr ""

#: 7e8e22e6115f449b8de9d66de21770ea
#: discord.ext.commands.converter.ColourConverter:6 of
msgid "The following formats are accepted:"
msgstr ""

#: 2975fccff559428e99d149e8fd618d24
#: discord.ext.commands.converter.ColourConverter:8 of
msgid "``0x<hex>``"
msgstr ""

#: discord.ext.commands.converter.ColourConverter:9
#: fd078f70f7a1418a97ecd2b2d1bd1084 of
msgid "``#<hex>``"
msgstr ""

#: c278ff33210c42e2a6f842916a54f37c
#: discord.ext.commands.converter.ColourConverter:10 of
msgid "``0x#<hex>``"
msgstr ""

#: d94660f553f04addb931a9aedf36734c
#: discord.ext.commands.converter.ColourConverter:11 of
msgid "``rgb(<number>, <number>, <number>)``"
msgstr ""

#: b6271dd49d2b4d08b612c7f8ad362306
#: discord.ext.commands.converter.ColourConverter:12 of
msgid "Any of the ``classmethod`` in :class:`~discord.Colour`"
msgstr ""

#: a3a933b8465e4e2aac98efb09e3792ff
#: discord.ext.commands.converter.ColourConverter:14 of
msgid "The ``_`` in the name can be optionally replaced with spaces."
msgstr ""

#: d8013b78f4674f15b973ba505866fe32
#: discord.ext.commands.converter.ColourConverter:16 of
msgid ""
"Like CSS, ``<number>`` can be either 0-255 or 0-100% and ``<hex>`` can be"
" either a 6 digit hex number or a 3 digit hex shortcut (e.g. #fff)."
msgstr ""

#: 0fe40cd0acb149afb058b8a72858a814
#: discord.ext.commands.converter.ColourConverter:19 of
msgid "Raise :exc:`.BadColourArgument` instead of generic :exc:`.BadArgument`"
msgstr ""

#: 678c8011b29a497caae665ce41559203
#: discord.ext.commands.converter.ColourConverter:22 of
msgid "Added support for ``rgb`` function and 3-digit hex shortcuts"
msgstr ""

#: 4633cc38f1954c9fb988d94796c138e8
#: discord.ext.commands.converter.ColourConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.colour.Colour\\``"
msgstr ""

#: 5fe8c3fcda8a4f62af280c4d6ab3397a
#: discord.ext.commands.converter.EmojiConverter:1 of
msgid "Converts to a :class:`~discord.Emoji`."
msgstr ""

#: b0e0e871ab064289a32c66c40214fd9e
#: discord.ext.commands.converter.EmojiConverter:3
#: discord.ext.commands.converter.GuildStickerConverter:3 of
msgid ""
"All lookups are done for the local guild first, if available. If that "
"lookup fails, then it checks the client's global cache."
msgstr ""

#: b07065acb83c45b486baabdf63179771
#: discord.ext.commands.converter.EmojiConverter:9 of
msgid "Lookup by extracting ID from the emoji."
msgstr ""

#: c4d58c4ef0a6423da6a5e5b6eb0d6be9
#: discord.ext.commands.converter.EmojiConverter:12 of
msgid "Raise :exc:`.EmojiNotFound` instead of generic :exc:`.BadArgument`"
msgstr ""

#: 97ae2776efac4d31b3a7edda0567ced5
#: discord.ext.commands.converter.EmojiConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.emoji.Emoji\\``"
msgstr ""

#: a6e1bbb66c634ba882343850f5060099
#: discord.ext.commands.converter.PartialEmojiConverter:1 of
msgid "Converts to a :class:`~discord.PartialEmoji`."
msgstr ""

#: 42c767df989a4c90b5d6b441a08d7df2
#: discord.ext.commands.converter.PartialEmojiConverter:3 of
msgid "This is done by extracting the animated flag, name and ID from the emoji."
msgstr ""

#: 07638781992545e39720fcaf86933a79
#: discord.ext.commands.converter.PartialEmojiConverter:5 of
msgid ""
"Raise :exc:`.PartialEmojiConversionFailure` instead of generic "
":exc:`.BadArgument`"
msgstr ""

#: 1e63c68c4f734c36b2b9f66fcf8eece7
#: discord.ext.commands.converter.PartialEmojiConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.partial\\_emoji.PartialEmoji\\``"
msgstr ""

#: ce9f0c4726d04dee89258a89147f1c84
#: discord.ext.commands.converter.ThreadConverter:1 of
msgid "Coverts to a :class:`~discord.Thread`."
msgstr ""

#: 790b28ad496d47d8ba6e1763d3ee0ad1
#: discord.ext.commands.converter.ThreadConverter:3 of
msgid "All lookups are via the local guild."
msgstr ""

#: 9fd932f95910427882b21cd8049861b0
#: discord.ext.commands.converter.ThreadConverter.convert:19 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.threads.Thread\\``"
msgstr ""

#: discord.ext.commands.converter.GuildStickerConverter:1
#: e61870d441594fc08984aae236b3c1da of
msgid "Converts to a :class:`~discord.GuildSticker`."
msgstr ""

#: discord.ext.commands.converter.GuildStickerConverter:8
#: f6697785b6e9452dbb7a1e3d2e50e6c1 of
msgid "1. Lookup by ID. 3. Lookup by name"
msgstr ""

#: discord.ext.commands.converter.GuildStickerConverter.convert:19
#: e659cc67ce3f47b49647be349da570fc of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.sticker.GuildSticker\\``"
msgstr ""

#: 26b5eaad74174413ad5f62f07c19e04e
#: discord.ext.commands.converter.clean_content:1 of
msgid "Converts the argument to mention scrubbed version of said content."
msgstr ""

#: 222b174f45a6491685b454e0ca7ac505
#: discord.ext.commands.converter.clean_content:4 of
msgid "This behaves similarly to :attr:`~discord.Message.clean_content`."
msgstr ""

#: cd20087853094691a18a67dfa932b7e7
#: discord.ext.commands.converter.clean_content:8 of
msgid "Whether to clean channel mentions."
msgstr ""

#: 3d7a283473d84c54be777d237ce9b0ea
#: discord.ext.commands.converter.clean_content:14 of
msgid "Whether to use nicknames when transforming mentions."
msgstr ""

#: cad7e9188975461bab6898228488e849
#: discord.ext.commands.converter.clean_content:20 of
msgid "Whether to also escape special markdown characters."
msgstr ""

#: ac08fe2514bd4811b892d04d1aaee218
#: discord.ext.commands.converter.clean_content:26 of
msgid ""
"Whether to also remove special markdown characters. This option is not "
"supported with ``escape_markdown``"
msgstr ""

#: 693ad27846404f11a8c7dcd918b18571 discord.ext.commands.converter.Greedy:1 of
msgid ""
"A special converter that greedily consumes arguments until it can't. As a"
" consequence of this behaviour, most input errors are silently discarded,"
" since it is used as an indicator of when to stop parsing."
msgstr ""

#: 65c82b1d226e4019830193c66d7b71fb discord.ext.commands.converter.Greedy:5 of
msgid ""
"When a parser error is met the greedy converter stops converting, undoes "
"the internal string parsing routine, and continues parsing regularly."
msgstr ""

#: discord.ext.commands.converter.Greedy:8 eea47d9f94744e9b917b9d652e66a173 of
msgid "For example, in the following code:"
msgstr ""

#: 8d160e434a7f4a6ab63e90f02f9906c0 discord.ext.commands.converter.Greedy:16 of
msgid ""
"An invocation of ``[p]test 1 2 3 4 5 6 hello`` would pass ``numbers`` "
"with ``[1, 2, 3, 4, 5, 6]`` and ``reason`` with ``hello``\\."
msgstr ""

#: 4c73772c707a41a8bca1bc1d45003b4f discord.ext.commands.converter.Greedy:19 of
msgid "For more information, check :ref:`ext_commands_special_converters`."
msgstr ""

#: b8cb297c3d1e4c6590617210c3e66258
#: discord.ext.commands.converter.run_converters:3 of
msgid "Runs converters for a given converter, argument, and parameter."
msgstr ""

#: 76a8a32516ab489385eead76873a3063
#: discord.ext.commands.converter.run_converters:5 of
msgid "This function does the same work that the library does under the hood."
msgstr ""

#: 26189e1dade84d1695feb50b0f581be0
#: discord.ext.commands.converter.run_converters:10 of
msgid "The invocation context to run the converters under."
msgstr ""

#: 7d0cc1620d474215b3792c80011ca01c
#: discord.ext.commands.converter.run_converters:13 of
msgid "The converter to run, this corresponds to the annotation in the function."
msgstr ""

#: 3b33275cf8bc4265ad0e767e85abf029
#: discord.ext.commands.converter.run_converters:16 of
msgid "The argument to convert to."
msgstr ""

#: 70f697fdaf9e420197d1e7b68bacadd4
#: discord.ext.commands.converter.run_converters:19 of
msgid "The parameter being converted. This is mainly for error reporting."
msgstr ""

#: ca628a1c253c4ef09eba37baf33c7df8
#: discord.ext.commands.converter.run_converters:22 of
msgid "The resulting conversion."
msgstr ""

#: c0ae70d2dde14c5ba5ea30a0e9ffeca6
#: discord.ext.commands.converter.run_converters:25 of
msgid "The converter failed to convert."
msgstr ""

#: ../../ext/commands/api.rst:438 1e2749402e7849088fc29daf98fe46aa
msgid "Flag Converter"
msgstr ""

#: discord.ext.commands.flags.FlagConverter:1 ebf35e6c9cc74dfea31978fe12ef8441
#: of
msgid "A converter that allows for a user-friendly flag syntax."
msgstr ""

#: 9cd13fd1f8fa45eb928cd329ee9c0b6b discord.ext.commands.flags.FlagConverter:3
#: of
msgid ""
"The flags are defined using :pep:`526` type annotations similar to the "
":mod:`dataclasses` Python module. For more information on how this "
"converter works, check the appropriate :ref:`documentation "
"<ext_commands_flag_converter>`."
msgstr ""

#: discord.ext.commands.flags.FlagConverter:12 e2322223de744e58bfd011edac6861bc
#: of
msgid ""
"Returns an iterator of ``(flag_name, flag_value)`` pairs. This allows it "
"to be, for example, constructed as a dict or a list of pairs. Note that "
"aliases are not shown."
msgstr ""

#: d315ec7b9ea34fa69b128dc9251defe2 discord.ext.commands.flags.FlagConverter:18
#: of
msgid ""
"A class parameter to toggle case insensitivity of the flag parsing. If "
"``True`` then flags are parsed in a case-insensitive manner. Defaults to "
"``False``."
msgstr ""

#: 5cbcd48f9c6a4f3a946cb7f7d31ace3a discord.ext.commands.flags.FlagConverter:22
#: of
msgid ""
"The prefix that all flags must be prefixed with. By default, there is no "
"prefix."
msgstr ""

#: b288c7ce85f543eab6734e8f8af233ad discord.ext.commands.flags.FlagConverter:25
#: of
msgid ""
"The delimiter that separates a flag's argument from the flag's name. By "
"default, this is ``:``."
msgstr ""

#: b88d014bc2fe4314b4cfc532d2b4a53d
#: discord.ext.commands.flags.FlagConverter.get_flags:1 of
msgid "A mapping of flag name to flag object this converter has."
msgstr ""

#: 71f48457a02b4dd6aed21b6792ad8e49
#: discord.ext.commands.flags.FlagConverter.get_flags:4 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`dict\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`str\\`\\, "
"\\:py\\:class\\:\\`\\~discord.ext.commands.flags.Flag\\`\\]`"
msgstr ""

#: c80c9b5b801e4b62a57251824320bace
#: discord.ext.commands.flags.FlagConverter.convert:3 of
msgid "The method that actually converters an argument to the flag mapping."
msgstr ""

#: discord.ext.commands.flags.FlagConverter.convert:5
#: eff33f3c050c4e038d09a2a9bdcc8efa of
msgid "The flag converter class."
msgstr ""

#: 76a247e0e011404e9c25960694f09952
#: discord.ext.commands.flags.FlagConverter.convert:11 of
msgid "The argument to convert from."
msgstr ""

#: 818f36c5b4cb490aae6b80095dff1b0f
#: discord.ext.commands.flags.FlagConverter.convert:14 of
msgid "The flag converter instance with all flags parsed."
msgstr ""

#: discord.ext.commands.flags.FlagConverter.convert:15
#: e3615b359fd44a1fa52dd21c0878e6b9 of
msgid ":class:`FlagConverter`"
msgstr ""

#: 7c7a50f6b7434393951a3c121025f908
#: discord.ext.commands.flags.FlagConverter.convert:17 of
msgid "A flag related parsing error."
msgstr ""

#: 5e97f1db6bc948e9afa242cbf64fbbc2
#: discord.ext.commands.flags.FlagConverter.convert:18 of
msgid "A command related error."
msgstr ""

#: 45e7a4bb9a3f4ced97c9384d6f7b1df7 discord.ext.commands.flags.Flag:1 of
msgid "Represents a flag parameter for :class:`FlagConverter`."
msgstr ""

#: 56adcf6a1e7e4dba975c4276d615605d discord.ext.commands.flags.Flag:3 of
msgid ""
"The :func:`~discord.ext.commands.flag` function helps create these flag "
"objects, but it is not necessary to do so. These cannot be constructed "
"manually."
msgstr ""

#: 0fd508502b6142d693389cf1f8ef3d9e discord.ext.commands.flags.Flag:9 of
msgid "The name of the flag."
msgstr ""

#: 9fd4ac94309f4005a49ca8a1845f8f02 discord.ext.commands.flags.Flag:15 of
msgid "The aliases of the flag name."
msgstr ""

#: ba6fbc2b3b924e09b4847d09c9265c3f discord.ext.commands.flags.Flag:21 of
msgid "The attribute in the class that corresponds to this flag."
msgstr ""

#: 42585df2efea4584b149b8afaf0017da discord.ext.commands.flags.Flag:27 of
msgid "The default value of the flag, if available."
msgstr ""

#: b755efe3ab02421ebf20dd845a99ba63 discord.ext.commands.flags.Flag:29
#: discord.ext.commands.flags.Flag:35 of
msgid "Any"
msgstr ""

#: discord.ext.commands.flags.Flag:33 e380378a9b484f9a97ae7cd84cef8d0b of
msgid "The underlying evaluated annotation of the flag."
msgstr ""

#: 994cd4022bc249d6a975fc2c6d060ef9 discord.ext.commands.flags.Flag:39 of
msgid ""
"The maximum number of arguments the flag can accept. A negative value "
"indicates an unlimited amount of arguments."
msgstr ""

#: 9bcc7c0f11ce42f68c9b4e442b1bd117 discord.ext.commands.flags.Flag:46 of
msgid "Whether multiple given values overrides the previous value."
msgstr ""

#: 639c1e5bc42f4c34b75f3a1d21ac5f49 discord.ext.commands.Flag.required:1 of
msgid "Whether the flag is required."
msgstr ""

#: discord.ext.commands.Flag.required:3 ed39444a85a541809414f9fb64c50751 of
msgid "A required flag has no default value."
msgstr ""

#: 361b8bfe96934487a49fe9586d484562 discord.ext.commands.flags.flag:1 of
msgid ""
"Override default functionality and parameters of the underlying "
":class:`FlagConverter` class attributes."
msgstr ""

#: 88f1bd71d9cf4cb09270bb77151b8277 discord.ext.commands.flags.flag:5 of
msgid "The flag name. If not given, defaults to the attribute name."
msgstr ""

#: a6bcfd20152f405a86597c00bed08f64 discord.ext.commands.flags.flag:8 of
msgid "Aliases to the flag name. If not given, no aliases are set."
msgstr ""

#: 80b9750cb95441f4b9f8e74b1ebc5ce1 discord.ext.commands.flags.flag:11 of
msgid ""
"The default parameter. This could be either a value or a callable that "
"takes :class:`Context` as its sole parameter. If not given then it "
"defaults to the default value given to the attribute."
msgstr ""

#: 1301032487f84c4b983ffd5cc18cd69f discord.ext.commands.flags.flag:16 of
msgid ""
"The maximum number of arguments the flag can accept. A negative value "
"indicates an unlimited amount of arguments. The default value depends on "
"the annotation given."
msgstr ""

#: 9d12431a536a41a196ca323965285a01 discord.ext.commands.flags.flag:21 of
msgid ""
"Whether multiple given values overrides the previous value. The default "
"value depends on the annotation given."
msgstr ""

#: 739a359756dd4d95bcbb386fc201f629 discord.ext.commands.flags.flag:25 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Any\\``"
msgstr ""

#: ../../ext/commands/api.rst:451 9f12f5caa99e439489d62576052ce36d
msgid "Exceptions"
msgstr ""

#: de8054c7a89f40cc9c628cd008ed4c08 discord.ext.commands.errors.CommandError:1
#: of
msgid "The base exception type for all command related errors."
msgstr ""

#: discord.ext.commands.errors.CommandError:3 e3a7a1c8784e4b0391cba40b4b86bc07
#: of
msgid "This inherits from :exc:`discord.DiscordException`."
msgstr ""

#: 28c66f1b65264ecbb347abcc7549e452 discord.ext.commands.errors.CommandError:5
#: of
msgid ""
"This exception and exceptions inherited from it are handled in a special "
"way as they are caught and passed into a special event from "
":class:`.Bot`\\, :func:`.on_command_error`."
msgstr ""

#: 775da09f3b11433c96643d4bd6880d60
#: discord.ext.commands.errors.ConversionError:1 of
msgid "Exception raised when a Converter class raises non-CommandError."
msgstr ""

#: c1628f75af2142f1a0c57e3232afa38b
#: discord.ext.commands.errors.CommandNotFound:7
#: discord.ext.commands.errors.ConversionError:3
#: discord.ext.commands.errors.MaxConcurrencyReached:3
#: discord.ext.commands.errors.UserInputError:4 of
msgid "This inherits from :exc:`CommandError`."
msgstr ""

#: 5f5b0fab620946b7b1c3c64f32df513d
#: discord.ext.commands.errors.ConversionError:7 of
msgid "The converter that failed."
msgstr ""

#: discord.ext.commands.errors.ConversionError:9
#: fbe4c703f5a84067985a716e2052e9dc of
msgid ":class:`discord.ext.commands.Converter`"
msgstr ""

#: 59bc4fd8d04e4eec9b78caa9b9dcee7d
#: discord.ext.commands.errors.CommandInvokeError:7
#: discord.ext.commands.errors.ConversionError:13 of
msgid ""
"The original exception that was raised. You can also get this via the "
"``__cause__`` attribute."
msgstr ""

#: a7b6a5d248994baa9f94e2df8562e74b
#: discord.ext.commands.errors.CommandInvokeError:10
#: discord.ext.commands.errors.ConversionError:16 of
msgid ":exc:`Exception`"
msgstr ""

#: 14e0a4d933194585bdad3d9f70b27f50
#: discord.ext.commands.errors.MissingRequiredArgument:1 of
msgid ""
"Exception raised when parsing a command and a parameter that is required "
"is not encountered."
msgstr ""

#: 165ab37adc89428e90ff4df2f0b80314 discord.ext.commands.errors.BadArgument:4
#: discord.ext.commands.errors.BadLiteralArgument:4
#: discord.ext.commands.errors.BadUnionArgument:4
#: discord.ext.commands.errors.MissingRequiredArgument:4
#: discord.ext.commands.errors.TooManyArguments:4 of
msgid "This inherits from :exc:`UserInputError`"
msgstr ""

#: be98043a63b449a988de52a1b8df47d6
#: discord.ext.commands.errors.MissingRequiredArgument:8 of
msgid "The argument that is missing."
msgstr ""

#: ac767ecf96d642aeac005e669fd48fea
#: discord.ext.commands.errors.BadLiteralArgument:12
#: discord.ext.commands.errors.BadUnionArgument:10
#: discord.ext.commands.errors.MissingRequiredArgument:10 of
msgid ":class:`inspect.Parameter`"
msgstr ""

#: 99f048e71ece48c19ae6f915f5dcee0e
#: discord.ext.commands.errors.ArgumentParsingError:1 of
msgid "An exception raised when the parser fails to parse a user's input."
msgstr ""

#: 197972f134b643a4bcc356605c847a4f
#: discord.ext.commands.errors.ArgumentParsingError:3 of
msgid "This inherits from :exc:`UserInputError`."
msgstr ""

#: 19a270dea6a84fb4b01280520155719c
#: discord.ext.commands.errors.ArgumentParsingError:5 of
msgid ""
"There are child classes that implement more granular parsing errors for "
"i18n purposes."
msgstr ""

#: c6f44123c0d8446688a895b2dab96f02
#: discord.ext.commands.errors.UnexpectedQuoteError:1 of
msgid ""
"An exception raised when the parser encounters a quote mark inside a non-"
"quoted string."
msgstr ""

#: 71e587d424b0450b9e26f4c4abad9240
#: discord.ext.commands.errors.ExpectedClosingQuoteError:3
#: discord.ext.commands.errors.InvalidEndOfQuotedStringError:4
#: discord.ext.commands.errors.UnexpectedQuoteError:3 of
msgid "This inherits from :exc:`ArgumentParsingError`."
msgstr ""

#: 452b63fa0e564a6ab5468150309d0422
#: discord.ext.commands.errors.UnexpectedQuoteError:7 of
msgid "The quote mark that was found inside the non-quoted string."
msgstr ""

#: bc59593a8a08405c86a2f64f83389d40
#: discord.ext.commands.errors.InvalidEndOfQuotedStringError:1 of
msgid ""
"An exception raised when a space is expected after the closing quote in a"
" string but a different character is found."
msgstr ""

#: 1f7b37cfa2b44800b2a62fc6b846c7a0
#: discord.ext.commands.errors.InvalidEndOfQuotedStringError:8 of
msgid "The character found instead of the expected string."
msgstr ""

#: 302d5d1597f04b16a58937bcc46bebba
#: discord.ext.commands.errors.ExpectedClosingQuoteError:1 of
msgid "An exception raised when a quote character is expected but not found."
msgstr ""

#: 8fcd7001236a4867b6766ec2fa48fa79
#: discord.ext.commands.errors.ExpectedClosingQuoteError:7 of
msgid "The quote character expected."
msgstr ""

#: 1407890e0c744feaa93d64791a0ceb59 discord.ext.commands.errors.BadArgument:1
#: of
msgid ""
"Exception raised when a parsing or conversion failure is encountered on "
"an argument to pass into a command."
msgstr ""

#: 3f5ca23837a541c288466959940aa1ab
#: discord.ext.commands.errors.BadUnionArgument:1 of
msgid ""
"Exception raised when a :data:`typing.Union` converter fails for all its "
"associated types."
msgstr ""

#: bfb5f51c531d44e49c5ae964e7432593
#: discord.ext.commands.errors.BadLiteralArgument:10
#: discord.ext.commands.errors.BadUnionArgument:8 of
msgid "The parameter that failed being converted."
msgstr ""

#: 885d985954d94bcfa4bd9e86dbbade74
#: discord.ext.commands.errors.BadUnionArgument:14 of
msgid "A tuple of converters attempted in conversion, in order of failure."
msgstr ""

#: a50f4bbb339542909f100b744c975ce5
#: discord.ext.commands.errors.BadUnionArgument:16 of
msgid "Tuple[Type, ``...``]"
msgstr ""

#: discord.ext.commands.errors.BadLiteralArgument:22
#: discord.ext.commands.errors.BadUnionArgument:20
#: e17c717ab6224038bba2f6a093d6be4e of
msgid "A list of errors that were caught from failing the conversion."
msgstr ""

#: 9cfe57c2d101467d87400e0d145a2c08
#: discord.ext.commands.errors.BadLiteralArgument:24
#: discord.ext.commands.errors.BadUnionArgument:22 of
msgid "List[:class:`CommandError`]"
msgstr ""

#: d65d70b1132a4bbaa0c1c0e749f7278b
#: discord.ext.commands.errors.BadLiteralArgument:1 of
msgid ""
"Exception raised when a :data:`typing.Literal` converter fails for all "
"its associated values."
msgstr ""

#: 94ba1f40a50347beb65c73d6279c02d7
#: discord.ext.commands.errors.BadLiteralArgument:16 of
msgid "A tuple of values compared against in conversion, in order of failure."
msgstr ""

#: discord.ext.commands.errors.BadLiteralArgument:18
#: e563d171b653419bb5ebffa44618706e of
msgid "Tuple[Any, ``...``]"
msgstr ""

#: 4accdd8a5de0454d836bcb7a601d2249
#: discord.ext.commands.errors.PrivateMessageOnly:1 of
msgid ""
"Exception raised when an operation does not work outside of private "
"message contexts."
msgstr ""

#: dbb9cfa723ce4683a0356453833bc9c9
#: discord.ext.commands.errors.BotMissingAnyRole:4
#: discord.ext.commands.errors.BotMissingPermissions:4
#: discord.ext.commands.errors.BotMissingRole:3
#: discord.ext.commands.errors.MissingAnyRole:4
#: discord.ext.commands.errors.MissingPermissions:4
#: discord.ext.commands.errors.MissingRole:3
#: discord.ext.commands.errors.NoPrivateMessage:4
#: discord.ext.commands.errors.NotOwner:3
#: discord.ext.commands.errors.PrivateMessageOnly:4 of
msgid "This inherits from :exc:`CheckFailure`"
msgstr ""

#: 96608eb292b948cbac864b16f33f6e05
#: discord.ext.commands.errors.NoPrivateMessage:1 of
msgid ""
"Exception raised when an operation does not work in private message "
"contexts."
msgstr ""

#: 03237b06950349af8b5877c3b0865393 discord.ext.commands.errors.CheckFailure:1
#: of
msgid ""
"Exception raised when the predicates in :attr:`.Command.checks` have "
"failed."
msgstr ""

#: 21521951fe3645c599f43042bd74017f discord.ext.commands.errors.CheckFailure:3
#: discord.ext.commands.errors.CommandInvokeError:3
#: discord.ext.commands.errors.CommandOnCooldown:3
#: discord.ext.commands.errors.DisabledCommand:3 of
msgid "This inherits from :exc:`CommandError`"
msgstr ""

#: discord.ext.commands.errors.CheckAnyFailure:1
#: fdf4dcd227e148228e21d1948cb2676a of
msgid "Exception raised when all predicates in :func:`check_any` fail."
msgstr ""

#: discord.ext.commands.errors.CheckAnyFailure:3
#: discord.ext.commands.errors.NSFWChannelRequired:3
#: e51c110bd8cb4f13b2f0dc5eb781134e of
msgid "This inherits from :exc:`CheckFailure`."
msgstr ""

#: 4ff5239ba6b048c492f5196098784413
#: discord.ext.commands.errors.CheckAnyFailure:9 of
msgid "A list of errors that were caught during execution."
msgstr ""

#: discord.ext.commands.errors.CheckAnyFailure:11
#: e6eef43806f64b449d040306cc418c6c of
msgid "List[:class:`CheckFailure`]"
msgstr ""

#: 72280e5b7a9247358710cf411d55e66f
#: discord.ext.commands.errors.CheckAnyFailure:15 of
msgid "A list of check predicates that failed."
msgstr ""

#: 9c95362945e54d249dfb1f53c01df57a
#: discord.ext.commands.errors.CheckAnyFailure:17 of
msgid "List[Callable[[:class:`Context`], :class:`bool`]]"
msgstr ""

#: 6d3a08a8839845fca30e84b8a4b306e2
#: discord.ext.commands.errors.CommandNotFound:1 of
msgid ""
"Exception raised when a command is attempted to be invoked but no command"
" under that name is found."
msgstr ""

#: 4e2fbed34f904d2f803049cdfda27e2a
#: discord.ext.commands.errors.CommandNotFound:4 of
msgid ""
"This is not raised for invalid subcommands, rather just the initial main "
"command that is attempted to be invoked."
msgstr ""

#: 9f86073a221845eea8f7c391b8bdde72
#: discord.ext.commands.errors.DisabledCommand:1 of
msgid "Exception raised when the command being invoked is disabled."
msgstr ""

#: 7075cb5d93a942a884908449fe8754c4
#: discord.ext.commands.errors.CommandInvokeError:1 of
msgid "Exception raised when the command being invoked raised an exception."
msgstr ""

#: 52d12ffa6eeb41e2880bed34a9b4bbce
#: discord.ext.commands.errors.TooManyArguments:1 of
msgid ""
"Exception raised when the command was passed too many arguments and its "
":attr:`.Command.ignore_extra` attribute was not set to ``True``."
msgstr ""

#: 7eed2c49b4da49a0b1895c22914b4e6c
#: discord.ext.commands.errors.UserInputError:1 of
msgid ""
"The base exception type for errors that involve errors regarding user "
"input."
msgstr ""

#: 7e037c297ba143e4805430b144f46bbb
#: discord.ext.commands.errors.CommandOnCooldown:1 of
msgid "Exception raised when the command being invoked is on cooldown."
msgstr ""

#: discord.ext.commands.errors.CommandOnCooldown:7
#: ee6083fa81ee4a83874d43c623041852 of
msgid ""
"A class with attributes ``rate`` and ``per`` similar to the "
":func:`.cooldown` decorator."
msgstr ""

#: 2fd7d25d75794561a8a2d78143ec44fa
#: discord.ext.commands.errors.CommandOnCooldown:10 of
msgid ":class:`.Cooldown`"
msgstr ""

#: 9fc0412e234440a194944d2b45b92fe2
#: discord.ext.commands.errors.CommandOnCooldown:14 of
msgid "The type associated with the cooldown."
msgstr ""

#: 3cb421159c314fb4adf5e168945317ab
#: discord.ext.commands.errors.CommandOnCooldown:16 of
msgid ":class:`BucketType`"
msgstr ""

#: 8d2ea9a9b813410eac680f92f1b344f6
#: discord.ext.commands.errors.CommandOnCooldown:20 of
msgid "The amount of seconds to wait before you can retry again."
msgstr ""

#: discord.ext.commands.errors.MaxConcurrencyReached:1
#: ec430b1c0a9549cfad0cdde9485394d1 of
msgid ""
"Exception raised when the command being invoked has reached its maximum "
"concurrency."
msgstr ""

#: discord.ext.commands.errors.MaxConcurrencyReached:7
#: f686fa32c5764e62b8b8bd10fc099503 of
msgid "The maximum number of concurrent invokers allowed."
msgstr ""

#: 6410e5d4f966442db39c50132e842e6c
#: discord.ext.commands.errors.MaxConcurrencyReached:13 of
msgid "The bucket type passed to the :func:`.max_concurrency` decorator."
msgstr ""

#: 8adb54bbebb74a19816d333471507599
#: discord.ext.commands.errors.MaxConcurrencyReached:15 of
msgid ":class:`.BucketType`"
msgstr ""

#: ca0fc435abf24248bb4790c352b24822 discord.ext.commands.errors.NotOwner:1 of
msgid "Exception raised when the message author is not the owner of the bot."
msgstr ""

#: c9e4459728ac4cc6a27b56a6defdcf14
#: discord.ext.commands.errors.MessageNotFound:1 of
msgid "Exception raised when the message provided was not found in the channel."
msgstr ""

#: cafbbd3a5904470cbe7817bdf3a418bf
#: discord.ext.commands.errors.BadBoolArgument:3
#: discord.ext.commands.errors.BadColourArgument:3
#: discord.ext.commands.errors.BadInviteArgument:3
#: discord.ext.commands.errors.ChannelNotFound:3
#: discord.ext.commands.errors.ChannelNotReadable:4
#: discord.ext.commands.errors.EmojiNotFound:3
#: discord.ext.commands.errors.GuildNotFound:3
#: discord.ext.commands.errors.GuildStickerNotFound:3
#: discord.ext.commands.errors.MemberNotFound:4
#: discord.ext.commands.errors.MessageNotFound:3
#: discord.ext.commands.errors.PartialEmojiConversionFailure:4
#: discord.ext.commands.errors.RoleNotFound:3
#: discord.ext.commands.errors.ThreadNotFound:3
#: discord.ext.commands.errors.UserNotFound:4 of
msgid "This inherits from :exc:`BadArgument`"
msgstr ""

#: 919b214d6e7b45fca37e039161972510
#: discord.ext.commands.errors.MessageNotFound:9 of
msgid "The message supplied by the caller that was not found"
msgstr ""

#: 53aa71c340174d789b45ad3fd9260c8d
#: discord.ext.commands.errors.MemberNotFound:1 of
msgid ""
"Exception raised when the member provided was not found in the bot's "
"cache."
msgstr ""

#: 7bb3f96e98cb461d8a0c7ce08b497005
#: discord.ext.commands.errors.MemberNotFound:10 of
msgid "The member supplied by the caller that was not found"
msgstr ""

#: discord.ext.commands.errors.GuildNotFound:1 ea7ce6eabe934c1fad2a3c1988cebefa
#: of
msgid "Exception raised when the guild provided was not found in the bot's cache."
msgstr ""

#: 01925b74dade4730a5bcefbfa11d69dd discord.ext.commands.errors.GuildNotFound:9
#: of
msgid "The guild supplied by the called that was not found"
msgstr ""

#: c7c19e3d8c6c4893b5f8b6e9867b16f5 discord.ext.commands.errors.UserNotFound:1
#: of
msgid "Exception raised when the user provided was not found in the bot's cache."
msgstr ""

#: 0f431bc819e74530801b87d339ec4ada discord.ext.commands.errors.UserNotFound:10
#: of
msgid "The user supplied by the caller that was not found"
msgstr ""

#: discord.ext.commands.errors.ChannelNotFound:1
#: f6b591356c80408192207ebfbb8ebfe1 of
msgid "Exception raised when the bot can not find the channel."
msgstr ""

#: 5921dca926fc477e9a91b1d7696c508f
#: discord.ext.commands.errors.ChannelNotFound:9 of
msgid "The channel supplied by the caller that was not found"
msgstr ""

#: 9fa4e65ac9814e07b00cfd524eeca282
#: discord.ext.commands.errors.ChannelNotReadable:1 of
msgid ""
"Exception raised when the bot does not have permission to read messages "
"in the channel."
msgstr ""

#: a38283be5eb8407680d6eb16d0fee127
#: discord.ext.commands.errors.ChannelNotReadable:10 of
msgid "The channel supplied by the caller that was not readable"
msgstr ""

#: 36582766bdc1404fba01c7e34a7d291e
#: discord.ext.commands.errors.ChannelNotReadable:12 of
msgid "Union[:class:`.abc.GuildChannel`, :class:`.Thread`]"
msgstr ""

#: 43052fa171924f6998cf30a4408d2d3c
#: discord.ext.commands.errors.ThreadNotFound:1 of
msgid "Exception raised when the bot can not find the thread."
msgstr ""

#: 1dea63fd1bb84e059219eae7f81fd40d
#: discord.ext.commands.errors.ThreadNotFound:9 of
msgid "The thread supplied by the caller that was not found"
msgstr ""

#: 05e8d50caba64b2184fbf03a21b366f9
#: discord.ext.commands.errors.BadColourArgument:1 of
msgid "Exception raised when the colour is not valid."
msgstr ""

#: 66b2891f3b2f48619d3d939bc9bcee37
#: discord.ext.commands.errors.BadColourArgument:9 of
msgid "The colour supplied by the caller that was not valid"
msgstr ""

#: discord.ext.commands.errors.RoleNotFound:1 ed0be8e86e444e4e8c850511fc8e48c5
#: of
msgid "Exception raised when the bot can not find the role."
msgstr ""

#: 11a097db73c2490497cb7b7429cb7d40 discord.ext.commands.errors.RoleNotFound:9
#: of
msgid "The role supplied by the caller that was not found"
msgstr ""

#: cd6ec6e8aa3345b5968634efb9fdbfb6
#: discord.ext.commands.errors.BadInviteArgument:1 of
msgid "Exception raised when the invite is invalid or expired."
msgstr ""

#: dbfafb99d9924e058e9f4085e51b4e85 discord.ext.commands.errors.EmojiNotFound:1
#: of
msgid "Exception raised when the bot can not find the emoji."
msgstr ""

#: 79c87d5b8880428daee4e62770468475 discord.ext.commands.errors.EmojiNotFound:9
#: of
msgid "The emoji supplied by the caller that was not found"
msgstr ""

#: af44f3e759ca46c0ae4b639c71e28277
#: discord.ext.commands.errors.PartialEmojiConversionFailure:1 of
msgid ""
"Exception raised when the emoji provided does not match the correct "
"format."
msgstr ""

#: 6c1c2df0327a441bbe1c96a50ba39d49
#: discord.ext.commands.errors.PartialEmojiConversionFailure:10 of
msgid "The emoji supplied by the caller that did not match the regex"
msgstr ""

#: discord.ext.commands.errors.GuildStickerNotFound:1
#: e43d76903cc749c78ccd3ca87300ebfa of
msgid "Exception raised when the bot can not find the sticker."
msgstr ""

#: cb6279d6304e4c069ce89ef37082f364
#: discord.ext.commands.errors.GuildStickerNotFound:9 of
msgid "The sticker supplied by the caller that was not found"
msgstr ""

#: a815b02a064846279adc4f121cc2b07f
#: discord.ext.commands.errors.BadBoolArgument:1 of
msgid "Exception raised when a boolean argument was not convertible."
msgstr ""

#: 2982ea51ace646d8bd8c2fd76d7f9b7c
#: discord.ext.commands.errors.BadBoolArgument:9 of
msgid ""
"The boolean argument supplied by the caller that is not in the predefined"
" list"
msgstr ""

#: discord.ext.commands.errors.MissingPermissions:1
#: f7c1e866271f4a6284aee4c6711c27d7 of
msgid ""
"Exception raised when the command invoker lacks permissions to run a "
"command."
msgstr ""

#: 5ada78a870114789b2525dfb7258f469
#: discord.ext.commands.errors.BotMissingPermissions:8
#: discord.ext.commands.errors.MissingPermissions:8 of
msgid "The required permissions that are missing."
msgstr ""

#: 17bbff2318d343aab6e8abf37d823b00
#: discord.ext.commands.errors.BotMissingPermissions:1 of
msgid "Exception raised when the bot's member lacks permissions to run a command."
msgstr ""

#: 69a44f4ec8e946ff86107a955100b0dc discord.ext.commands.errors.MissingRole:1
#: of
msgid "Exception raised when the command invoker lacks a role to run a command."
msgstr ""

#: 464aff7b7d6d4edab7c5c9f1d4b1390e
#: discord.ext.commands.errors.BotMissingRole:9
#: discord.ext.commands.errors.MissingRole:9 of
msgid ""
"The required role that is missing. This is the parameter passed to "
":func:`~.commands.has_role`."
msgstr ""

#: 495f17f5f821498f8c20b5437e881ce8
#: discord.ext.commands.errors.BotMissingRole:12
#: discord.ext.commands.errors.MissingRole:12 of
msgid "Union[:class:`str`, :class:`int`]"
msgstr ""

#: discord.ext.commands.errors.BotMissingRole:1
#: ea6884c4574d42039894bd8eda813eeb of
msgid "Exception raised when the bot's member lacks a role to run a command."
msgstr ""

#: b51a7d82c7ae471c9e0927f161646b60
#: discord.ext.commands.errors.MissingAnyRole:1 of
msgid ""
"Exception raised when the command invoker lacks any of the roles "
"specified to run a command."
msgstr ""

#: bb3b944232324fe987d73d6df70499d0
#: discord.ext.commands.errors.MissingAnyRole:10 of
msgid ""
"The roles that the invoker is missing. These are the parameters passed to"
" :func:`~.commands.has_any_role`."
msgstr ""

#: 4800e7486dea463f9b780669f880aaee
#: discord.ext.commands.errors.BotMissingAnyRole:13
#: discord.ext.commands.errors.MissingAnyRole:13 of
msgid "List[Union[:class:`str`, :class:`int`]]"
msgstr ""

#: 91d8c29682f5470aaaa17fdd9e54ab7c
#: discord.ext.commands.errors.BotMissingAnyRole:1 of
msgid ""
"Exception raised when the bot's member lacks any of the roles specified "
"to run a command."
msgstr ""

#: 03dff160785045fdafd78a2d6dc2ec69
#: discord.ext.commands.errors.BotMissingAnyRole:10 of
msgid ""
"The roles that the bot's member is missing. These are the parameters "
"passed to :func:`~.commands.has_any_role`."
msgstr ""

#: cdd99306574d42fbbdca211e043eb448
#: discord.ext.commands.errors.NSFWChannelRequired:1 of
msgid "Exception raised when a channel does not have the required NSFW setting."
msgstr ""

#: 03481b87678a41ab8f534266523f04e3
#: discord.ext.commands.errors.NSFWChannelRequired:8 of
msgid "The channel that does not have NSFW enabled."
msgstr ""

#: 397619a293eb4871a61c96cf18d8966c discord.ext.commands.errors.FlagError:1 of
msgid "The base exception type for all flag parsing related errors."
msgstr ""

#: 4df1966bd2224d8097e05de8614e0ae1 discord.ext.commands.errors.FlagError:3 of
msgid "This inherits from :exc:`BadArgument`."
msgstr ""

#: ad1d800328234006bb717f17aaabd02d
#: discord.ext.commands.errors.BadFlagArgument:1 of
msgid "An exception raised when a flag failed to convert a value."
msgstr ""

#: 91798d8c295b4e5a95ae65bc3717c132
#: discord.ext.commands.errors.BadFlagArgument:3
#: discord.ext.commands.errors.MissingFlagArgument:3
#: discord.ext.commands.errors.MissingRequiredFlag:3 of
msgid "This inherits from :exc:`FlagError`"
msgstr ""

#: 3169dff1f74241f4b187f32057eee70a
#: discord.ext.commands.errors.BadFlagArgument:9 of
msgid "The flag that failed to convert."
msgstr ""

#: 53f5b703a1754889b6501bc0bb13587d
#: discord.ext.commands.errors.BadFlagArgument:11
#: discord.ext.commands.errors.MissingFlagArgument:11
#: discord.ext.commands.errors.MissingRequiredFlag:11
#: discord.ext.commands.errors.TooManyFlags:11 of
msgid ":class:`~discord.ext.commands.Flag`"
msgstr ""

#: b2fb965c7465456f99ebd4e00ac3e6b8
#: discord.ext.commands.errors.MissingFlagArgument:1 of
msgid "An exception raised when a flag did not get a value."
msgstr ""

#: 51f3abb37a5e4994ba35116283b2a5b8
#: discord.ext.commands.errors.MissingFlagArgument:9 of
msgid "The flag that did not get a value."
msgstr ""

#: 41386efb30914b5190300d75a9841355 discord.ext.commands.errors.TooManyFlags:1
#: of
msgid "An exception raised when a flag has received too many values."
msgstr ""

#: 81da839939ae4de9ac168277a8d393b3 discord.ext.commands.errors.TooManyFlags:3
#: of
msgid "This inherits from :exc:`FlagError`."
msgstr ""

#: 22360e7ef17a43adafe941a0a99e9cea discord.ext.commands.errors.TooManyFlags:9
#: of
msgid "The flag that received too many values."
msgstr ""

#: 523b4c7b89a04e638cbca478a4086147 discord.ext.commands.errors.TooManyFlags:15
#: of
msgid "The values that were passed."
msgstr ""

#: 8ecebd5789744f5eb9e9fb41f2de3718
#: discord.ext.commands.errors.MissingRequiredFlag:1 of
msgid "An exception raised when a required flag was not given."
msgstr ""

#: 7eb7e6f4248e4600b9881f494de33f37
#: discord.ext.commands.errors.MissingRequiredFlag:9 of
msgid "The required flag that was not found."
msgstr ""

#: 33517164ec0241ad90d22b66b1bb6681
#: discord.ext.commands.errors.CommandRegistrationError:1 of
msgid ""
"An exception raised when the command can't be added because the name is "
"already taken by a different command."
msgstr ""

#: discord.ext.commands.errors.CommandRegistrationError:4
#: f911fded08e14082a434d5415f49a0dc of
msgid "This inherits from :exc:`discord.ClientException`"
msgstr ""

#: 944edaa1770a49f09cb67186b72b3a46
#: discord.ext.commands.errors.CommandRegistrationError:10 of
msgid "The command name that had the error."
msgstr ""

#: c786264a69f741c6abc2b1c87a4bc9e7
#: discord.ext.commands.errors.CommandRegistrationError:16 of
msgid "Whether the name that conflicts is an alias of the command we try to add."
msgstr ""

#: ../../ext/commands/api.rst:602 6437c792279b485bbe8d09df28d18259
msgid "Exception Hierarchy"
msgstr ""

#: ../../ext/commands/api.rst:606 6ccb8ffddb0e484bb2823ab2ad38df23
msgid ":exc:`~.DiscordException`"
msgstr ""

#: ../../ext/commands/api.rst:607 cd13764d1d8e432d8b1e3d0814e8d01b
msgid ":exc:`~.commands.CommandError`"
msgstr ""

#: ../../ext/commands/api.rst:608 74dd05d87e664d6d95e7431e0ee657a2
msgid ":exc:`~.commands.ConversionError`"
msgstr ""

#: ../../ext/commands/api.rst:609 cbd5441518e842c8996b1af7e7cf5866
msgid ":exc:`~.commands.UserInputError`"
msgstr ""

#: ../../ext/commands/api.rst:610 c4e241c2d65c47c081ffdb98d83bbdb9
msgid ":exc:`~.commands.MissingRequiredArgument`"
msgstr ""

#: ../../ext/commands/api.rst:611 549d8f93ab4d49b2be2af635f5b5ded4
msgid ":exc:`~.commands.TooManyArguments`"
msgstr ""

#: ../../ext/commands/api.rst:612 34fa2ca053544615886a62a4fb15cf9e
msgid ":exc:`~.commands.BadArgument`"
msgstr ""

#: ../../ext/commands/api.rst:613 ebd1c85ac0d74fc3911f70d08f47aee6
msgid ":exc:`~.commands.MessageNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:614 8be5ab33fc4d4805b9734dd6928d9f94
msgid ":exc:`~.commands.MemberNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:615 e06c986c07094e5f9040701bd22424c3
msgid ":exc:`~.commands.GuildNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:616 3412788dfaee4dfdb7576009a8022e55
msgid ":exc:`~.commands.UserNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:617 7c3e338f517048f490ef9d7352a5816b
msgid ":exc:`~.commands.ChannelNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:618 69dbf7468138443090ca532bdab29342
msgid ":exc:`~.commands.ChannelNotReadable`"
msgstr ""

#: ../../ext/commands/api.rst:619 9c632c188fe549fab83e69867e4cf5dc
msgid ":exc:`~.commands.BadColourArgument`"
msgstr ""

#: ../../ext/commands/api.rst:620 1a5d869d53b249ee83a6a9608181feed
msgid ":exc:`~.commands.RoleNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:621 0e23b8b1753a47ad914a2f634f6c5a75
msgid ":exc:`~.commands.BadInviteArgument`"
msgstr ""

#: ../../ext/commands/api.rst:622 babc7a4834054c0f9eb01b4b1d64f977
msgid ":exc:`~.commands.EmojiNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:623 ba36f4798dc34d64909d605b8a5e4453
msgid ":exc:`~.commands.GuildStickerNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:624 63a02aeefdfb490780e73b6dd9505648
msgid ":exc:`~.commands.PartialEmojiConversionFailure`"
msgstr ""

#: ../../ext/commands/api.rst:625 97151bf22296452995480b2439c01b71
msgid ":exc:`~.commands.BadBoolArgument`"
msgstr ""

#: ../../ext/commands/api.rst:626 6d98af8c8f5c4c40a636637cd679c60c
msgid ":exc:`~.commands.ThreadNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:627 ff88bf5dee89418ab1bde698b5775a02
msgid ":exc:`~.commands.FlagError`"
msgstr ""

#: ../../ext/commands/api.rst:628 4b6702835e9b4ff1bcf15e4941476819
msgid ":exc:`~.commands.BadFlagArgument`"
msgstr ""

#: ../../ext/commands/api.rst:629 d7c035251022468babb19b341ea436d7
msgid ":exc:`~.commands.MissingFlagArgument`"
msgstr ""

#: ../../ext/commands/api.rst:630 575fc9981e8c4eb2910b06750b0fe36b
msgid ":exc:`~.commands.TooManyFlags`"
msgstr ""

#: ../../ext/commands/api.rst:631 b2cce1d15e71410daf628c5a6949389b
msgid ":exc:`~.commands.MissingRequiredFlag`"
msgstr ""

#: ../../ext/commands/api.rst:632 df0b5dadeb2d44b081075aa573d01645
msgid ":exc:`~.commands.BadUnionArgument`"
msgstr ""

#: ../../ext/commands/api.rst:633 40e1173bc57148c28a96e7f0c80d4d4b
msgid ":exc:`~.commands.BadLiteralArgument`"
msgstr ""

#: ../../ext/commands/api.rst:634 1e2d26f63bb043598bc4fa594a8ed65a
msgid ":exc:`~.commands.ArgumentParsingError`"
msgstr ""

#: ../../ext/commands/api.rst:635 0656fa3277af4737ac155d5dc3703193
msgid ":exc:`~.commands.UnexpectedQuoteError`"
msgstr ""

#: ../../ext/commands/api.rst:636 89c3c6a87e704b4c841cb49e5cafa5a8
msgid ":exc:`~.commands.InvalidEndOfQuotedStringError`"
msgstr ""

#: ../../ext/commands/api.rst:637 cd335c6f525a4e138f33c86be1ad5095
msgid ":exc:`~.commands.ExpectedClosingQuoteError`"
msgstr ""

#: ../../ext/commands/api.rst:638 a55562b662b14287a9e30435a4f8c089
msgid ":exc:`~.commands.CommandNotFound`"
msgstr ""

#: ../../ext/commands/api.rst:639 ee6a30f21bcb4f52a759629ba49d364e
msgid ":exc:`~.commands.CheckFailure`"
msgstr ""

#: ../../ext/commands/api.rst:640 e14ded2b37b246ef958773e93c8ea54d
msgid ":exc:`~.commands.CheckAnyFailure`"
msgstr ""

#: ../../ext/commands/api.rst:641 73f3258338c7444bbabffe3ce0af02a7
msgid ":exc:`~.commands.PrivateMessageOnly`"
msgstr ""

#: ../../ext/commands/api.rst:642 13a9d422fc834b23b13c7bf1b953553c
msgid ":exc:`~.commands.NoPrivateMessage`"
msgstr ""

#: ../../ext/commands/api.rst:643 4f5ddbcf5b784ba1839dd46e27544112
msgid ":exc:`~.commands.NotOwner`"
msgstr ""

#: ../../ext/commands/api.rst:644 79464ba408914e209155f9a2243560f7
msgid ":exc:`~.commands.MissingPermissions`"
msgstr ""

#: ../../ext/commands/api.rst:645 c8f7675df7144f5b87ea91e17c7150d3
msgid ":exc:`~.commands.BotMissingPermissions`"
msgstr ""

#: ../../ext/commands/api.rst:646 59945fa448824e41ac8f29db56a05d04
msgid ":exc:`~.commands.MissingRole`"
msgstr ""

#: ../../ext/commands/api.rst:647 0d9c0b55f5da4d48a7004cce52e8da65
msgid ":exc:`~.commands.BotMissingRole`"
msgstr ""

#: ../../ext/commands/api.rst:648 8f8fc0b9b36d4cd5b9bfe96cab259c5a
msgid ":exc:`~.commands.MissingAnyRole`"
msgstr ""

#: ../../ext/commands/api.rst:649 31f9f0b532764958b15cd54bc163cfcd
msgid ":exc:`~.commands.BotMissingAnyRole`"
msgstr ""

#: ../../ext/commands/api.rst:650 cb8ef5fc8c4f408587530e3e3dcfd8eb
msgid ":exc:`~.commands.NSFWChannelRequired`"
msgstr ""

#: ../../ext/commands/api.rst:651 1b82bb11d2024000bcd5bdd37bec251e
msgid ":exc:`~.commands.DisabledCommand`"
msgstr ""

#: ../../ext/commands/api.rst:652 27d038f16ba1480eb3090e9ffdf4e253
msgid ":exc:`~.commands.CommandInvokeError`"
msgstr ""

#: ../../ext/commands/api.rst:653 f967b74af44a404586c877989e180bbd
msgid ":exc:`~.commands.CommandOnCooldown`"
msgstr ""

#: ../../ext/commands/api.rst:654 03326f2822f449699fb31a42b80628b5
msgid ":exc:`~.commands.MaxConcurrencyReached`"
msgstr ""

#: ../../ext/commands/api.rst:655 68e91270b3d54214bc9d6f05ae905658
msgid ":exc:`~.ClientException`"
msgstr ""

#: ../../ext/commands/api.rst:656 74f572dd584c4c7ead229a600acc880a
msgid ":exc:`~.commands.CommandRegistrationError`"
msgstr ""

