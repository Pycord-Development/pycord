# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2021, Rapptz & 2021-present, Pycord Development
# This file is distributed under the same license as the Pycord package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Pycord 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-10 02:50+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/clients.rst:4
#: 723ac37bda644d2181cb3df9c4c833f9
msgid "Client Objects"
msgstr ""

#: ../../api/clients.rst:7
#: f5a4ed36d6a84272acf23c5afab0c592
msgid "Bots"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:1
#: 8400a3a76ec1437498368512f2bcd8e6
msgid "Represents a discord bot."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:3
#: 5c56ee85934b4790b06f26caec909ed9
msgid "This class is a subclass of :class:`discord.Client` and as a result anything that you can do with a :class:`discord.Client` you can do with this bot."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:7
#: 241bd5c3a34e4392b8a6581c2767d0a3
msgid "This class also subclasses ``ApplicationCommandMixin`` to provide the functionality to manage commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:14
#: 76747a81bf1d4154946509eeddff1408
msgid "The content prefixed into the default help message."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.store_url:0
#: ../../../discord/bot.py:docstring of discord.bot.Bot:0
#: ../../../discord/client.py:docstring of discord.Client.store_url:0
#: ../../../discord/client.py:docstring of discord.client.Client:0
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:0
#: 560eb5d041474f8b93073a52bae970da
#: 5b8e12be2e2244f2b1f628987c52633e
#: 82dc8e078ca8440b98e99a943f7ad1ee
#: 5f2243a92d4c43f28cb1a2e4daf1c0c6
#: 4b9ecfa5eb284deeb0548250176a4191
#: 306f1e629eb74fb8897156f57deef766
#: 7d1a0d003e9a4f24bc90817b46fa956b
#: fda9202ed81f4662b3410aefa9fee419
#: bfad4152b6654d87b3506b23ca0ca1a8
#: eaa7f8f7e18945ea99556d3a0b40fed4
#: 8114137706544f19ad6b7667ab35fee6
msgid "type"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.store_url:5
#: ../../../discord/bot.py:docstring of discord.bot.Bot:16
#: ../../../discord/client.py:docstring of discord.Client.store_url:5
#: 4ba364e8ffa94975b363bbe62943da28
#: ba970c9790144df49b7b45acd8f64d8f
#: e1daef67201b414bb42b8069f7ec7194
msgid ":class:`str`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:20
#: f0a6d897b9a74825856b3ed0d0bdf075
msgid "The user ID that owns the bot. If this is not set and is then queried via :meth:`.is_owner` then it is fetched automatically using :meth:`~.Bot.application_info`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:24
#: 28670aa78ebf4c3895e10886d6316c0e
msgid "Optional[:class:`int`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:28
#: dc016a35e8654b73b6546b2366030431
msgid "The user IDs that owns the bot. This is similar to :attr:`owner_id`. If this is not set and the application is team based, then it is fetched automatically using :meth:`~.Bot.application_info`. For performance reasons it is recommended to use a :class:`set` for the collection. You cannot set both ``owner_id`` and ``owner_ids``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:36
#: 7a7751b24b674cfeb944b5d46e42d6d6
msgid "Optional[Collection[:class:`int`]]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:40
#: 45a36a811f6a45e184e6cc9343cf8dc3
msgid "Guild IDs of guilds to use for testing commands. The bot will not create any global commands if debug guild IDs are passed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:45
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:25
#: 78e894745191469fb6df43ad5513b831
#: 8634aab7c85847109ab9f0cddc8753e7
msgid "Optional[List[:class:`int`]]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:49
#: c0b305ec45b44c44834fc2584f057881
msgid "Whether to automatically sync slash commands. This will call :meth:`~.Bot.sync_commands` in :func:`discord.on_connect`, and in :attr:`.process_application_commands` if the command is not found. Defaults to ``True``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:54
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.is_owner:18
#: b45762ac677e4ede8a83b12bd8bcedc0
#: 374d768efc3849968fe9c8d012de6b22
msgid ":class:`bool`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:58
#: c00ff4be197447e3964bbc0d13cb246b
msgid "The default context types that the bot will use for commands. Defaults to a set containing :attr:`InteractionContextType.guild`, :attr:`InteractionContextType.bot_dm`, and :attr:`InteractionContextType.private_channel`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:64
#: 1851a493f6f14c01ac9393ca67e53686
msgid "Collection[:class:`InteractionContextType`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:68
#: 55913631ea9743b8a11dd7c19978ef24
msgid "The default integration types that the bot will use for commands. Defaults to a set containing :attr:`IntegrationType.guild_install`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.Bot:73
#: 0f9f34c953de411c945a851f32bc0ec7
msgid "Collection[:class:`IntegrationType`]]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.command:1
#: ede0ee8579c24e949538216bce9a910e
msgid "An alias for :meth:`application_command`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.command:5
#: abc8f0b084cd401aacc2646108465bdc
msgid "This decorator is overridden by :class:`discord.ext.commands.Bot`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../api/clients.rst:0
#: ad2dc10d548c40968eb973127142a32b
#: cd605e7e5962488ab3e2441535990042
#: d26b63e1b0dd4241989d229e204c2df0
#: 3cb58a3abe1b42c1819b2852310d653a
#: 383b7b70518e4373a487cda57b5af7e9
#: 894ca1b95aa546fa989ebc8cdeba861f
#: 76dd9328c31b4a4f950ccd0e3951a95b
#: 50b3f627d64d43968598406f8a54b014
#: 96723fb434f94be5a857bec15ed52438
#: cd623e270a47436b8f61ff60505e83cf
#: 29c266428c724030856e400f0321170c
#: c846f5d2939f47388cb6d8ca7e75a1a5
#: c938d82420ef4100a294a971ae9ed880
#: fd85f38bdfd648178e90d9d7b75e359b
#: 59323c4d26924524b3f0a37f55605994
#: e9d1b7d02e6341219d94f03c85af5364
#: 8dcb3fd905cc4640a1d94643105dd392
#: b147c7c183114833a614aa7b243e3b87
#: e6969df24be54c1da77efc157913d736
#: e93403a910dc4626bba9fb32741c8826
#: 3157343eb8dc43c38f49f7485b6f3d24
#: 54efaf79f48a481191c6c2ef7a886625
#: 7a83a9a6026f4952ac18057feeedb044
#: a2a19ee71307460f80ae4578c4f898de
#: ec2f88c1b04a431b919f2c01623a7ceb
#: 6c5dd05f8355405694fbe5caef91d952
#: 7021a46711cf48be81a448cf99bcc300
#: a992274a962d49b3adbed01c08305bc3
#: 505eba02bdac40fa8c6939460ddea2db
#: ec75313d2fad433688bb875739cf6d7a
#: 1e50c06626664dd08e180ce2955084c0
#: 5673023f14b44b36bb7fac32b389ad45
#: 97550b4584b74d1e9783d96d7875f522
#: 7b275bcdc8824baf9d004fec6a402927
#: 7f1c51a5cc4c4c2796e15a859b6285db
#: 06c8b2622dd442c09e0031e5559ffed9
#: b9370b37d8e645559aa91ca09575bfb0
#: 6e4228b8637c4bbdb95f961ff728b5b9
#: acb479130c6c4c4fa24e3ac9a459b0b0
#: fcd4c918263c4ac38b6da29d9300e600
#: e5f8ffadc716437a9cd23f89854f5552
#: fd8c7252279e4d0e87cbdae1c51f4138
#: a07b10a2b17e4c239bc0aedc5812efb5
#: a2d866b2ea2e4c71a66f8ac6995548d1
#: 25d6527aa9924cb3a76aa4eafb2f4b7d
#: a9eae85fe0ae47e6820bb3c64a52847a
#: 927d4def3d134ab0964b4a75b65cfb45
#: b904b232086d4a538782517a0ed2f2c4
#: beb68282cac74211922acbd18f8f1518
#: ee953e8f018642689e6214524a6e81a7
#: 88e1862d242a4a25b71a9be0f312b398
#: d5bff679a6f44712a51a51efc1b52ec9
#: b2c46fc5cc974d7bbb26de75cab0fc44
#: 86f701ec5df341db9c16576c019a5adc
#: ab586c5a25de46ad95f31d7932fa193a
#: 7b36bf2fbe3b4ca09b2275fbfe911178
#: 732ea301d61e4e4eac4956b9863943df
#: 848439c75ed04f11ae69dfe536c0af84
#: 2f95791bad804502ab41d84e11174228
#: 4a550f3e39764ad191a79b792f96368d
#: 48751aba4f864130bdd3f4ae79529334
#: 717af0cacac54b2ab0c701da28608172
#: d442aa3704a24c1aa6a8222025029ac0
#: e05214ca95aa40a1a802f38701dfdfdb
#: 33fc961f8a614163a6dbf83c846b8426
#: 54c712e4666a427e89e123b963c0ff1d
#: aa170a708a2748799b64e1d6e92be480
#: 6707eb4053824ac7899660b3e5ec810d
#: 258fa6bd8ecf4bba9fc03f5881f90c62
#: e0f6f617681043f796f22dae5afb1682
#: 25c9ad0bb8bb4d6c801b600b90c22080
#: 37a5ce03d24b4b1abad9fbdd9e6b126b
#: 7ff5b03cbdea4d9bb79adaa7dad08d37
#: cdfa2d8bae6049e1b80a42885c189af7
#: 12de9b8c375340afa46f1fa6ed553cc2
msgid "Returns"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.application_command:6
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.command:9
#: 1dac05e697c7439aacc0f377b675f758
#: 3ac657fe5790429d993c8722d4db5e8d
msgid "A decorator that converts the provided method into an :class:`.ApplicationCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../api/clients.rst:0
#: b5a22ed2f79040b2a8deb95f91416849
#: d13af68c11444be193cc57060b9a1dd7
#: a135a1aad44744079848b59aa8959a9b
#: fef47654c88e403dad85dc4284b5a5ab
#: 554f6802f4174ca49a08c4f404762728
#: 49511cb9a7ad486a880ef83bf2b1b2e5
#: 6587a9a35be04d6ebd805391f1cfaeae
#: 679603f71c3842ceb9ab9301877e0a68
#: 755dcc201bf14875a0f66b9268ab8006
#: d70f77a306c44a01b87030581102cfb4
#: 80db389f7eb84893ab0b237312ef5b00
#: 5572b6fc69b947b6b4a38b5a3a0919fd
#: c08ffb6b169b4e5d9ea796330e158ba4
#: 94fb92d7017746558cdd49a5591ea65f
#: 065b24140ad64f89bb8aebb7cbaaab81
#: 1e47d1137dd948f7a4766ae5501226cd
#: ecaa6e582e60430db9758f5ad91318c7
#: 169835626ad247a4bcc302daabf74f2b
#: 00df3d9a2f42415fb50effb3dcc752e2
#: 804ec08a0674477f81206af58d000d7a
#: 87d6c1142b8d4e4f84dbc4462fa8af12
#: d01fd2e5a7ce4d7c8e3c738e2769c0b3
#: 6a5cda973d654ea292590a860372879c
#: 47506201077a4cf2a2d31c3225e7f066
#: 5dc7f8a955dc46239ce157d05489e188
#: 211c294473a74b80966d5142f36889f0
#: 655d0d4943ab4822aa21d4e4a750d74b
#: 3f756d9875684a0ebe2664b9ca14132a
#: b7ac4b96f8d2402ba0daae8c56c55910
#: ab9ba099fcf94cbb9bb79464abb21fa8
#: 30cedd7bc2524dcd8393358dc4220ba0
#: 8df350c04c424a6ba39097fe0b5f8a9c
#: 802bd62917a4494ba82f62bcf514d251
#: c813b855074d4004962e777b87bdb92b
#: 026a834fb831418abc59198052da3f3d
#: 9ea4f8399da44aaea81fb23e3636094a
#: ff2fb46d9b514c9db7c97625b6860b5f
#: c776ad51021d4b88a50e1e87662bf4a5
#: debdd6040ed54284b88a03af08565e89
#: a790a13a3b374ccfa6539df0da75ab14
#: af518dff3a924c3692ddb1727631c81a
#: 964fd3d72f8a4638a2cd1aa6eba8e90d
#: a39ed20e35f6497cbebf8dd51db83282
#: 0318902c412842688fcc7601eca20120
#: c242929a185d4df6bf8e611b2503ad35
#: 0b07ec28ffa74b5e943e3960efb05f46
#: 3c762db1c73744bf9263f420b2d0fd13
#: c8bff2129ef94c92b91c2684b455fb49
#: 16d43023a6a94a47b5b56f57af1febcd
#: a2c09b8f20574ab79a747329d3503ce3
#: 4460b1afe4114b72829010eb59eafd57
#: 102f02ec514e40c6a9abc6ea7cc5c0a9
#: 3f0de5426516441c99db34593b7e76bd
#: fdf1e9a2279d4eb58248039fe85a12b5
#: a36820dac60442efadd03945a9e6409c
#: 4d2be1ab62704a58b2282edcaba56fd6
#: 61f62503ff3d47988c9c3b73b4fd67a6
#: f627f1de504a4f858c9fc9c0bb7765b5
#: 8a4790df119448958f55375ae269bd91
#: da174cc48e5f42449dc0e38a760562d4
#: ab271bb8eaa64c84bfbf8fc4a5f04c85
#: ea9b5165364344309fd46a0b8964f658
#: 1879c2ee176041a0a33adfa857e07a65
#: b8b05edb8fd84b0186997f8774607629
#: 089db70b582e4143a51cd8bca63a5c70
#: 94216295287f411db45f9d97669c31e8
#: 01ccba7a53d3449a80fef398feca1744
#: 3d46b24131da4d71baa1a403351a13f2
#: 71a39f6f6b5f4081ba8f012baa01467c
#: c0a0a5aed8fc41da88cf79e8b6e25ff5
#: a3202959866146a0aff38d6c12f11dea
#: 07247ddef85646b09f31f869456d229e
#: 880c1f374e41407ba3b1835749059571
#: 5d764859d6374b26893675bd081a52a0
#: 840944f5f14845dc875b17a65737415d
#: d2d1ebd66a394386a1f2a9a9e67f8971
#: 9d1772a439e74c9e806e5f5bfeffcced
#: e61d862bd02448e98559cdc62cc79a80
#: a80bb9f4d5aa4efd8a8e32a143d1e2b8
#: 77716d47efb34628a3324f87821da31a
#: d05485c3b7814dd2895479ebf7aec378
#: 2f1e5b9cadcc4e6f8181348f30f18041
#: f70d2082f0cd41b787b6b74910715194
#: ffc6e8dfb789431a9e07b950d4425493
#: ec487369222e4fca9c3158f3caec9ae7
#: badba9b8478e49008827b8dd0498d9ff
#: c1f096be4fd2457681e9a05d99c4eaa0
#: 4c7f3a57f1bd4d358c1452f99a26112b
#: 7c160114763646f2911f5650769bcd44
#: 92509cd4a5ea48a1a8f3652933a1f50c
#: b01c77ea9fa3442f89076d81af2e4827
#: 924082c6d3a14e7a827ff7d41096fb7d
#: 27ce0d1faae44f67b52ec5fe02ef48d2
#: 99e552d6bb834842b984939e413e839e
#: 2fe16feb6e224953a79569ca72f083c9
#: f9b414072cad4a8f9d240e959829f272
#: a634831de2b64b5ea7cb0824b4f39c0d
#: 53d3e38998374a1490a28102fa247da7
#: de31d614a334434db6fca7659aef782c
#: 93cba6b90f3d4245aafe5267c0fef2bf
#: 169fa44fbc374bba9738a7092242bf8b
#: 3b5bd87be16b4e00babc89f6dedc7785
#: 1964b28d4c46484697f52e43a3640e3d
#: 5ce2894ffbb24f84aff58ca6067faaf2
#: cc1701003dd0416f8b21bec3209c1965
#: 2461fc8f93224b9794dd6a4847b7cdc0
#: 4b2a910c2b0e48f7b0f9c3611abea29b
#: 7b978275810c42b7a93ffd0f46feee19
#: 2d0d5d612d574fa49434ccc3468dafc5
#: ac213499d9e74ffaa375ead79237ba66
#: ee5cb234cfdc4f0bb3a94d07c4f9bf64
#: 20d9f3bca1dc429abf48d7006eae2851
#: da79c0cc44da4f92894bcf7811899442
#: 9ce4dbe4b3e6468f9559c0f3de5e8dca
#: f9418cdab1884f49bec18b5e6965b8b3
#: 696eee3339444aa98b26aa161f558fde
#: 24552246326b4d1da3a32f205594da36
#: dc7bc75b877a47b281112181bb3c4f1e
#: f658fc3d91514417a203b9c4121a102e
#: f99a5bcbe9664f2fb61550092dfe42a8
#: 709dc58325c146ad8a210ad694c05c1d
#: c82622e54cb648629112c8277e6ce928
#: 691cc94283994261acbbdb685d4648ff
#: aff4a87e8ab24e42a5821a9016ae8c94
#: 5c69e4444ff14950a6e51e17df0d96a7
#: 661ae464da8e493ebd3265ad9d14cc99
#: 1a8107f2039d4b3fb87bf64434d68d29
#: e28d011acf07437186d5b7f5fdf2c47e
#: 1e41f7ff1200408c98627ca6b0970045
#: 13e6658a246543729d4837668974417c
#: 9612293b8f1e424cb1ae7b35279d676e
#: 606afb97d6624f858e67593ee96461ba
#: be8a500b69c2437a9e6f654900273468
#: 0bc17ef066fa4ac1bdf2f2626d59f721
#: 7bfcc2a229054ab7bffff34c8c11146a
msgid "Return type"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.application_command:8
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.command:11
#: 345ed55a66c44c4983a66090789aecc8
#: 474ab42ae6e948239450d90239bdcbf9
msgid "Callable[..., :class:`ApplicationCommand`]"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:1
#: 441663afc2e74b37a0ddd0c6805b8773
#: 35cfe3da5dfe44d2995bf87aeb1a214e
msgid "A decorator that registers an event to listen to."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:3
#: c6dc5e087bec4eac9b921c9a20528fad
#: 7d5f8e58c1464f75826c12241640cae5
msgid "You can find more info about the events on the :ref:`documentation below <discord-api-events>`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:5
#: b90fa4213ca24bf38c3510fa7c307036
#: 58aa1c39e6954e56ba22f92148d0d097
msgid "The events must be a :ref:`coroutine <coroutine>`, if not, :exc:`TypeError` is raised."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:9
#: e29528c36b9b4f09937e3c217970dacc
#: c1c2cb3ef1b0421ab29258750cf15303
msgid "This replaces any default handlers. Developers are encouraged to use :py:meth:`~discord.Client.listen` for adding additional handlers instead of :py:meth:`~discord.Client.event` unless default method replacement is intended."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../api/clients.rst:0
#: be57f62d640d498db3acc576e8c69090
#: 853e4bafa2c8478789b84f073f328614
#: ad56de6ed3ee40d4b537dfd9f8bcc2c4
#: 6ab72d7126304941a2843cd3f79e15bc
#: 4727e7dbff374a62b8a56c79dc66082d
#: 6dcc2de71d1343bc93b3f0bca6661072
#: f7d3143efeea400d85cc0fcf45b1e15b
#: 3888f66b0d7d4eb7bfc805f9807a41d7
#: b4b22e18c1bf40269e3dcfbaec8aae03
#: efa73facdf57418f9086572e7be0917d
#: d365fec41ab64fd19b3077f49a1088a4
#: 9dddf4f4551d4eb09d25088e95eed7b5
#: 00e6bd39c7fa4184844b6f7e7afcc5ef
#: b897a699a6ae41eb83dee4e67d3b0f4a
#: e4def2a95d484a9584fa73e8d26c4d1b
#: 93af98486bf7445e9912df5e0da0b0ea
#: 6c9daf6bb4464e6cbc2c184b3ccea998
#: 0a5f7aa535f24ca794e3c8734d4caf5f
#: 5333ac2171494bb08f73a1fad01039bf
#: cab1be0a9d7a4ab18612dc4bdf535020
#: 378fed9230884b5e9680753fe70c3989
#: 51511a34fb6745aab1ca324ba180e340
#: 5dedee9ffe954a98b442886bf9d3ad82
#: 2bb0d55c9f1e4b3489bd47b620ca3883
#: e83bdfd3d60a4138a597146189b7446c
#: 2666501d112943b8b6641e0ee36d76ed
#: 2dedf3a6f1dc49659f49c24c160668c1
#: 030c800da6fe4125a6793dac77090d13
#: 464d20a47b214cafad7bb287a9170959
#: 0a10d9431b554d73a537dfd8562a4c2a
#: 7a001b252eae49a9bb203933c0f86d61
#: bef5a653ffcb49058581e91179132959
#: a4b77c72d7304faf95f607d29c420265
#: 682b417abdc24a17b5707893afe48ce7
#: bf0470379b8448ff913202bb3e5e482a
#: 672ac979dea24ee2967990b7c6876087
#: 6f7439d05fe74134a3cba76c45f1feb0
#: d2979170ff9a4e38a342022eee855ac7
#: 9792f6926b8c4136b9e0d9a88349b0fd
#: 327a1c7ff82245eda15614c4c6772fe2
#: b7b872c56d8549acab254047c73e59b4
#: dbced7c8cab84f3cb5d4868eb76f02be
#: 57317a5b8b1d41caa56327ef0b005efa
#: 0675e68d9cfb4f5484bd40cde18d62e8
#: 2da51d64fd8b41e184cea90ea5127bdb
#: 45404c1729cb4c77b240153091f44b39
#: 652a3602dcf643ad95baca0999d75a1d
#: 4780abb167544ca39f591e7e3ee7f177
#: 61167c3aa5714ab8bdf7e8d16f766c32
#: 0b882eea1eb24a4ba037ef4c661677ab
#: 5fe56a006d574708abe19ebbaf839261
#: 989cb3e7316f411684a2f2f71df57cee
#: 8d6f5f8a307743b08180ebbd41ad6a65
#: 923b691c5eda4326a0fe4609ae128330
#: 7a986e19f5234dbfa252d048b6caec32
#: 9a962e3cc5b446f19fe2060b94c3ef7c
#: 638c26c0971d460a88da17c4913716d7
#: ce67fd07db6c4cb2be8130214f54f17b
#: ee9588b74f8c4c8c853afcf7757ae542
msgid "Raises"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.after_invoke:19
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.before_invoke:18
#: ../../../discord/client.py:docstring of discord.client.Client.event:13
#: a11c6d8215d44d1b970f9f4eec435480
#: dac8224ddbd144bc80991d9f8509ae1b
#: abc0b29447334a61ab35f241b27c1a3b
#: baba393bb0ae49f19ceb10505a6118f6
msgid "The coroutine passed is not actually a coroutine."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.check:12
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.check_once:18
#: ../../../discord/bot.py:docstring of discord.client.Client.add_listener:15
#: ../../../discord/bot.py:docstring of discord.client.Client.change_presence:16
#: ../../../discord/client.py:docstring of discord.client.Client.add_listener:15
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:16
#: ../../../discord/client.py:docstring of discord.client.Client.event:16
#: ../../../discord/client.py:docstring of discord.client.Client.listen:11
#: 40c782af18fa4b6d95ff04ed328711de
#: 4b54c577282844ab83de80cfe4c6af2e
#: 24b2a7241cb049de8a09e3130bf59982
#: 8afe70b1dc3e415bbcb3587ae113f646
#: ba886c1958ae47468695dc36cd20fa30
#: 833994483f0d48bcb79e761846317133
#: 2d6af0e10e374eb2848aaf6af07794ca
#: f7de44b1ef2a4b67a251df6e6af58ff3
#: a3b23a83636e4ff0884ee5aa3fa28ef8
#: b9d54dd7bf244706a4965777dc689eab
msgid "Example"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../api/clients.rst:0
#: 197545f9c6ed4c5da3e235134e4fe25a
#: 3200a85e4002416db55ed3790af21f4e
#: ff5108bb0b184c7082382a51ee4ba248
#: 17352eb8d90a471c86796deec5f40361
#: 3a0cbb5f03924ae4b02a402fe8156523
#: 3c6cba4ba69e43249df187fcaeb5f207
#: 8bf1ef24b9714c1c8e0436865b442e9a
#: a03bb4ec204c4867b740eb2c4bc3d398
#: f706cf333c1a47f1a2976aa784a20ba9
#: 0a0a385dda714190bf496404866e2af0
#: db76e6d208474bfc84b77836563a197a
#: 1c0e015c47964f358c1c5adc8047b7c2
#: 53782ddd4eb34037ad076fa1e2cdfa2e
#: c0bb632d73734973a0c9803a773856c4
#: 76ebe78f49d5406b8bcff947b1188cda
#: b9c75f273aa84490bb67b9aacb293eb7
#: d374bb7d88ff4ad88004319adbe16e45
#: da55697a42454226914e63e848802002
#: d569963daf604dc0929b2cc260f6e425
#: 27e559c2588446bfb64518202432bf28
#: 340efc183485425687d5238c1b4e8ee3
#: f95bc5d223ff4f8ead1fe5ba86b4fd3a
#: cc185377777045ed8cae6a6f8d16080f
#: 566abd84b14f427a9dbe20726cd99445
#: 029cc544048741f8a32c92d8ea711013
#: 1995e834bfa04ce98aa43f02bd2745a4
#: 9fd02f2306464787b89f67ed08c49f2a
#: cab4484c55b54eacba7c50e15f403e73
#: 99d7d45c973e4cab836405c222bbdf74
#: 6f62c3e4126e4f1d9ac1632fc0c3171a
#: ffedb47fd77f4ebdb1c99090a0b02e34
#: 27f71253914a40edba4d77094cfe7dec
#: e9ead5736af7495ba221a2d1992672cd
#: 12749535ff49481182da2a2ec34b9cbf
#: da97a67fe9994fe0b94255df49a75ed4
#: 3a1fbb9de2374039a8ff52fcf12e996a
#: a438a50bf66a4cfaa5e55132f98f73e4
#: af2aec7258344ad9821d8c9c8259d262
#: 31e5a0f0b18c4af7a2cc48e41e074ee7
#: 38874805f6fd45a883ba429c2a56ad94
#: d88e8f9f91bb4bde8abccb335b2cde80
#: 8e8c5f82562e4f3b9c1d49482ad89eb3
#: 47a5091f766b451ba33af11fc227084d
#: 42ff24e5f86b4c29b20eeed05c9650e4
#: 6df14924c0eb46a58ee315215fba3920
#: 432763572a054d7bb7fb8230f90cc48b
#: 6fd754899db947a4b47f1b9b7ecd8ee0
#: 433ff478012f400db72e7311e175e2a3
#: 3edf86adf5184a6db314e6d2839705ee
#: 46267cc2cb3d486c80898b630547f2b3
#: 16286c4e9d50448e8d3cccff73312869
#: f5ba6997cc1b4f94bde267310393f0fe
#: 4131e1a412cc4ae1829327f279db52b2
#: 1a8e598de55d4d8fb95493a9a7d5cdfa
#: adbb7a12e2be46b684ccaf3937f59030
#: 126bab5d28df4076945e353f8cc66265
#: 4d185c8addc74c73953c4d8cdb7a5b85
#: 635d299c487c4fd09e46c7ea8bebecb1
#: b310b635f7104b079d66c699e5b1670d
#: b09e7584c7924b8c878f3b38d8698fbe
#: d014102ef5c04d42b619ab47b561aa7b
#: 5c7bc37965884f06a01efded890a005c
#: f2d022183498401eb01e39e25ae37983
#: 886abef879ea43abaa6d54261cfb65db
#: 6e64558dbd6343cf82de7adaf453c3ee
#: 3b144b522d85406fa87597b741bc92e6
#: c5cebf3e015c41fbaeb471c479f80940
#: 0b2c8ae345374cd5ad92cb2d7c3e4c23
#: 61bdd2138a7145e49fcfbb06c5819cdc
#: f99bb94969c84b0f99d1d3c39e0713e9
#: c07496ecf5294daf943152162082dc9b
#: 944756aa81e34907af880c9ea3ddd943
#: 147cca0786d54eb69d945b63207b3745
#: 766edd8512fe4da1b373f69daada2d18
#: ec1a4eac600947e687e4425c1282b47c
#: f4a8c85f5dc64e909e5a91702c370f9f
#: 46c0ae7b19ec48b0a912ca69c5aadacd
#: 989285389886409c8f586c58b6fe0289
#: d2d62c9970654ee69a7e17de1eb2bbf9
#: f8266b4b91944b22bae1eac1a3158267
#: fedcb4d1a60a4c289e4ce817db897b82
#: 5ebd23eef5514c248000d3ffc204f705
#: f9d0fca45ae84f75bab0aba914ab1748
#: fe70f059854b4d858ed68d0d755c7481
#: 41199ef869074e3799085a543cdd33be
#: b032e9295e8b4ac6b54d798c14528454
#: 8ee6fd501abc4565b862958d5ea68f37
#: ae5e698cae5348f69edbc9f8c0206b3b
#: efcdaec772a34acea7a7ff2cc9a8b8e7
#: 080b97188f5a44679891cfb716d50114
#: 531d98130fa640628418465734b04948
#: bb7b87c5533e47abae22a1a467045355
#: 4c1d59b060c14828bb288a9d9bee7fa4
#: d1a485d3d5f74fba92eb13b8822cb24c
#: 30f14682942d41f2bd2f5be46214835e
#: f68ce3e250504f88a824be11b48f8b19
#: 8e0965c64ae5468da1307dc14ff5a65a
#: 4efb3a1a17574ccf93828edac73a671e
#: affbe6440cd94dd58feadbc9f23454da
#: b83bbaea7aba4c25ba84d6a4e738cc7b
#: 6cd3e47c071e4b888f11df9e47d726bf
#: a32d372fc9f34a179efb70f960db2fcd
#: 930c99067f4d4e18b32760c013f09ed6
#: 2cfcfdc4cee548bc9de54b20d5f7a07b
#: f3f070a5df9e4529a8188975d95a68af
#: 6ca27af7f6a44eb090306905a05e852a
#: 6d3464f160a64ef68ca38de871dc28bd
#: da4483a3d8e4455983851fabc0f7dd02
#: 090b5d14104b4a8ea1a57f292fa2e91c
#: 911388eab6284c94bf9dd20715497a43
#: 2f3ea52112814b0f9ac99c61e56465e6
msgid "Parameters"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:25
#: a4d2aa79666649ca85e4e8832e7231b4
#: 92a9bc95fa124cc2a6481b3544402054
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`Coro\\`\\`\\, bound\\= \\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ \\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, \\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ \\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, \\:py\\:data\\:\\`\\~typing.Any\\`\\, \\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\)`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.message_command:1
#: 368652e3c875428c9e7ed908c22e2bbb
msgid "A shortcut decorator that invokes :func:`command` and adds it to the internal command list via :meth:`add_application_command`. This shortcut is made specifically for :class:`.MessageCommand`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.message_command:7
#: 230957d3b00d465ba1057bb8dde0375d
msgid "A decorator that converts the provided method into a :class:`.MessageCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.message_command:9
#: 446d89e18a984c0899a05c5dae9c9d25
msgid "Callable[..., :class:`MessageCommand`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.slash_command:1
#: a72b3011a0c2494e95b73c91ef1bc5d8
msgid "A shortcut decorator that invokes :func:`command` and adds it to the internal command list via :meth:`add_application_command`. This shortcut is made specifically for :class:`.SlashCommand`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.slash_command:7
#: fa51a00b24dc4eb8b85cb16e577cd0cb
msgid "A decorator that converts the provided method into a :class:`.SlashCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.slash_command:9
#: 8cb4f64fc9b842e99f656c4edc427b1c
msgid "Callable[..., :class:`SlashCommand`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.user_command:1
#: d09c64206574417eaa7824f3ba7b7070
msgid "A shortcut decorator that invokes :func:`command` and adds it to the internal command list via :meth:`add_application_command`. This shortcut is made specifically for :class:`.UserCommand`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.user_command:7
#: 2a5a5484ad2640a090cb56f82cfed16f
msgid "A decorator that converts the provided method into a :class:`.UserCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.user_command:9
#: 47980633a0e74e72af51935d418cd0e5
msgid "Callable[..., :class:`UserCommand`]"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.listen:1
#: 9048c5a633c04c42af7a06b523435b08
#: b990261ea99f4f60a22b8c2f020d9aeb
msgid "A decorator that registers another function as an external event listener. Basically this allows you to listen to multiple events from different places e.g. such as :func:`.on_ready`"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.listen:5
#: 5c8494eb3a3847a28ea86a13f622b0ca
#: 28112742cc894834a4199c50514e92b9
msgid "The functions being listened to must be a :ref:`coroutine <coroutine>`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.listen:7
#: 62d1c8d54d9e4c5f8dd4f61219b254f1
#: 7d847ee8a4554a5da695f22ce3d5313c
msgid "The function being listened to is not a coroutine."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_listener:11
#: ../../../discord/client.py:docstring of discord.client.Client.add_listener:11
#: ../../../discord/client.py:docstring of discord.client.Client.listen:8
#: 05065b5c67e1401295e5b37bd9a647ce
#: eefde4a89ebe4183b4d58c68754a33a3
#: 0b4f57fc36b548dc991b0b9d9359c3db
#: 176d61be271e4a91a68e8a2183190329
msgid "The ``name`` (event name) does not start with 'on_'"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.listen:29
#: f2f041a61e2c4d96ae51fe3d10cfbc89
#: 467abba7c2824825bf9ac0b065144559
msgid "Would print one and two in an unspecified order."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.listen:35
#: 1ad893ae6d404e859a724d1384c3e12a
#: d3c9f02c02b647ffab3f8609f92bef67
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ \\\\\\[\\\\\\[\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`Coro\\`\\`\\, bound\\= \\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ \\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, \\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ \\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, \\:py\\:data\\:\\`\\~typing.Any\\`\\, \\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\)\\]\\, \\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`Coro\\`\\`\\, bound\\= \\:py\\:data\\:\\`\\~typing.Callable\\`\\\\ \\\\\\[\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\, \\:py\\:class\\:\\`\\~typing.Coroutine\\`\\\\ \\\\\\[\\:py\\:data\\:\\`\\~typing.Any\\`\\, \\:py\\:data\\:\\`\\~typing.Any\\`\\, \\:py\\:data\\:\\`\\~typing.Any\\`\\]\\]\\)\\]`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.activity:1
#: ../../../discord/client.py:docstring of discord.Client.activity:1
#: 6fab55fc960c41ab9946f4589469eba9
#: e0fb8761f68647b98e67aaf36915f6df
msgid "The activity being used upon logging in."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.activity:3
#: ../../../discord/client.py:docstring of discord.Client.activity:3
#: a411bbe5b00c45c7a62f7f721f3d5fdd
#: 07fab2799a934430abec2938a4bcf215
msgid "Optional[:class:`.BaseActivity`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.add_application_command:1
#: 1c8bb7dda2c643708eff19f7c8e760ba
msgid "Adds an :class:`.ApplicationCommand` into the internal list of commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.add_application_command:3
#: 96cc010f3bdb49578bdc4e547b0bc6cc
msgid "This is usually not called, instead the :meth:`command` or other shortcut decorators are used instead."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.add_application_command:9
#: bafc9036dfbf4fae92be90bb73f90d70
msgid "The command to add."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.add_application_command:12
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.invoke_application_command:10
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.process_application_commands:26
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:55
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.add_check:10
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.on_application_command_error:14
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.remove_check:12
#: ../../../discord/bot.py:docstring of discord.client.Client.add_listener:12
#: ../../../discord/bot.py:docstring of discord.client.Client.add_view:20
#: ../../../discord/bot.py:docstring of discord.client.Client.before_identify_hook:18
#: ../../../discord/bot.py:docstring of discord.client.Client.clear:8
#: ../../../discord/bot.py:docstring of discord.client.Client.close:6
#: ../../../discord/bot.py:docstring of discord.client.Client.connect:18
#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:16
#: ../../../discord/bot.py:docstring of discord.client.Client.login:14
#: ../../../discord/bot.py:docstring of discord.client.Client.on_error:15
#: ../../../discord/bot.py:docstring of discord.client.Client.remove_listener:10
#: ../../../discord/bot.py:docstring of discord.client.Client.run:28
#: ../../../discord/bot.py:docstring of discord.client.Client.start:11
#: ../../../discord/bot.py:docstring of discord.client.Client.wait_until_ready:6
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:24
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:26
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:27
#: ../../../discord/client.py:docstring of discord.client.Client.add_listener:12
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:20
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:18
#: ../../../discord/client.py:docstring of discord.client.Client.clear:8
#: ../../../discord/client.py:docstring of discord.client.Client.close:6
#: ../../../discord/client.py:docstring of discord.client.Client.connect:18
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:16
#: ../../../discord/client.py:docstring of discord.client.Client.login:14
#: ../../../discord/client.py:docstring of discord.client.Client.on_error:15
#: ../../../discord/client.py:docstring of discord.client.Client.remove_listener:10
#: ../../../discord/client.py:docstring of discord.client.Client.run:28
#: ../../../discord/client.py:docstring of discord.client.Client.start:11
#: ../../../discord/client.py:docstring of discord.client.Client.wait_until_ready:6
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:28
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.close:6
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:18
#: e593feebb1924681b8862ef74835f00c
#: 396fefe4d32b423d959c3f887cbca407
#: f96cd92a798a4613a4949f67c608e4ba
#: 410ed683533f4e69b309b898a2e56c7d
#: 4e36c2c3e0ae4be2ba520d3da81da7b8
#: c811a0a6a91d4b8c98daa60d8f8c78b9
#: af1fa242a1ce4af9a40dba844bc2afb3
#: 020ff49101bb40e38da9f516406c9bb9
#: aeaa8913e17b4c6094e865bc4eb2758f
#: f1b8003468d840da8d87720db56a2d49
#: 1916ebc54d4d4a9f979821f8449a61a4
#: 5092aef21ed04ac0a53ce01638c8dbeb
#: 1650afc076de4977b48fde4ee813a4a4
#: 9e633b862c4649929de4453d9bad722e
#: 01c462225adb4cb4b13fc7032f16e557
#: f3a57d3708d041b7a08b91f3ea9ca622
#: 5a2ccd2edddd4ac4b00cf3fba72d6654
#: 39d4afaebac24131a46f6098c5c58f09
#: 7701245bf3df4b31b76db46e70b876b3
#: d893fa3cfb00417cb55d8a13aaa6ae7d
#: 40a10565c47e428783ba0ea80c1dd7df
#: 22e11d6921c449e4a282d4e6cecffca2
#: a82c72e18e4f4a0698fcf91710484de3
#: b3431cf7df38407a8c52ad667f884829
#: b612f982e21d4c8991792b7bd14d5052
#: 307ff7a1145140b3a2ee8c4e76a523a7
#: 4af94ee1f29d445f96c987f1dbc0425e
#: 30d25bd2c028485f8f97cede1b03fb69
#: e58f53d3374643a298dea9d2633f3945
#: 67072d527a8749d5b3944df61ef219d7
#: 83b2892626554fc598ad77afe00dbd7d
#: 1db8857732b04df28af09ffedc5ebe1b
#: 88c3ad85bb944f3da68503ca6321c03e
#: 4b3c254d53434673a7b6aea9f3a2a2e4
#: 90a5d20f94fd4706af268419a555f337
#: 66c3687dd6914a5a8f9e909edb1bfbd5
#: 21c2bc0f542a4a3aa5994723dde6521c
#: edc9fffdc5ad4ce99edeeb7be1213bcd
#: b625287bbd8b4b449aca6b82f3d4735f
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:obj\\:\\`None\\``"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.add_check:1
#: 4676b197eaa64f3c8557578155cb0212
msgid "Adds a global check to the bot. This is the non-decorator interface to :meth:`.check` and :meth:`.check_once`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.add_check:5
#: 1c565c3a3b6e4e609c1d3fef171ba6aa
msgid "The function that was used as a global check."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.add_check:7
#: 383356d72dc04d609b99e2a0d22194d5
msgid "If the function should only be called once per :meth:`.Bot.invoke` call."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:1
#: 469c368d1b3e4018a39712ff4c210d82
msgid "Adds a \"cog\" to the bot."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:3
#: 01d697723a104b94a08803b7def2ef43
msgid "A cog is a class that has its own event listeners and commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:7
#: 058f78a5848240a4a363d75624ed841a
msgid ":exc:`.ClientException` is raised when a cog with the same name is already loaded."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:11
#: 694b2692377043a5b06d75034db6aa97
msgid "The cog to register to the bot."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:14
#: cdf4075cfc104eb0970e8eb045d4b797
msgid "If a previously loaded cog with the same name should be ejected instead of raising an error.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:14
#: a8747915f97546c7a620d5cf9b8de8b4
msgid "If a previously loaded cog with the same name should be ejected instead of raising an error."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:20
#: 4cbbee08205341f39663cc6867ed645b
msgid "The cog does not inherit from :class:`.Cog`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:21
#: c646093fb86146849becfbcaad49ea63
msgid "An error happened during loading."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.add_cog:22
#: 841c388e38ef4bf5bce9805ddc53a54b
msgid "A cog with the same name is already loaded."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_listener:1
#: ../../../discord/client.py:docstring of discord.client.Client.add_listener:1
#: 88e689f9afc241369d6babb194fc1a03
#: 4b214f203e12429ba249629d5b435fb9
msgid "The non decorator alternative to :meth:`.listen`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_listener:4
#: ../../../discord/client.py:docstring of discord.client.Client.add_listener:4
#: a0730900749a47e2bdda31ad8ba3f0dc
#: 9bdb658ed327483d848cf491f8b3bbb8
msgid "The function to call."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_listener:7
#: ../../../discord/client.py:docstring of discord.client.Client.add_listener:7
#: c7ea41591aab47898209118e9d6aada0
#: a4fcf86c7d864ec6867029102373ac9d
msgid "The name of the event to listen for. Defaults to ``func.__name__``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_listener:10
#: ../../../discord/client.py:docstring of discord.client.Client.add_listener:10
#: ba943995cd6f4f42838a634814e22ca1
#: a2f5ee9251644bfd97d947e158ad4764
msgid "The ``func`` parameter is not a coroutine function."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_view:1
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:1
#: 8fdde2412a434bc889eb2470635efba6
#: 5bfee65c9551403997926307bfac288b
msgid "Registers a :class:`~discord.ui.View` for persistent listening."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_view:3
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:3
#: 184b080c1ff64b3c92c2733aa9df8c75
#: a51b4f92d6494f518fa69f07e378bc51
msgid "This method should be used for when a view is comprised of components that last longer than the lifecycle of the program."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_view:9
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:9
#: 00b0dfac3aad46efa3411ccc01fbdf2f
#: a403d4bd52ef4a1a8ab3a5f9c7f787f0
msgid "The view to register for dispatching."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_view:12
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:12
#: 0516f38c619c48ae8fb7173ca478d0ef
#: 46830f4ca2de4aa788ccf77849200801
msgid "The message ID that the view is attached to. This is currently used to refresh the view's state during message update events. If not given then message update events are not propagated for the view."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_view:17
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:17
#: 4c66a1b617434ebea41a052d24391a33
#: ab74c62568f741c08aa18e7010c55481
msgid "A view was not passed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.add_view:18
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:18
#: 648db641fb244b8a97a98f317abbd5e4
#: 375d822827c74905bc6957583aa1a261
msgid "The view is not persistent. A persistent view has no timeout     and all their components have an explicitly provided ``custom_id``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.after_invoke:1
#: 65f44d7ffe264126a3533d77b1464e65
msgid "A decorator that registers a coroutine as a post-invoke hook. A post-invoke hook is called directly after the command is called. This makes it a useful function to clean-up database connections or any type of clean up required. This post-invoke hook takes a sole parameter, a :class:`.Context`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.after_invoke:9
#: 4781d1ab818644d08703f1bed8ce105c
msgid "Similar to :meth:`~.Bot.before_invoke`\\, this is not called unless checks and argument parsing procedures succeed. This hook is, however, **always** called regardless of the internal command callback raising an error (i.e. :exc:`.CommandInvokeError`\\). This makes it ideal for clean-up scenarios."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.after_invoke:16
#: 93110892f84044658ef3957825682406
msgid "The coroutine to register as the post-invoke hook."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.allowed_mentions:1
#: ../../../discord/client.py:docstring of discord.Client.allowed_mentions:1
#: 2b6755c1d276469ab419792ac6020ccf
#: d3a62f27dcc644f29fae06b98d24599f
msgid "The allowed mention configuration."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.application_command:1
#: 3a6bb0789c0c46faa50beb35215a0bb9
msgid "A shortcut decorator that invokes :func:`command` and adds it to the internal command list via :meth:`~.Bot.add_application_command`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.application_flags:1
#: ../../../discord/client.py:docstring of discord.Client.application_flags:1
#: 8b07e863b4da42b087185fe66a4e4782
#: dfae6e3bc62e49a09c2ee43781c23646
msgid "The client's application flags."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.application_id:1
#: ../../../discord/client.py:docstring of discord.Client.application_id:1
#: ../../../discord/client.py:docstring of discord.client.Client:27
#: 7b81e6817aa3453dadfa039d5908f380
#: ae7d062cf9c948289a20102ae95031b7
#: eee3342a379449d5a4d5e777fde6ff85
msgid "The client's application ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.application_id:3
#: ../../../discord/client.py:docstring of discord.Client.application_id:3
#: 7d1d35144ab143c89844f2eeda5ca458
#: 21ef281dd8344c15a68e36bf70c236bd
msgid "If this is not passed via ``__init__`` then this is retrieved through the gateway when an event contains the data. Usually after :func:`~discord.on_connect` is called."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_context:1
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_autocomplete_context:1
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_desynced_commands:1
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.invoke_application_command:1
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.process_application_commands:1
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_command:1
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:1
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:1
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.is_owner:1
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.on_application_command_error:1
#: ../../../discord/bot.py:docstring of discord.client.Client.application_info:1
#: ../../../discord/bot.py:docstring of discord.client.Client.before_identify_hook:1
#: ../../../discord/bot.py:docstring of discord.client.Client.change_presence:1
#: ../../../discord/bot.py:docstring of discord.client.Client.close:1
#: ../../../discord/bot.py:docstring of discord.client.Client.connect:1
#: ../../../discord/bot.py:docstring of discord.client.Client.create_dm:1
#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:1
#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_premium_sticker_packs:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_skus:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_stage_instance:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_sticker:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_template:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_webhook:1
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:1
#: ../../../discord/bot.py:docstring of discord.client.Client.get_or_fetch_user:1
#: ../../../discord/bot.py:docstring of discord.client.Client.login:1
#: ../../../discord/bot.py:docstring of discord.client.Client.on_error:1
#: ../../../discord/bot.py:docstring of discord.client.Client.start:1
#: ../../../discord/bot.py:docstring of discord.client.Client.update_role_connection_metadata_records:1
#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:1
#: ../../../discord/bot.py:docstring of discord.client.Client.wait_until_ready:1
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:1
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:1
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:1
#: ../../../discord/client.py:docstring of discord.client.Client.close:1
#: ../../../discord/client.py:docstring of discord.client.Client.connect:1
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:1
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:1
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_skus:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_or_fetch_user:1
#: ../../../discord/client.py:docstring of discord.client.Client.login:1
#: ../../../discord/client.py:docstring of discord.client.Client.on_error:1
#: ../../../discord/client.py:docstring of discord.client.Client.start:1
#: ../../../discord/client.py:docstring of discord.client.Client.update_role_connection_metadata_records:1
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:1
#: ../../../discord/client.py:docstring of discord.client.Client.wait_until_ready:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.close:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:1
#: 41081b0ab799472fa6aa72c01266cc77
#: 75a3908583e246ddaee8b2ab99d5b21e
#: 3796d6049f614d1a81a2102b543cdc5f
#: 8952c3a11462457c9c94503c0a1e46ce
#: e907813498d04ca58b7d80979f4f9b91
#: cf33128256c04cc8962a75390c1ef183
#: 9e27094ebf5a426bb1e75e62e5daa1c4
#: b7be03d2394446469f0739f4abb91781
#: cd4b7ea72a3442768f7f021733e96924
#: bfcc3ff6e8824dab8f98475203a002f1
#: 8686465f1a3d4950be5a71debbfd3d52
#: 6bc3c19c9696465ca3f9cb5f44d223ad
#: beba0dc76f904c399cbc6333f2245f8a
#: 409b33c5bd944e0f83d05534e795141a
#: d319b5d28ca048509d872555d49cb491
#: d393bc2fe41b44338c0bcde410e9c1eb
#: a0ccfe1ca31e44379b769024cd71c09d
#: d132c2ca5f21423d8bb2a18353e56149
#: 5b0142abd63a4172ba647e87dbb900bb
#: 7c618e26033b4d08a8e0f007cb393a95
#: a7ce19c3920f40ab91a7d270dfff2d0e
#: 55517ed8ac2a4335b028c0d3287ab602
#: 3b02c5d5217a4399b0efaa60fa233800
#: dd7766df155949ef833986acacc9bd1e
#: e2011cef6d5d48198898cc84ce3ff034
#: bd98759df051486cb438e08eb1353981
#: 432d6a40c1d8432ab8b7d40f0925725f
#: b574c040aab6434e8e9117cb173e66e7
#: b3532cf121b048eda5c36ea5dadf2bb7
#: c4c7e645c2774285a372c4191c123972
#: fd122fbfac7745088650c30d135140a3
#: 2d0b4575f5b040baa11ffcb94a4e88cb
#: eec22e8a76bc44d98f5118ef6cd98ff1
#: 1b95069e19e14336b3df83578d283d60
#: 808e1806c6b64e51bbba91d90528ed54
#: 5ab820a2a5724771b52a98096065421a
#: e9e4fce13fd64ac1a57abcff389058fe
#: d9eb2e4a9e234e37b248d23a246f8522
#: 719a4db8fcd9422eb5232e3c1b4c357a
#: a5d9fab4197945fa9a7158d33a5137fe
#: 1db50c6e137845b68b570df104e74d4b
#: 060f832aac614ca48a7c773f89519a83
#: 4f72411b8a1b45f9a0f1e0155a4987af
#: 138156b76de74091aa74c5f5b5aaf106
#: 1e80aee9d81c41f8abbadc462fca85f0
#: 76c40f929b5e47f08b6895e78e2531f4
#: 4aa232af85d24e47b196f1d03fb8c965
#: b0e2190a391943a88710db164c51ea2d
#: 12331234d4e147d09a057d4ced81b548
#: dbbbf2ea2f0d4034acd3fd68b36a511d
#: f362cfb38ba64c25820b87958f908366
#: a758685e247a4a2c9ae1999cd7b5963c
#: ccd605c5d9d84aba8066fff3131b2ec1
#: 559372b5f25f4d5da50bfcab9f964aa8
#: b6cddb5f035547169e68076acd704440
#: a553c8ecfc5f4b4c92aa936b1a15fe86
#: 68a03b482db94fea9cc73b0149866502
#: 7e4ec6a324584821a4fe4a9d04be87df
#: 9023f922e3924c4dae0ada2a128df325
#: b7fcec43206241f0b472224bb3a511b8
#: 31ddc274e500488eb01c3384ffaf177d
#: 2e37d50ed6d941628859bdb728912aae
#: 5e5a0800f28e4dbc82f8a6408045d878
#: ebe1545e79644680970a631afbad7cde
#: be42f0e9c3b8494db485613495915cde
#: aada61b19de44e4cbf5de51c0d7e11e9
#: 1fbac3dec83b4eea94e1a26b34208243
msgid "|coro|"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.application_info:3
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:3
#: 5983dcd0486b4523ae227931a10b1302
#: 47b37eeb523444a7aaecac9c8064ced9
msgid "Retrieves the bot's application information."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.application_info:5
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:5
#: 507ab57eb4464568979b8f115e241575
#: 4bb7ac9a133a472bb6a3b9126cebda75
msgid "The bot's application information."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.application_info:6
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:6
#: 0101829855214ceca48fda193d62fa4a
#: 0abb1cb53f1d41c38d3ba45f1d0d3a03
msgid ":class:`.AppInfo`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.application_info:8
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:8
#: 3aa370c5983e445f88dd18e9eadbd873
#: 60dcff8b7cff446797963d62c8f9728b
msgid "Retrieving the information failed somehow."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.before_identify_hook:3
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:3
#: 70cb703484a24211b5f015b6c98489ed
#: 3e6d7812bab8419d863e5278f50532a6
msgid "A hook that is called before IDENTIFYing a session. This is useful if you wish to have more control over the synchronization of multiple IDENTIFYing clients."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.before_identify_hook:7
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:7
#: e8ac04bf158e41c38b39991bab6fb822
#: 345f1f0857334a8486719a08ce7b4812
msgid "The default implementation sleeps for 5 seconds."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.before_identify_hook:12
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:12
#: 0b6319a9e67d414e87249e03d6d63397
#: 8445119bcdba4f689bdc7ce8bc1d16ef
msgid "The shard ID that requested being IDENTIFY'd"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.before_identify_hook:15
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:15
#: 2301c3d3f9404ea495a8d7650bf54425
#: b5e6a835da3141a995d994af7efdd383
msgid "Whether this IDENTIFY is the first initial IDENTIFY."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.before_invoke:1
#: b720eb9a67e44dce8da52c580e698881
msgid "A decorator that registers a coroutine as a pre-invoke hook. A pre-invoke hook is called directly before the command is called. This makes it a useful function to set up database connections or any type of set up required. This pre-invoke hook takes a sole parameter, a :class:`.Context`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.before_invoke:9
#: 6c74a036308e4868b73dcbcf6c9c4f50
msgid "The :meth:`~.Bot.before_invoke` and :meth:`~.Bot.after_invoke` hooks are only called if all checks and argument parsing procedures pass without error. If any check or argument parsing procedures fail then the hooks are not called."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.before_invoke:15
#: fad163555b174a4d8feb1bffef917e2a
msgid "The coroutine to register as the pre-invoke hook."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.cached_messages:1
#: ../../../discord/client.py:docstring of discord.Client.cached_messages:1
#: cba36eb2890e435fa097ddab61040300
#: 26517c7b15d54b3f8695eb62fbc85109
msgid "Read-only list of messages the connected client has cached."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.change_presence:3
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:3
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:3
#: d2e7ed1bee18473c8ed6a983e8028076
#: 6114d56696924f85a50ec7eab18cea6d
#: 88e009e009734cf6ae3bc3145c4d8f88
msgid "Changes the client's presence."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.change_presence:6
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:6
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:14
#: 6c8a13b6a2374d07bde689acfab480b4
#: a5872f2048ac46379625289291357eca
#: f5d41bec41dc44e9bc527b986be506ef
msgid "The activity being done. ``None`` if no currently active activity is done."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.change_presence:9
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:9
#: 3abff02da97142be826bc2c4e6ca6170
#: 6b8aeda786a9403b9d499b77b41b85d7
msgid "Indicates what status to change to. If ``None``, then :attr:`.Status.online` is used."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.change_presence:13
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:13
#: 135d8da50bfe441ba19fe730e3461b60
#: 84986619916e40e88957ed778fedf574
msgid "If the ``activity`` parameter is not the proper type."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.change_presence:22
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:22
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:10
#: 39e909d604eb4a8c8eae94680b0f85d5
#: 54b695951125498384300fe6b62bdf48
#: fb21c4dfd460428fb9985ab358ae38bf
msgid "Removed the ``afk`` keyword-only parameter."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.check:1
#: e46f439b7bf0448db055239476cd073e
msgid "A decorator that adds a global check to the bot. A global check is similar to a :func:`.check` that is applied on a per-command basis except it is run before any command checks have been verified and applies to every command the bot has."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.check:7
#: ../../../discord/bot.py:docstring of discord.bot.BotBase.check_once:13
#: 142d9d49796c4a5db2c6a4d717820700
#: d1fddb994e6d4505b2c2a6138a60f1db
msgid "This function can either be a regular function or a coroutine. Similar to a command :func:`.check`, this takes a single parameter of type :class:`.Context` and can only raise exceptions inherited from :exc:`.ApplicationCommandError`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.check_once:1
#: 2a09dda9c7114ea5a974ce9692e8315e
msgid "A decorator that adds a \"call once\" global check to the bot. Unlike regular global checks, this one is called only once per :meth:`.Bot.invoke` call. Regular global checks are called whenever a command is called or :meth:`.Command.can_run` is called. This type of check bypasses that and ensures that it's called only once, even inside the default help command."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.check_once:8
#: 0832766348084620af8c98ac13ee77ed
msgid "When using this function the :class:`.Context` sent to a group subcommand may only parse the parent command and not the subcommands due to it being invoked once per :meth:`.Bot.invoke` call."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.clear:1
#: ../../../discord/client.py:docstring of discord.client.Client.clear:1
#: 46113f3b59ba48888dae66daa428f6a2
#: 664b2b67ec6147ed94b53e0140acb9ef
msgid "Clears the internal state of the bot."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.clear:3
#: ../../../discord/client.py:docstring of discord.client.Client.clear:3
#: b2e236d83dc34d8bb26a73a49b01369e
#: a37bc673a1b54d709b8017883bfa408f
msgid "After this, the bot can be considered \"re-opened\", i.e. :meth:`is_closed` and :meth:`is_ready` both return ``False`` along with the bot's internal cache cleared."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.close:3
#: ../../../discord/client.py:docstring of discord.client.Client.close:3
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.close:3
#: 78ac357893eb41058d331fbd7e21f8bf
#: 67affa321575466d843d881e79ff9660
#: 19cb2651d3ce4866a46f8995db1f0f47
msgid "Closes the connection to Discord."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.cogs:1
#: 66c2406b4f2349e896b65819340190d4
msgid "A read-only mapping of cog name to cog."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.connect:3
#: ../../../discord/client.py:docstring of discord.client.Client.connect:3
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:3
#: 9b1145547fdc4c8b85b1fdffccd05849
#: 2e2b4b77bc7549c0a05965d9694ef840
#: 384d32602e464416870ad53b753b79d7
msgid "Creates a WebSocket connection and lets the WebSocket listen to messages from Discord. This is a loop that runs the entire event system and miscellaneous aspects of the library. Control is not resumed until the WebSocket connection is terminated."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.connect:9
#: ../../../discord/client.py:docstring of discord.client.Client.connect:9
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:9
#: 6baf64d2338545519040319cd1847544
#: 01fe01284ae748c8b1eddfddd1d73e21
#: 4c2538926ef24f4d9288918238a79d80
msgid "If we should attempt reconnecting, either due to internet failure or a specific failure on Discord's part. Certain disconnects that lead to bad state will not be handled (such as invalid sharding payloads or bad tokens)."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.connect:15
#: ../../../discord/client.py:docstring of discord.client.Client.connect:15
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:15
#: 4f24dc57384346d0856e8fdac0a91c7a
#: e065be27c22342a28fae8bfee39dc5f6
#: 99080bf0c1b348c2ab66dea5a37fdbe0
msgid "The gateway to connect to Discord is not found. Usually if this     is thrown then there is a Discord API outage."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.connect:16
#: ../../../discord/client.py:docstring of discord.client.Client.connect:16
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:16
#: 1656a53ca10c491688df2509c3c5ff71
#: c36b8e522ef8432ab9d32865a6f89cda
#: 7b20b4aa50464febb02f71ad5672cde4
msgid "The WebSocket connection has been terminated."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_dm:3
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:3
#: eaa633504af044fbbae0c5fff1734c12
#: 4887cc26c4f94834bd314c9ad7887166
msgid "Creates a :class:`.DMChannel` with this user."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_dm:5
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:5
#: 0be38552dc6d4508b568215162fbc247
#: 11ed5a01e6a345a0acea5e61f04b1b7b
msgid "This should be rarely called, as this is done transparently for most people."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_dm:11
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:11
#: 5a3111fd82194cd2885d84958fca1132
#: 3b1a1bf113d64c288b8703c0fdc99381
msgid "The user to create a DM with."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_dm:14
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:14
#: d6fa64d947654bf7becf7fad301f0fb9
#: 3b137326256c433f88b79dd49a47e72f
msgid "The channel that was created."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_dm:15
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:15
#: 4ee54b2c76694caabfe0fde5d1cd1696
#: 78267be3de4d4d789cc656e991f10e17
msgid ":class:`.DMChannel`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.create_group:1
#: a20efe6647144d72911f1a64c5ddacdc
msgid "A shortcut method that creates a slash command group with no subcommands and adds it to the internal command list via :meth:`add_application_command`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.create_group:7
#: 5c2158acc4a543b1b66b07320a0f767f
msgid "The name of the group to create."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.create_group:10
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.group:10
#: 69af3206fe804f5ea844fa3e65c9cb7c
#: a58e962af7324b1b9e2e450d359efb44
#: 073ea72132d541e0bfe3ef3266ca89e1
msgid "The description of the group to create."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.create_group:13
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.group:13
#: 017330dc607446c2a51ad9824d9b6642
#: 1013a998dd0644bf8b8ed20ec4161d3f
#: 498bcc4fbd754314aa14a09cb65b95db
msgid "A list of the IDs of each guild this group should be added to, making it a guild command. This will be a global command if ``None`` is passed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.create_group:17
#: 84480e59ac654759925cb9bf3400c84a
msgid "Any additional keyword arguments to pass to :class:`.SlashCommandGroup`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.create_group:19
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.group:17
#: fffbb1f76152417080d7db49ca8e4c85
#: b8bf3f05b8b94e4fae6fc0fad6b15b09
#: 6ca16325d33d44e9a097277415d8529b
msgid "The slash command group that was created."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:3
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:3
#: 3b97fc8c08714dc0bf7cbe2a88d0fcab
#: 7f4f1601e15941c49368490691cf3ea6
msgid "Creates a :class:`.Guild`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:5
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:5
#: 8524eb9f26414048b1952e19fc192260
#: 1ac9ef86b0a64b3ab8e6552798c01c97
msgid "Bot accounts in more than 10 guilds are not allowed to create guilds."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:8
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:8
#: bfd43e9bd0f34e918327fc339e37937b
#: 4b2cb528eb144e2cba9fd35944489929
msgid "The name of the guild."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:11
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:11
#: 62b9a65381f34c1bac438c5fd2c7ba6f
#: a9d50329ac804b2697f42d86f92f69d1
msgid "The :term:`py:bytes-like object` representing the icon. See :meth:`.ClientUser.edit` for more details on what is expected."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:15
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:15
#: 0722a839383b4001aa95fb0d76912f04
#: ae0f886a88eb4404898545bc4dda335e
msgid "The code for a template to create the guild with.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:15
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:15
#: 352fe566629842ad9d6ff7432397522e
#: ac7b94c2d4aa41c4804843187d78a126
msgid "The code for a template to create the guild with."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:20
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:20
#: ef6b2cc2844948a6afac53df0c6c4c71
#: 13d1e2ac49db416db0205889ed95c259
msgid "The guild created. This is not the same guild that is added to cache."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:22
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:26
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:22
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:26
#: ac312b1700ba40e3ab5989b9c39cdc00
#: a4b211d860344b6bab78f4760535fb4d
#: d09eadf06e9343dd83a47871e2abc31f
#: 96dd37df88464c8a87fc52b0bb725013
msgid ":class:`.Guild`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:24
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:24
#: 6fa7e508b0cf4b958775cf91dac4ba35
#: 7b2526fdc6744cc4856f38309c4dbc4a
msgid "Guild creation failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.create_guild:25
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:25
#: 2d01c286352d4eeba440b3662378cc26
#: 6a0a9f3ed5d14cd1b00a6fef49d5debe
msgid "Invalid icon image format given. Must be PNG or JPG."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:3
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:3
#: 8689a2f7442c4748b0aeb3620d9cf09c
#: 10f6f332803e43be874d5efeaf273bd7
msgid "Revokes an :class:`.Invite`, URL, or ID to an invite."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:5
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:5
#: 7e2f44aeac5741c9a5a08f2da76920ba
#: 2ecfe47925ea4c04b95937a66956301a
msgid "You must have the :attr:`~.Permissions.manage_channels` permission in the associated guild to do this."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:9
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:9
#: 98207a40e1a94e19afe49b181675d48a
#: 94aa506a7985410497bded0263cb03f9
msgid "The invite to revoke."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:12
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:12
#: d5b48d7d2a60458e8a2839ed8faa7b5d
#: 5e90c550889a4b5d9c88e6d7d7dd19bf
msgid "You do not have permissions to revoke invites."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:13
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:13
#: 34eee7d0a7914a7a9232644c1582c652
#: 391ab3e72dfe4609ba4322872c6ccae2
msgid "The invite is invalid or expired."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.delete_invite:14
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:14
#: e12571e8018b4226a23231a3d292f435
#: 770d782d0e98456da7aa346f121d5ae6
msgid "Revoking the invite failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.emojis:1
#: ../../../discord/client.py:docstring of discord.Client.emojis:1
#: da199159cd414e03aa393a6e7fceb015
#: 00169447c6a94a4b82f049cb27a56946
msgid "The emojis that the connected client has."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:1
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:1
#: 7a582bcb64fe4e77b22294e3d86b3458
#: 78892bf021d04c6fba29337b575b8b71
msgid "Returns an :class:`.AsyncIterator` that enables fetching the application's entitlements."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:6
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:6
#: 523b5670abb24b5e88f9d7f04d5a0a9f
#: 823cffd519a2414baf1d8eb638b8a867
msgid "Limit the fetched entitlements to entitlements owned by this user."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:9
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:9
#: 47234f44f4bd4ceeb41bdc775a227c15
#: 550d4974d8b243fcaf206b620c8a2a2f
msgid "Limit the fetched entitlements to entitlements that are for these SKUs."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:12
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:12
#: 0326acb773754d438a4581ed32136b6d
#: 66467d911b6945b5b419601784c046ee
msgid "Retrieves guilds before this date or object. If a datetime is provided, it is recommended to use a UTC-aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:17
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:17
#: 830e0935ff744a0ea9a2a540a4a27ed3
#: a3655982943348cc9975a45469537b6c
msgid "Retrieve guilds after this date or object. If a datetime is provided, it is recommended to use a UTC-aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:22
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:22
#: 98a71d0d914f4fe8b2324c24a917aa28
#: f84cf2f0b1844efc9fd51c33a704cf0e
msgid "The number of entitlements to retrieve. If ``None``, retrieves every entitlement, which may be slow. Defaults to ``100``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:27
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:27
#: c9ef4370de624686b6d2148b7bb52dbc
#: 2effddfbbd1e45178440ec2b43ef9195
msgid "Limit the fetched entitlements to entitlements owned by this guild."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:30
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:30
#: e475177db885429080f0ae2b78b72aea
#: bb876989f633431e86644669cd8d5fa9
msgid "Whether to limit the fetched entitlements to those that have not ended. Defaults to ``False``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.walk_application_commands:0
#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_channels:0
#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_members:0
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:0
#: ee8fbed1e9c64e87a77e9b4d5b4de348
#: c5985cf01b92479d9b571d3d9dc523a8
#: bed18856144c4cbe822ac5211c71b28a
#: 54235a29e5a84e2a9834d043bae19369
#: bcd5c40728234ab4800faa2c1b24dbed
#: c0ace545013d4a5d85fbffd98f3685ab
#: 32e1b33c6f5b47e9850f8e4a93674fdf
#: ea66c74fa77c43ca8356d069ebb6264b
#: ccb11b8f3dae49a086ea27b3fe7d3875
msgid "Yields"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:34
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:34
#: fd477cb2f68542529b5f28246bd2cddc
#: bba8b3a4dfed4c12acdea2989e9b7777
msgid ":class:`.Entitlement` -- The application's entitlements."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:36
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:36
#: 2d3a2a0f88ba4346a292f010fcfac590
#: 54a21db6d48b45ffa3147e2a18bcda3e
msgid "Retrieving the entitlements failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:37
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:37
#: 862c6912d2294e34a06faddbf7ff0269
#: 9ab70875d2f847f99751826f9b4fd448
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.iterators.EntitlementIterator\\``"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:40
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:35
#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:42
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:40
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:35
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:42
#: 7c8cb90e915a42688bb8e0ac08a56b44
#: 11648d97fb784d6b97497cf45bd7180f
#: f784f833af4f43caa6cf59467766ead4
#: 460b9f17e1aa48f78b78f8a1e2285bc9
#: 6af9ebcd9bf64b86979131f025d5c25a
#: 3f83ae3c48874b428420c62e0e8663a8
msgid "Examples"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:41
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:36
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:41
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:36
#: 4fcb97767a904beb9ef44f190efbd53a
#: df4744ea792246c2a87e26f7a1105f81
#: 6a66fb7c4171403a94a25a3808826652
#: e12b8377901c43faa7bc6978780e0d62
msgid "Usage ::"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:46
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:41
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:46
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:41
#: 5b7cc08b85db4b84ae5e9195194d36ba
#: 3a17f85d5c5540cf8b980d8e82b60252
#: 0eae2453da7c4316a4e3c6d00c680cb1
#: 2e1c0d66b41e47e8817d16aee41b61df
msgid "Flattening into a list ::"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.entitlements:50
#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:46
#: ../../../discord/client.py:docstring of discord.client.Client.entitlements:50
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:46
#: ce984edfb81a40f88475e5d768a64ec9
#: 48fa76c559f4449a95854d789559492f
#: af1413448fd64215ad8a510b736adb91
#: 4fd9d0b6b55a497898e01359b2454a47
msgid "All parameters are optional."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.extensions:1
#: 73e5dfcf598f4b738ff4cb986328a722
msgid "A read-only mapping of extension name to extension."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_application:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_application:1
#: c6993c8ace9a402dbd8a19399cff355a
#: aafc1168e05f45dfacd0f151bfd0bd27
msgid "|coro| Retrieves a :class:`.PartialAppInfo` from an application ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_application:5
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_application:5
#: cdfbd078a7e34b39bc30d2f5d3db7fef
#: d7d033a39dcd4afebf9d0f3925cb0e6c
msgid "The application ID to retrieve information from."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_application:8
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_application:8
#: 330746db683542c0bf43295ce8a60ecb
#: 3be37066300944489855782f111f4345
msgid "The application information."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_application:9
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_application:9
#: 80da38d28f7a4058a9a443c380f15e07
#: 7529d87e05374082bd884b1d1f4ce463
msgid ":class:`.PartialAppInfo`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_application:11
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_application:11
#: fdfab0a8ac644e918e2b868f0b80ea8a
#: 496dda7098054bb98c52eea3c43b204e
msgid "An application with this ID does not exist."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_application:12
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_application:12
#: 6f5bdf2b2be6487f8cd5cd5d7201e238
#: 02d838d2b1364397a167d2f5c970bf0a
msgid "Retrieving the application failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:3
#: 709c0c6eedd44918b90f6dffa9b47f23
#: 6a10ca6084f846de8fe3fc9c5f78d62b
msgid "Retrieves a :class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, or :class:`.Thread` with the specified ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:7
#: ffeb7dc3d9fe4482ab577068571db8bf
#: 16cdcc9d072042e48f37db5e1ed47d87
msgid "This method is an API call. For general usage, consider :meth:`get_channel` instead."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:11
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:11
#: a9141c92c30443dab13cd3bfdfb3221b
#: 937ee35401e047a9ab66ca84e1baf254
msgid "The channel from the ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:12
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:12
#: e0c5c0a3312d4c5bbb8ef19d1e2f15e1
#: fa37228bc5f741968a08a26bfccb5ca5
msgid "Union[:class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, :class:`.Thread`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:14
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:14
#: 220028234d2c4c72a8866cef69f6cedd
#: a6c6384d2bd8410393e2acd36f1996a9
msgid "An unknown channel type was received from Discord."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:15
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:15
#: 7b7c1cd63b90442e9e3e142aff758d8f
#: b2dc27e2311a468fabfd697becfb68c3
msgid "Retrieving the channel failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:16
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:16
#: 97eac6521e9a4e9dbc6cc6ecbfb97238
#: a254f2aa7f5441fca4eb306f79aa1b44
msgid "Invalid Channel ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_channel:17
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:17
#: d4920f83bc284b55b50a4c8f62cd4180
#: 9d2a8c5a46854947a7a140aff9f4179f
msgid "You do not have permission to fetch this channel."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:3
#: 8e9f4f77bac844f5a9988587c611cb9d
#: 5f3db26c62924650aecbb995c0df0be4
msgid "Retrieves a :class:`.Guild` from an ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:7
#: fc48643cd30442b68921bd961d8c4ee2
#: 38f598930b534b0380391fdb0e89e121
msgid "Using this, you will **not** receive :attr:`.Guild.channels`, :attr:`.Guild.members`, :attr:`.Member.activity` and :attr:`.Member.voice` per :class:`.Member`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:12
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:12
#: 232c4e056e1641d2b6f4f6aec6a485ec
#: 84388c342305493e8a6f64446e49d160
msgid "This method is an API call. For general usage, consider :meth:`get_guild` instead."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:15
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:15
#: 0edc6723fbc942dfba36ab15f4771dc3
#: 685c61028d2d4cf580d2044aaee592a8
msgid "The guild's ID to fetch from."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:18
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:18
#: 3c5f0d5b44a34c12b46639235faa7ad0
#: db45bb2c4d0a42d584ca6b8133983e77
msgid "Whether to include count information in the guild. This fills the :attr:`.Guild.approximate_member_count` and :attr:`.Guild.approximate_presence_count` fields.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:18
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:18
#: a4245b805fa0424588c0d476c4087214
#: 05dbc5f91edd4612b6383868c75a7ac2
msgid "Whether to include count information in the guild. This fills the :attr:`.Guild.approximate_member_count` and :attr:`.Guild.approximate_presence_count` fields."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:25
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:25
#: 13441326e09f4c41a4b70ace65d3685a
#: 8627931b3a534dbe8c62a4be6ea82790
msgid "The guild from the ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:28
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:28
#: 18b98d33672748fab571d1592086006c
#: 7d2046b6b57942f7a30996be5edff639
msgid "You do not have access to the guild."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guild:29
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:29
#: ab6c8c5386cc4638a941c7e10d2114f6
#: b5721e89196f4a1eb5342451dbaf3acb
msgid "Getting the guild failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:1
#: 680b55c43a404490948ccf8c75056fe5
#: 1747a97606b54d0aa85ee82fec200e5d
msgid "Retrieves an :class:`.AsyncIterator` that enables receiving your guilds."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:5
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:5
#: 6b41ff587fa34dd48f92f8b2adec9ab3
#: 479b75a91db14e1fbeb7fef18c5a04d7
msgid "Using this, you will only receive :attr:`.Guild.owner`, :attr:`.Guild.icon`, :attr:`.Guild.id`, and :attr:`.Guild.name` per :class:`.Guild`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:10
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:10
#: 7b2ca8d29ccd472dbfe3bb09ee67cd31
#: deb91710d7c24bc292aab5097f23b501
msgid "This method is an API call. For general usage, consider :attr:`guilds` instead."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:13
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:13
#: 656fd5be7efa4693858ddc0bba11b5c9
#: 105f6a38a2854a7089d696c2c01dc1e1
msgid "The number of guilds to retrieve. If ``None``, it retrieves every guild you have access to. Note, however, that this would make it a slow operation. Defaults to ``100``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:19
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:19
#: 2e80267839e44327b92ec76be0aaf427
#: 88e83fb93ec742deb161d4d5e6ae864b
msgid "Retrieves guilds before this date or object. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:24
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:24
#: dde1d08cc27a42afa6456baeab1c4824
#: efa2f8d80de046819cc9326f5bbe892a
msgid "Retrieve guilds after this date or object. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:29
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:29
#: d8cf0096c4ea46e0ae7da1145a0b557d
#: fc6f82145b034ece99cbf37f683ceff5
msgid ":class:`.Guild` -- The guild with the guild data parsed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:31
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:31
#: 2f4a72e1186a46d9aa54d22b75e640a3
#: 5803c971ecee4e8385d297fa6b5f134c
msgid "Getting the guilds failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_guilds:32
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:32
#: f8744a77885f4d189fc280ec89e87d2c
#: f43bf45acca54549a46eb8b112d02268
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.iterators.GuildIterator\\``"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:3
#: acc5f4a6a0f647dc9f8b5eaf7c539fdb
#: 8a4dcd58e0b2419aa0e9ecf1b6c7363e
msgid "Gets an :class:`.Invite` from a discord.gg URL or ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:7
#: 163cd0bf1a67459a89e9cdb0c6c757aa
#: 2a76df09c33847cf85e73900aa59ec77
msgid "If the invite is for a guild you have not joined, the guild and channel attributes of the returned :class:`.Invite` will be :class:`.PartialInviteGuild` and :class:`.PartialInviteChannel` respectively."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:12
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:12
#: 2c47a87fed924f02ba4dbce127a2d89d
#: 116f686fb5054484a467357d6d0a399a
msgid "The Discord invite ID or URL (must be a discord.gg URL)."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:15
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:15
#: 21da813826c74acbb3eedef11175e8f1
#: cc56d716f1f6424aa05b7d2400368df0
msgid "Whether to include count information in the invite. This fills the :attr:`.Invite.approximate_member_count` and :attr:`.Invite.approximate_presence_count` fields."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:20
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:20
#: 6f6b0591a01a439e9c26b6ea317b4e85
#: 3df86f4db6f04bec94f6b943117534c9
msgid "Whether to include the expiration date of the invite. This fills the :attr:`.Invite.expires_at` field.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:20
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:20
#: 9a1b3e4805b1414ba7f36b8206cc700b
#: 036021a78eea4be980334bcad40f1daa
msgid "Whether to include the expiration date of the invite. This fills the :attr:`.Invite.expires_at` field."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:26
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:26
#: 2cb15eb196524b68889c66edffb272a2
#: aa755c7bbfc644c8a99a4e7e80d1fc25
msgid "The ID of the scheduled event to be associated with the event.  See :meth:`Invite.set_scheduled_event` for more info on event invite linking.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:26
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:26
#: 18b09b5aff7a4f39b50d78b9acb653fc
#: 4ffbf97d7865451fa048a6f78af2662b
msgid "The ID of the scheduled event to be associated with the event."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:28
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:28
#: 5347b95856644909bb7dc80c9155b154
#: 367a7984086b493ba86e0b98c9e489ec
msgid "See :meth:`Invite.set_scheduled_event` for more info on event invite linking."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:34
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:34
#: 1c9f38c89b6f4c17aede743f8c65d8aa
#: 9ee1f4aced284d4282048fb76f04f940
msgid "The invite from the URL/ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:35
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:35
#: 05420965d65349869d9a3fcceff2515e
#: 33169fa919a54f519ff847e567556f48
msgid ":class:`.Invite`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:37
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:37
#: fe1ada1d25bf4ad7bc00b849f6fa88a9
#: a22701bb7d2f44fca24ebafd0027a019
msgid "The invite has expired or is invalid."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_invite:38
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:38
#: a5f9c6c8318341df9f815544e2b2fc05
#: 7acc4ef8881841d48a95e7b714968280
msgid "Getting the invite failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_premium_sticker_packs:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:3
#: b369cce5013e4d698043f69c944f8a66
#: 1c2eae88e474467a8ef8fbe7cf172242
msgid "Retrieves all available premium sticker packs."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_premium_sticker_packs:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:7
#: c3ebd2de351c47589c35c91351a05cc8
#: 4f91c0955a5547a393f8bca43c79326f
msgid "All available premium sticker packs."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_premium_sticker_packs:8
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:8
#: f2c67dc53c534b0aa88697406f41a753
#: 81d61492868a497f850b5b880d44abe8
msgid "List[:class:`.StickerPack`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_premium_sticker_packs:10
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:10
#: baf041eef92145928978a65d22c41d49
#: ebdff23caff3417faec73021b95e7112
msgid "Retrieving the sticker packs failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:3
#: 9424f8645549490aad4b3df67690028b
#: 3f0dc3bdc3194ca39b848651a262fd94
msgid "Fetches the bot's role connection metadata records."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:7
#: a739439997df43e7b7db808923acb79d
#: 99df7df48d45437faa412b04790f7587
msgid "The bot's role connection metadata records."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:8
#: ../../../discord/bot.py:docstring of discord.client.Client.update_role_connection_metadata_records:12
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_role_connection_metadata_records:8
#: ../../../discord/client.py:docstring of discord.client.Client.update_role_connection_metadata_records:12
#: ee166a08201f4183bfad8ad88c5fb320
#: 888fcfea7fa34ba888f8c0857b965c37
#: 87412648088043feabc25d0a602dc0c3
#: 6a6e7c19d6fc4cadaa9a4d4afbe179cf
msgid "List[:class:`.ApplicationRoleConnectionMetadata`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_skus:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_skus:3
#: 68218a4bf26b4b38b1c806c7aa61f661
#: 1a2b6478e8804ba4afc8c56c3c05edb8
msgid "Fetches the bot's SKUs."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_skus:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_skus:7
#: 06cf0595cc3f498c8e8f41b354e358d8
#: fb544d3f176e4037a777cec7dac26453
msgid "The bot's SKUs."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_skus:8
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_skus:8
#: 043327feba3d4c899a4b9e27f3ae1372
#: b637e44776da4185981f78109a57a53a
msgid "List[:class:`.SKU`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_stage_instance:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:3
#: 7a3e45f29a644f32b777d11a18579ede
#: 88b901ccfaa14a67aadcb8840bdee24c
msgid "Gets a :class:`.StageInstance` for a stage channel id."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_stage_instance:8
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:8
#: 69ca285e4a1b4e8797cec962961cc055
#: 4e6dc6fe1ef94a269f031a4a1e4b99aa
msgid "The stage channel ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_stage_instance:11
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:11
#: 7c7c97b654ed4a66a971dda8a270dcbf
#: a15055de9ad647d4b7ef7e393ca47f72
msgid "The stage instance from the stage channel ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_stage_instance:12
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:12
#: 8e0d484c75f44292bf2e50c355f77b5b
#: 87fb14043d8046d19381949784b89592
msgid ":class:`.StageInstance`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_stage_instance:14
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:14
#: e5a4d1d3aaf040398c8c0a5ac1e6dc2d
#: 3aee2cbf01044b3f8cc7af5dbe63cf79
msgid "The stage instance or channel could not be found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_stage_instance:15
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:15
#: 9be3c4f2f0164f2798360c5e220e7f50
#: fa0d9d4bc9ec41679170d58e5edf545e
msgid "Getting the stage instance failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_sticker:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:3
#: 584ac55387214bf0bc7655da6f2792e0
#: 958332531bf34b229232649aaad19cef
msgid "Retrieves a :class:`.Sticker` with the specified ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_sticker:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:7
#: a84b7eec831d41849ecdc43cee32ae28
#: 1363c215bc8b48139f395e234a2fdcc7
msgid "The sticker you requested."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_sticker:8
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:8
#: b838a91ed61b4d37be246951b8564208
#: ee98d910070249a2afbc06c51832ab92
msgid "Union[:class:`.StandardSticker`, :class:`.GuildSticker`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_sticker:10
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:10
#: 50d8785227d54d73b68c6649c6fc793f
#: a3bd0412032a451d944d5040250df9a4
msgid "Retrieving the sticker failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_sticker:11
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:11
#: a914b8b74dff428b8217376bb44ee280
#: a5926e5321024d8da72afc86559c5181
msgid "Invalid sticker ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_template:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:3
#: dbd91692e99f41089c24f3a1b016abe3
#: daba7a12d12e483dabb22f3082560e2d
msgid "Gets a :class:`.Template` from a discord.new URL or code."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_template:6
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:6
#: 9cf7aeba3cf94ddfade1161921136fcd
#: 6c79dbef597949049308831126caf1cb
msgid "The Discord Template Code or URL (must be a discord.new URL)."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_template:9
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:9
#: 20002ad14d4a4ebeb50f9d4b42e9bb59
#: 2177ade0a9194b67b6fd15a61ae13825
msgid "The template from the URL/code."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_template:10
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:10
#: f8e660d6df844ff9b6e8ca42e45a6db4
#: 25aa61a5f6704f76bd0e63fe07fd5344
msgid ":class:`.Template`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_template:12
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:12
#: 35c845de13e349a9bd817308bd8210bb
#: bbb4e3d039e24824b2e96290ede33879
msgid "The template is invalid."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_template:13
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:13
#: 1e8fc158e4c74b9fa63f4cd6822c9190
#: de39096b310c4930ba085499cc501be9
msgid "Getting the template failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:3
#: fc5e27dfd5df4f1083a2ce78905f137f
#: 6afa0c679eaf409a8736e07f05fb7c6d
msgid "Retrieves a :class:`~discord.User` based on their ID. You do not have to share any guilds with the user to get this information, however many operations do require that you do."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:9
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:9
#: 88856ef0a1c34816a1b8126d28db55c8
#: 80beb23cf53c40a194d929ae8c7a2876
msgid "This method is an API call. If you have :attr:`discord.Intents.members` and member cache enabled, consider :meth:`get_user` instead."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:13
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:13
#: 904c1ae5fcc14436b80548bb1f284c43
#: 13ba7b35bdd343299351ad1b86086580
msgid "The user's ID to fetch from."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:16
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:16
#: f331d997dda74b7e9506f9f0858875f4
#: 4b109491b8d94c648cd2b4a856262356
msgid "The user you requested."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:17
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:17
#: 84fbf23886304607b5223e4f3e827432
#: c58aaed5b9274c23be1a82dd7b9c79c2
msgid ":class:`~discord.User`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:19
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:19
#: 1f026a4e35c84df8b91a677e61429aad
#: af069677ce5a4d60af85cdbbc1d89063
msgid "A user with this ID does not exist."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_user:20
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:20
#: a7894ada30514c09917ba342ff6307bf
#: da95e6f09ace4020ba25d649433bd8e3
msgid "Fetching the user failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_webhook:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:3
#: 7b5c3de0d5bc490583eed2148fe3adf2
#: 449315d17af4479895749d1fc700a3f7
msgid "Retrieves a :class:`.Webhook` with the specified ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_webhook:5
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:5
#: 79ce9e3cdd1f42a0bbdd9b54d0263d2c
#: 3d3b2a928bae48ff9d0ced39413a96a9
msgid "The webhook you requested."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_webhook:6
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:6
#: 0f9acb4de476421b8b66cafaad9e8d13
#: c9bfd966d85e4f17a319e5b0e2f717cc
msgid ":class:`.Webhook`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_webhook:8
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:8
#: 78c27258634f42bf842727095db62ee5
#: 9383dddb8c9d4a9c96d2e2bde714702a
msgid "Retrieving the webhook failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_webhook:9
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:9
#: 6c4a19c3d6534ae4849f4b219aab45e7
#: 1d2f993cc43b4a0985c6521221c59f63
msgid "Invalid webhook ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_webhook:10
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:10
#: 38afa3e69538483c9aa15498beaf378e
#: dc3889164ad64b9b8a46fbe38f466076
msgid "You do not have permission to fetch this webhook."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:3
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:3
#: 8b4ef3067a554f3dbd79ec87d454e563
#: c548ce9c4b524c3da67dbf74b4cc39d5
msgid "Gets a :class:`.Widget` from a guild ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:7
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:7
#: f3c9ea1202d04fe98848e776cc633b43
#: d5625d54302d4637bb3b2b87d4f31e8e
msgid "The guild must have the widget enabled to get this information."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:10
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:10
#: 81d3c19143e44cf2b6c178fc3d2fcc77
#: f7f87b3361a641b49965447a1dce4229
msgid "The ID of the guild."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:13
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:13
#: 44fbd4d628244841a9214142b84ff39d
#: e741791aa8f74923af5883745587ff8c
msgid "The guild's widget."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:14
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:14
#: d8bc6239ad544978978964d975b88cf8
#: e89b25c5d0d24a838d657f9ba08a43b5
msgid ":class:`.Widget`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:16
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:16
#: aca5c6cbb697464b90cc953011ed05bc
#: e8fabc52771b436b8e0a6c27db844e38
msgid "The widget for this guild is disabled."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.fetch_widget:17
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:17
#: 6c887b61d6214bbc89a3071595e17351
#: 2f27c3a6ee12429694a5b67441deb3bd
msgid "Retrieving the widget failed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_channels:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:1
#: b886abcab97a46f3940f4064094180e2
#: f32d5942653b4aeea1d89478304ac5c4
msgid "A generator that retrieves every :class:`.abc.GuildChannel` the client can 'access'."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_channels:3
#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_members:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:3
#: d5dfb16bdaa1458bb44264187f4ee38c
#: 5004a72d009b4ad48da460e3f0226d5e
#: 56869a85b444444a8ca59b1a7efbb730
#: c5ee62befce74457992d2467b2b9f126
msgid "This is equivalent to: ::"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_channels:8
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:8
#: a0c271f71b8e461094faec00b52b3100
#: 453e760e4fe949eca74872e9ff2a731f
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.Generator\\`\\\\ \\\\\\[\\:py\\:class\\:\\`\\~discord.abc.GuildChannel\\`\\, \\:py\\:obj\\:\\`None\\`\\, \\:py\\:obj\\:\\`None\\`\\]`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_channels:13
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:13
#: 14df624bee0b4d23b1f9088155d3e882
#: d6b4995ab7fe45328a7aad4f35b7ad0f
msgid "Just because you receive a :class:`.abc.GuildChannel` does not mean that you can communicate in said channel. :meth:`.abc.GuildChannel.permissions_for` should be used for that."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_channels:17
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:17
#: 5eab19fe94124dbcab31f439d0973160
#: d019b7030b0d4dd292eef1b2ab8fc23d
msgid ":class:`.abc.GuildChannel` -- A channel the client can 'access'."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_members:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:1
#: 1e23815e30ed4e7fba2bd525936c0e85
#: e554ea24c5a54cf7b156cfb2eba089d9
msgid "Returns a generator with every :class:`.Member` the client can see."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_members:9
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:9
#: 71e5351f43c7453b898f2b71db1af20e
#: 798086950e7a4af9a4edd3ca9308d766
msgid ":class:`.Member` -- A member the client can see."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_all_members:12
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:12
#: f2fcd09c94c14582973adb76d08cfcfa
#: 40ec435699304262b0a67b66b75f7204
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.Generator\\`\\\\ \\\\\\[\\:py\\:class\\:\\`\\~discord.member.Member\\`\\, \\:py\\:obj\\:\\`None\\`\\, \\:py\\:obj\\:\\`None\\`\\]`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_command:1
#: c0e500eca4654493bcbde640ebc18e15
msgid "Get an :class:`.ApplicationCommand` from the internal list of commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_command:7
#: 297eb50180c641ee936301a619fecf81
msgid "The qualified name of the command to get."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_command:10
#: 4e81f4e8177d4f1fabacd1113a61b684
msgid "The guild ids associated to the command to get."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_command:13
#: 7159cb9856244306be63c209b5f0df30
msgid "The type of the command to get. Defaults to :class:`.ApplicationCommand`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_command:16
#: c868f574c5674690bd081cabc69cc745
msgid "The command that was requested. If not found, returns ``None``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_command:17
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.remove_application_command:12
#: c164f779fe0a43e6a2f6abf608af6f93
#: 3fd3ea872ab545f980cfe41dcb63ffb9
msgid "Optional[:class:`.ApplicationCommand`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_context:3
#: 998de8fc4fc54d12bbfd2d6293de1bee
msgid "Returns the invocation context from the interaction."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_context:5
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_autocomplete_context:5
#: 3614dd7b6e5d41d1b0d77e9c10a3f598
#: 57dab4e256704319b7e2974e3018f106
msgid "This is a more low-level counter-part for :meth:`.process_application_commands` to allow users more fine-grained control over the processing."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_context:9
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_autocomplete_context:9
#: 815d098582864c5aa45ebb68a53bc46b
#: 55ef2128a1d34e2bbb6cbbd958bfc6a2
msgid "The interaction to get the invocation context from."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_context:12
#: f445ef6ad23b46aa8c7b978919888cc2
msgid "The factory class that will be used to create the context. By default, this is :class:`.ApplicationContext`. Should a custom class be provided, it must be similar enough to :class:`.ApplicationContext`\\'s interface."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_context:17
#: 01ec116738e84cb99e4b5d5ce4ffbfcf
msgid "The invocation context. The type of this can change via the ``cls`` parameter."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_application_context:19
#: c55b1028898244e59c76268416abbb49
msgid ":class:`.ApplicationContext`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_autocomplete_context:3
#: 537bfa329bc545788890928e4531fa73
msgid "Returns the autocomplete context from the interaction."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_autocomplete_context:12
#: 11b0ecc315564b658e1d489d95e4e02a
msgid "The factory class that will be used to create the context. By default, this is :class:`.AutocompleteContext`. Should a custom class be provided, it must be similar enough to :class:`.AutocompleteContext`\\'s interface."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_autocomplete_context:17
#: 1bccad822ed94d7889a324aa82d0a214
msgid "The autocomplete context. The type of this can change via the ``cls`` parameter."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_autocomplete_context:19
#: 5f3b2f2fda724232a91fda448c11ca58
msgid ":class:`.AutocompleteContext`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_channel:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:1
#: cf283a472c614b6a97c06ca4bc4a33f0
#: 5508a6586f824d59b8541a888468426a
msgid "Returns a channel or thread with the given ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_channel:4
#: ../../../discord/bot.py:docstring of discord.client.Client.get_emoji:4
#: ../../../discord/bot.py:docstring of discord.client.Client.get_guild:4
#: ../../../discord/bot.py:docstring of discord.client.Client.get_message:7
#: ../../../discord/bot.py:docstring of discord.client.Client.get_or_fetch_user:6
#: ../../../discord/bot.py:docstring of discord.client.Client.get_stage_instance:6
#: ../../../discord/bot.py:docstring of discord.client.Client.get_user:4
#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:4
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:4
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:4
#: ../../../discord/client.py:docstring of discord.client.Client.get_message:7
#: ../../../discord/client.py:docstring of discord.client.Client.get_or_fetch_user:6
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:6
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:4
#: eddc2d6f8feb4541a1e35da5fb5fa865
#: aa6f5761e01343dfb5dbd17675e19b1b
#: d2691dfc9a4f459ea548d04f08d31c5d
#: ab8f154034b64ba7b2b43749f6a9fb82
#: 3d50edd657314501a5c0871876d98665
#: 53be11771a7b47ae918e85312a251da3
#: a2cb1d80eec0470195c36400e8e486ec
#: c025ed112232402daf4b8d114ac6241a
#: f32da88b3c8044adbd70a2275ca95824
#: de2d97cbd9de438996380dd367744796
#: eb0e5def785c4b72aefc34ed33f5b436
#: 6efa35eb7e6e4a80a55faf8eb0880c19
#: cf3701f5d4fc40648e13ec1128cc17be
#: a5352b23d85144febce56eb00c246a6c
msgid "The ID to search for."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_channel:7
#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:7
#: d9a90139b5c84016a67669abf356d83b
#: da085de929bc448ba7dd85d2f77b82a5
msgid "The returned channel or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_channel:8
#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:8
#: de8a5b88032c47fa9f2e41bfa71842c3
#: 7154e2d4041f4c198d90495266e54a04
msgid "Optional[Union[:class:`.abc.GuildChannel`, :class:`.Thread`, :class:`.abc.PrivateChannel`]]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.get_cog:1
#: bec15e570fa04a15b83b7ca7e3389216
msgid "Gets the cog instance requested."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.get_cog:3
#: 4ae249d6843649ce9819e165b69c78ff
msgid "If the cog is not found, ``None`` is returned instead."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.get_cog:6
#: b8d6f18d1d2c44babb0a2315fcf7c1b6
msgid "The name of the cog you are requesting. This is equivalent to the name passed via keyword argument in class creation or the class name if unspecified."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.get_cog:11
#: 412532b7fda248be8233ebf2f47a3c87
msgid "The cog that was requested. If not found, returns ``None``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.get_cog:12
#: 691b6e2bdebc42878e0d4ca7bde4dfcb
msgid "Optional[:class:`Cog`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.get_command:1
#: 64b888dc0e0641c0b11a8699ef47d0f7
msgid "Shortcut for :meth:`.get_application_command`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.get_command:4
#: 090694ded9bb48498938dd4891b64207
msgid "Overridden in :class:`ext.commands.Bot`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_desynced_commands:3
#: b1df2b0021b249f6ba711704e20aaf2c
msgid "Gets the list of commands that are desynced from discord. If ``guild_id`` is specified, it will only return guild commands that are desynced from said guild, else it will return global commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_desynced_commands:7
#: 4988c5769a7f45b093d66279aa435b31
msgid "This function is meant to be used internally, and should only be used if you want to override the default command registration behavior."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_desynced_commands:13
#: a42aa04f99bd45e2adf79377df0fddf9
msgid "The guild id to get the desynced commands for, else global commands if unspecified."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_desynced_commands:16
#: 004d26c269d948c5b29706eae2d3286e
msgid "If you already fetched the commands, you can pass them here to be used. Not recommended for typical usage."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_desynced_commands:19
#: b52ea92694dc43888920b021b5ea6887
msgid "A list of the desynced commands. Each will come with at least the ``cmd`` and ``action`` keys, which respectively contain the command and the action to perform. Other keys may also be present depending on the action, including ``id``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.get_desynced_commands:22
#: 433de8e824a84596ad4b85e75dddfb58
msgid "List[Dict[:class:`str`, Any]]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_emoji:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:1
#: 9525ca2de02e4964817f1a037363a3a2
#: fb968314193c41e78ab0cf26347196bb
msgid "Returns an emoji with the given ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_emoji:7
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:7
#: 9c674dcf871343f694a42135680a1736
#: a379911a0bc14371859a28e118522ae2
msgid "The custom emoji or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_emoji:8
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:8
#: 00d7fd8a5ae747b7a60a6c550b8c741d
#: 30af31ca8c6049c48a52915de2031569
msgid "Optional[:class:`.Emoji`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_guild:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:1
#: c69d0ea814a84230941d413794f573c9
#: 3b1ac5e5ae8c4ecc94365b084ae94a35
msgid "Returns a guild with the given ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_guild:7
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:7
#: e0ee40e0766047a2be7ce2f868ab810b
#: 673107a47b984cadaf646137b3e2eb69
msgid "The guild or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_guild:8
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:8
#: 134847e462854ae78b1f4d67f66abf09
#: 3900a9e292cb446682330566d630ecde
msgid "Optional[:class:`.Guild`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_message:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_message:1
#: 181ecf7ccc494ba8b6465d66a0ef5483
#: 6e64f0c03bd74be7a81dafe3184bfc43
msgid "Returns a message the given ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_message:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_message:3
#: 4844d10606e145829c103661a39a42a0
#: fa7aafea81044108bcf968a2f6dfca4c
msgid "This is useful if you have a message_id but don't want to do an API call to access the message."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_message:10
#: ../../../discord/client.py:docstring of discord.client.Client.get_message:10
#: 876b35b70409440bbe9860921ed2bdde
#: d1077bf08ada45c2b805bd410abb9537
msgid "The returned message or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_message:11
#: ../../../discord/client.py:docstring of discord.client.Client.get_message:11
#: 909a4ebed88b418eb3fc8ad783de4fc2
#: 0594a4a2bf1b41969b935c1ccc68aabe
msgid "Optional[:class:`.Message`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_or_fetch_user:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_or_fetch_user:3
#: ef34cecd55904074aadf36c69ae1a3fe
#: f1d9c3116ee04404b5cfce13930eff83
msgid "Looks up a user in the user cache or fetches if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_or_fetch_user:9
#: ../../../discord/bot.py:docstring of discord.client.Client.get_user:7
#: ../../../discord/client.py:docstring of discord.client.Client.get_or_fetch_user:9
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:7
#: 7a08fd22da7640b392c99f8c05c6c4e6
#: 627478a224a3424f9bb5d93e9a6cd528
#: fe2f9c26926841f5b372a137b8de4013
#: 4992f0dac1404decae7ee3e813e51270
msgid "The user or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_or_fetch_user:10
#: ../../../discord/bot.py:docstring of discord.client.Client.get_user:8
#: ../../../discord/client.py:docstring of discord.client.Client.get_or_fetch_user:10
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:8
#: 759defbb355844809d78aa0b07143820
#: 9ed60c912d854bbc99fe79211535b8c5
#: d08aefbf201f455e9e303fa4c37d4025
#: 55ee47d95dde4dd89a96f905414ef5fc
msgid "Optional[:class:`~discord.User`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_partial_messageable:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:1
#: 044e87bce77b4fec8f6ad808a56bd064
#: e139e8083b5a45858a467abf77a39fc6
msgid "Returns a partial messageable with the given channel ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_partial_messageable:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:3
#: f2ce805dc0414f5a9e5a8755ea1c9643
#: 9441c560cfd8481d8bbae0dd7ce5fd17
msgid "This is useful if you have a channel_id but don't want to do an API call to send messages to it."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_partial_messageable:9
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:9
#: c8479fc87aa246648dbeeb0dc0bd2523
#: 5843bce696fc42019278c28ba4ae576b
msgid "The channel ID to create a partial messageable for."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_partial_messageable:12
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:12
#: 56b0308cd9eb42b28481f6a554cd5570
#: 641c739d27374b7f849dfebfef428313
msgid "The underlying channel type for the partial messageable."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_partial_messageable:15
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:15
#: dcf7536cc4744aa9b4c7648d2327410f
#: b1c7e9712473499cb0d65bd7245e3412
msgid "The partial messageable"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_partial_messageable:16
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:16
#: daa543ad6df34e43a2d9864afb81d0d8
#: ef9d1f64d3c044d98d9febba6ecc477d
msgid ":class:`.PartialMessageable`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_poll:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_poll:1
#: f33a04665ff84187a4db076f2d509d54
#: 58ae80d19524436a95761abe104fa3af
msgid "Returns a poll attached to the given message ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_poll:4
#: ../../../discord/client.py:docstring of discord.client.Client.get_poll:4
#: fce34a83deb34fb09d2fb065f7e9aabc
#: 26ad6e881f9f486f9b1e52af986c3082
msgid "The message ID of the poll to search for."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_poll:7
#: ../../../discord/client.py:docstring of discord.client.Client.get_poll:7
#: 9e724f2a11ec44c4869443876f200c94
#: 20feac62a3094e08a9fb29a93f5ba5b2
msgid "The poll or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_poll:8
#: ../../../discord/client.py:docstring of discord.client.Client.get_poll:8
#: c742fb9939e244578e66f27785b9e0b3
#: e39d3a6f0d1f47338a56385fc145b6dd
msgid "Optional[:class:`.Poll`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_stage_instance:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:1
#: 3d786cc212a44afea512d29b0e007d4e
#: ccca77067a1b42199475211ba6e16c68
msgid "Returns a stage instance with the given stage channel ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_stage_instance:9
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:9
#: d433f0da2b6945b390f4785d5e45686d
#: 24e4d3e8241e46ab8ec4b6033bf7c761
msgid "The stage instance or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_stage_instance:10
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:10
#: 2c039b3d063d4d5daad23166bc2998bc
#: f182ee3a977e476192e53e36b0fd6311
msgid "Optional[:class:`.StageInstance`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_sticker:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:1
#: f10646f6188b45e79224058f73d2f2a8
#: 3b8a42c81c074058ba5f7bac4b398156
msgid "Returns a guild sticker with the given ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_sticker:7
#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:7
#: c15a89f27028488cb7b2336b8063f854
#: 20ab5455c5404e18984b4e696b652797
msgid "To retrieve standard stickers, use :meth:`.fetch_sticker`. or :meth:`.fetch_premium_sticker_packs`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_sticker:10
#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:10
#: a8df3300fa7947d1885ff98542d67aeb
#: 7322662df9ea4fb996060efb71bf6513
msgid "The sticker or ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_sticker:11
#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:11
#: 6340a201b4ee40d08e8349272ea2eb4f
#: be2728359991404a84c574a1e4fa5fba
msgid "Optional[:class:`.GuildSticker`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.get_user:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:1
#: ad521edf83024b639b0931097a70fbc6
#: c6af911fdc7949b39f3c499e45effb7c
msgid "Returns a user with the given ID."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.group:1
#: 3534240b400047cf99d43a0882749281
#: 4857181fe5e74fcb9360e150aada34a3
msgid "A shortcut decorator that initializes the provided subclass of :class:`.SlashCommandGroup` and adds it to the internal command list via :meth:`add_application_command`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.group:7
#: 12eda575d2994bb9b8ec76bc781e2b9f
#: 29e956e4b6c547e5a38016662e56675b
msgid "The name of the group to create. This will resolve to the name of the decorated class if ``None`` is passed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.guilds:1
#: ../../../discord/client.py:docstring of discord.Client.guilds:1
#: 2f2a3e8f246c4f30b877af0e3e88001b
#: aa9d5b5e1674421796b825c972c5ab80
msgid "The guilds that the connected client is a member of."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.intents:1
#: ../../../discord/client.py:docstring of discord.Client.intents:1
#: 21faa16203234f99a69b91b463601bd2
#: 69d37e50e43e4c4ca25bf3f6f5229aed
msgid "The intents configured for this connection."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.invoke_application_command:3
#: 0fef6661f4904fc584c2c3c675c11684
msgid "Invokes the application command given under the invocation context and handles all the internal event dispatch mechanisms."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.invoke_application_command:7
#: 10f77b8bbb3042e09dc3daf5dd79b208
msgid "The invocation context to invoke."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.is_closed:1
#: ../../../discord/client.py:docstring of discord.client.Client.is_closed:1
#: 1195a817f20744f69117a573c7f4c5d1
#: 8561fe440a50492b9878deae73ac0df6
msgid "Indicates if the WebSocket connection is closed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.is_closed:4
#: ../../../discord/bot.py:docstring of discord.client.Client.is_ready:4
#: ../../../discord/client.py:docstring of discord.client.Client.is_closed:4
#: ../../../discord/client.py:docstring of discord.client.Client.is_ready:4
#: 1044d7a76781488d8e388f935f5d4867
#: 5bae7658d8d04f08ba4e087c58f768ee
#: 4675390cbd8e49a485b9994564bbc23e
#: 3a3b142cc4294f76ade57c501fb264ae
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.is_owner:3
#: 659c6943644c45f6b44ac33cc1d9896e
msgid "Checks if a :class:`~discord.User` or :class:`~discord.Member` is the owner of this bot."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.is_owner:6
#: 3e69877b74ed48cab87f6fe3ec2f5bbd
msgid "If an :attr:`owner_id` is not set, it is fetched automatically through the use of :meth:`~.Bot.application_info`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.is_owner:9
#: 6872f8c9608949fab7ac89cb5072f36d
msgid "The function also checks if the application is team-owned if :attr:`owner_ids` is not set."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.is_owner:14
#: 784e3a78f66b4c67b2252bda0ab50130
msgid "The user to check for."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.is_owner:17
#: af103a9120b341d7ac2dc05f2fc6b7f0
msgid "Whether the user is the owner."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.is_ready:1
#: ../../../discord/client.py:docstring of discord.client.Client.is_ready:1
#: e491ff5681a44d58918b01dea27ff898
#: 349e1cad1447424e8bd6ebf337f5cfc5
msgid "Specifies if the client's internal cache is ready for use."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.is_ws_ratelimited:1
#: ../../../discord/client.py:docstring of discord.client.Client.is_ws_ratelimited:1
#: 1d19112534464592be462f4549362eed
#: 8ad42b7d89c440729b11cac972973ccc
msgid "Whether the WebSocket is currently rate limited."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.is_ws_ratelimited:3
#: ../../../discord/client.py:docstring of discord.client.Client.is_ws_ratelimited:3
#: 62af1fa7dcf84492b242000ea4241503
#: 04f3a26c21ee4473a2b07d0008b29a0a
msgid "This can be useful to know when deciding whether you should query members using HTTP or via the gateway. :rtype: :sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.latency:1
#: ../../../discord/client.py:docstring of discord.Client.latency:1
#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latency:1
#: c5ab6840e90349f19ce335c373c2303d
#: 7fc9415166914dd490d0fe681b1b7235
#: 631e9f8e5e5f495087a3bad832be354c
msgid "Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.latency:3
#: ../../../discord/client.py:docstring of discord.Client.latency:3
#: 421f8b497847440fbd6dbe4be0a01720
#: c29a7ecd61d54dfcacfd68a73ce394c4
msgid "This could be referred to as the Discord WebSocket protocol latency."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:1
#: 026aa7d6f31d4990a7b349b52d1e57ac
msgid "Loads an extension."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:3
#: 443fb754e9e4450d9ba7b4c49645dd5d
msgid "An extension is a python module that contains commands, cogs, or listeners."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:6
#: eb4cd6b235244515b0c8d247f851230e
msgid "An extension must have a global function, ``setup`` defined as the entry point on what to do when the extension is loaded. This entry point must have a single argument, the ``bot``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:10
#: e954aa1ba2b04355a43ce15be4b3c1a6
msgid "The extension passed can either be the direct name of a file within the current working directory or a folder that contains multiple extensions."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:14
#: b4709a5104a8400c9ac23f133549b6c6
msgid "The extension or folder name to load. It must be dot separated like regular Python imports if accessing a submodule. e.g. ``foo.test`` if you want to import ``foo/test.py``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:19
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:12
#: 2fd13f9b72724c3a93c62cbf7ce3e595
#: d1132fd4f8ad40b192cb8558349a7df4
msgid "The package name to resolve relative imports with. This is required when loading an extension using a relative path, e.g ``.foo.test``. Defaults to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:19
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:12
#: d98754a427e84ae682ce85cdb8557bec
#: 453661366177409d98ac5a2c9d0be70b
msgid "The package name to resolve relative imports with. This is required when loading an extension using a relative path, e.g ``.foo.test``. Defaults to ``None``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:27
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:20
#: 4872f607b11d4176b8657dc8de35a45e
#: cc7e6a282e0c4b9494e3e312a4ce066d
msgid "If subdirectories under the given head directory should be recursively loaded. Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:27
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:20
#: 235222cbb8c44095937e8b67a59eba52
#: 43fdb77d35194ceba81306f5e8f23d5f
msgid "If subdirectories under the given head directory should be recursively loaded. Defaults to ``False``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:34
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:27
#: e1406c82b3ec42d7ba4f1a9a7f0bc9d8
#: 3fa06603acb34fba88c0645b6cf5bcc0
msgid "If exceptions should be stored or raised. If set to ``True``, all exceptions encountered will be stored in a returned dictionary as a load status. If set to ``False``, if any exceptions are encountered they will be raised and the bot will be closed. If no exceptions are encountered, a list of loaded extension names will be returned. Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:34
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:27
#: 287d8e3cd45341309195aa3dd7ab8c94
#: b2f34dc42af041d8b4ac3c04a3dd3932
msgid "If exceptions should be stored or raised. If set to ``True``, all exceptions encountered will be stored in a returned dictionary as a load status. If set to ``False``, if any exceptions are encountered they will be raised and the bot will be closed. If no exceptions are encountered, a list of loaded extension names will be returned. Defaults to ``False``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:45
#: 099c61d1269b47109fe9e3a1cc10e009
msgid "If the store parameter is set to ``True``, a dictionary will be returned that contains keys to represent the loaded extension names. The values bound to each key can either be an exception that occurred when loading that extension or a ``True`` boolean representing a successful load. If the store parameter is set to ``False``, either a list containing a list of loaded extensions or nothing due to an encountered exception."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:51
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:44
#: 83832163d58347d7a6e6af84f4c8e4fb
#: 9719ff7b51c74170bbe4452541cf5c12
msgid "Optional[Union[Dict[:class:`str`, Union[:exc:`errors.ExtensionError`, :class:`bool`]], List[:class:`str`]]]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:53
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:22
#: 85002126743f4f13988ae3b6842068e6
#: c836be69415a4e9aa0ad9be517cc2f16
msgid "The extension could not be imported.     This is also raised if the name of the extension could not     be resolved using the provided ``package`` parameter."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:54
#: a5a3724f3d244704959a79b59e34abc0
msgid "The extension is already loaded."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:55
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:23
#: 67911d91ed4a43efbe1e31b46fc74e6d
#: 7db0d18ba5814112b94d84cff9733249
msgid "The extension does not have a setup function."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extension:56
#: 8f842e56308f4d1c88c47684ea45314f
msgid "The extension or its setup function had an execution error."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:1
#: a760357f52544ed481412457c04c3803
msgid "Loads multiple extensions at once."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:3
#: fdfb6f2448094adf9318c69174beeeea
msgid "This method simplifies the process of loading multiple extensions by handling the looping of ``load_extension``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:7
#: f8a0970ba0114e93b9b61f4b6528e11c
msgid "The extension or folder names to load. It must be dot separated like regular Python imports if accessing a submodule. e.g. ``foo.test`` if you want to import ``foo/test.py``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:38
#: b5fb058740df4f5697c3610201853111
msgid "If the store parameter is set to ``True``, a dictionary will be returned that contains keys to represent the loaded extension names. The values bound to each key can either be an exception that occurred when loading that extension or a ``True`` boolean representing a successful load. If the store parameter is set to ``False``, either a list containing names of loaded extensions or nothing due to an encountered exception."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:46
#: bfa57369a86a4cda8d1bd669bb3f567b
msgid "A given extension could not be imported.     This is also raised if the name of the extension could not     be resolved using the provided ``package`` parameter."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:47
#: c65a8880c6e24c0ba423274ba3ab9e74
msgid "A given extension is already loaded."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:48
#: 066e528badfb4c9081642380ae4c0118
msgid "A given extension does not have a setup function."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.load_extensions:49
#: cf251565d0a04577a80b44ef3a0c45ae
msgid "A given extension or its setup function had an execution error."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.login:3
#: ../../../discord/client.py:docstring of discord.client.Client.login:3
#: 049a0834b6b047f99314936f2f1163ba
#: 881f8ede0215463c9435a215b8ad1baa
msgid "Logs in the client with the specified credentials."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.login:6
#: ../../../discord/client.py:docstring of discord.client.Client.login:6
#: 37485eb978c94d0ab2f8e20f3c9d44f0
#: cccf92fecca7496a9b0a7b4084434ec0
msgid "The authentication token. Do not prefix this token with anything as the library will do it for you."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.login:10
#: ../../../discord/client.py:docstring of discord.client.Client.login:10
#: 441a4bc07886491dbe40a2d51a9d6027
#: 479dacc5910743e4ab34eadb1e89cc94
msgid "The token was in invalid type."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.login:11
#: ../../../discord/client.py:docstring of discord.client.Client.login:11
#: e47b353c4c374b69a0516a6c01b5f5db
#: a4dabd304618452d84eaae59ef407bc3
msgid "The wrong credentials are passed."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.login:12
#: ../../../discord/client.py:docstring of discord.client.Client.login:12
#: b7bea11ed3954e4d8bb8ceba44c2c5a3
#: ef77098375c444cbb2000984eb9a837c
msgid "An unknown HTTP related error occurred,     usually when it isn't 200 or the known incorrect credentials     passing status code."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.on_application_command_error:3
#: 9bd06ccb118d45cfade916f4c2e9e09d
msgid "The default command error handler provided by the bot."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.on_application_command_error:5
#: c577795c8bcb40caae05540580226588
msgid "By default, this prints to :data:`sys.stderr` however it could be overridden to have a different implementation."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.on_application_command_error:8
#: 14d54c8c45da4b1ea8ea9a527ef62098
msgid "This only fires if you do not specify any listeners for command error."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.on_error:3
#: ../../../discord/client.py:docstring of discord.client.Client.on_error:3
#: 57179a6f7b13404b8d698521898a6d9c
#: 546966820d884d0288a378da59dab4a3
msgid "The default error handler provided by the client."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.on_error:5
#: ../../../discord/client.py:docstring of discord.client.Client.on_error:5
#: 58a09ed6103242578e6f09b9c61c0f17
#: e5ee13e867c44f818e2d97c5b9d7a201
msgid "By default, this prints to :data:`sys.stderr` however it could be overridden to have a different implementation. Check :func:`~discord.on_error` for more details."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.persistent_views:1
#: ../../../discord/client.py:docstring of discord.Client.persistent_views:1
#: 0ddbaefb41734b77ad0d3ad0792c3d18
#: 9568e6a0a03943b2aca1df996317ad5d
msgid "A sequence of persistent views added to the client."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.polls:1
#: ../../../discord/client.py:docstring of discord.Client.polls:1
#: 7052b64d58da473a956cb108172efa05
#: 70cabade8d704caf820fae10ccca2de4
msgid "The polls that the connected client has."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.private_channels:1
#: ../../../discord/client.py:docstring of discord.Client.private_channels:1
#: c2acbbccabb944aeb2cfcdebcfaaa94c
#: 36549ec6731b4140b8765d2abf97b285
msgid "The private channels that the connected client is participating on."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.private_channels:5
#: ../../../discord/client.py:docstring of discord.Client.private_channels:5
#: c9cd8785f1e7403e86e3a939de337f91
#: 3ef2fdafd219459695673b3b81373844
msgid "This returns only up to 128 most recent private channels due to an internal working on how Discord deals with private channels."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.process_application_commands:3
#: 21363eab134d440382c795173dd057c0
msgid "This function processes the commands that have been registered to the bot and other groups. Without this coroutine, none of the commands will be triggered."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.process_application_commands:7
#: b02242879b784c65ac623cbda25aee83
msgid "By default, this coroutine is called inside the :func:`.on_interaction` event. If you choose to override the :func:`.on_interaction` event, then you should invoke this coroutine as well."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.process_application_commands:11
#: 5a7f80f98b7445e0bbe1ffbaf4f75a5c
msgid "This function finds a registered command matching the interaction id from application commands and invokes it. If no matching command was found, it replies to the interaction with a default message."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.process_application_commands:18
#: 5eba8aff592647dbb428a36b08475afc
msgid "The interaction to process"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.process_application_commands:21
#: 098da280f563492c8010c8ad52ae3b46
msgid "Whether to automatically sync and unregister the command if it is not found in the internal cache. This will invoke the :meth:`~.Bot.sync_commands` method on the context of the command, either globally or per-guild, based on the type of the command, respectively. Defaults to :attr:`.Bot.auto_sync_commands`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_command:3
#: 6fb0bc75b4244e36896183264590e7f1
msgid "Registers a command. If the command has ``guild_ids`` set, or if the ``guild_ids`` parameter is passed, the command will be registered as a guild command for those guilds."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_command:7
#: 4ea2920e2db64df6859efe1b1f524b48
msgid "The command to register."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_command:10
#: 8b8d635e6e8d4e7c8a3aed8d2b2113e4
msgid "Whether to force the command to be registered. If this is set to False, the command will only be registered if it seems to already be registered and up to date with our internal cache. Defaults to True."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_command:14
#: 4da5da38c13c4cce84fa4a5f1324b431
msgid "A list of guild ids to register the command for. If this is not set, the command's :attr:`ApplicationCommand.guild_ids` attribute will be used."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_command:18
#: 84a8824b3dbc412281a70609fb40e4db
msgid "The command that was registered"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_command:19
#: a32da6d17c784b489e12a5b06559a374
msgid ":class:`~.ApplicationCommand`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:3
#: fbe13cfdf4c344ce8845196b3c9c308c
msgid "Register a list of commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:8
#: de60834094264c87b010a83d28ef3a31
msgid "A list of commands to register. If this is not set (``None``), then all commands will be registered."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:11
#: f7d13a7b72ee45829b22b9d1d4115004
msgid "If this is set, the commands will be registered as a guild command for the respective guild. If it is not set, the commands will be registered according to their :attr:`ApplicationCommand.guild_ids` attribute."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:15
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:30
#: 8033302734aa4ce0a6cb372c445cdb12
#: a33a45bcc1884eb9868e56e24ecf878c
msgid "The method to use when registering the commands. If this is set to \"individual\", then each command will be registered individually. If this is set to \"bulk\", then all commands will be registered in bulk. If this is set to \"auto\", then the method will be determined automatically. Defaults to \"bulk\"."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:20
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:35
#: 8faca78fa87f4d3bb12fb70fd01d35e3
#: c47fe8b3f3974cdfbf1b1d6a522ccc91
msgid "Registers the commands regardless of the state of the command on Discord. This uses one less API call, but can result in hitting rate limits more often. Defaults to False."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:24
#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:52
#: 7a51594d4dce42bc92a656b664696dce
#: c6b87f7c2ff44c25b7f4b139785d8b75
msgid "Whether to delete existing commands that are not in the list of commands to register. Defaults to True."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.register_commands:27
#: 954c934a3ae542bd8e48d65c6872c37f
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`list\\`\\\\ \\\\\\[\\:py\\:class\\:\\`\\~discord.types.interactions.ApplicationCommand\\`\\]`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:1
#: b99435e52b874c98861200f494f1266a
msgid "Atomically reloads an extension."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:3
#: eb3fc9d30ad248d59bc53b98fd0a8110
msgid "This replaces the extension with the same extension, only refreshed. This is equivalent to a :meth:`unload_extension` followed by a :meth:`load_extension` except done in an atomic way. That is, if an operation fails mid-reload then the bot will roll back to the prior working state."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:9
#: 11271e1cdfbf422bb9d35cef4a1a2622
msgid "The extension name to reload. It must be dot separated like regular Python imports if accessing a submodule. e.g. ``foo.test`` if you want to import ``foo/test.py``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:14
#: f0dc77f6bc6744e08e89bd30c7719544
msgid "The package name to resolve relative imports with. This is required when reloading an extension using a relative path, e.g ``.foo.test``. Defaults to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:14
#: c257e5f934bd4c41ab4bd9003112a5d5
msgid "The package name to resolve relative imports with. This is required when reloading an extension using a relative path, e.g ``.foo.test``. Defaults to ``None``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:21
#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:25
#: b2947b8e3f1d42259d4d6afe1406758d
#: 4cb97699dc1f4e5b9f7c75d398086528
msgid "The extension was not loaded."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.reload_extension:24
#: a2829fe98fe748338b65015d93fc299a
msgid "The extension setup function had an execution error."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.remove_application_command:1
#: 94d9dca4e09f47bcbb41742185f8a778
msgid "Remove an :class:`.ApplicationCommand` from the internal list of commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.remove_application_command:7
#: a272e12723b0440e8cdd4b64dd581be0
msgid "The command to remove."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.remove_application_command:10
#: 5c3fa5ba0e24446ca0c5d451ab0d7ef3
msgid "The command that was removed. If the command has not been added, ``None`` is returned instead."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.remove_check:1
#: 318002b550784a58a407ca8a6ea60975
msgid "Removes a global check from the bot. This function is idempotent and will not raise an exception if the function is not in the global checks."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.remove_check:6
#: ac0f014b030846a4886347653f09eae7
msgid "The function to remove from the global checks."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.BotBase.remove_check:8
#: 5ccca55b893a4ce196b56ac7b4bf3fea
msgid "If the function was added with ``call_once=True`` in the :meth:`.Bot.add_check` call or using :meth:`.check_once`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.remove_cog:1
#: afc46aa053de44acac79848d8a4d48bd
msgid "Removes a cog from the bot and returns it."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.remove_cog:3
#: 8760d9d2494745fd8c2bbf789078f622
msgid "All registered commands and event listeners that the cog has registered will be removed as well."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.remove_cog:6
#: a6da2cef0f344cbc97b69314e265bf25
msgid "If no cog is found then this method has no effect."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.remove_cog:9
#: 206390d6458e4be89131c95feaa9c242
msgid "The name of the cog to remove."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.remove_cog:12
#: 079d5ea3e3c547edb0104884b59c1d1d
msgid "The cog that was removed. ``None`` if not found."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.remove_cog:13
#: 10349ef7943d47cf9ee8c96d7a3e3f09
msgid "Optional[:class:`.Cog`]"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.remove_listener:1
#: ../../../discord/client.py:docstring of discord.client.Client.remove_listener:1
#: f402b73bece24cc49036238c228a2cf6
#: 3afa985e90bb447083858f428e726948
msgid "Removes a listener from the pool of listeners."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.remove_listener:4
#: ../../../discord/client.py:docstring of discord.client.Client.remove_listener:4
#: 0ae89918698b491f89b9233a129a1897
#: 00707111e60e4748b739759550d4b312
msgid "The function that was used as a listener to remove."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.remove_listener:6
#: ../../../discord/client.py:docstring of discord.client.Client.remove_listener:6
#: 515f9c536b89476fba576f7ce5614414
#: a6f3d8a9797f4eba930d6afae8af07c0
msgid "The name of the event we want to remove. Defaults to ``func.__name__``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.run:1
#: ../../../discord/client.py:docstring of discord.client.Client.run:1
#: 571249fef8cd45c2981975498a4e7851
#: eea185c9a6434d46895e699dc7ba43d1
msgid "A blocking call that abstracts away the event loop initialisation from you."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.run:4
#: ../../../discord/client.py:docstring of discord.client.Client.run:4
#: 2106434fbe294fed9159326a73846c02
#: 8100d4183d2f462db06dffe4e4205c62
msgid "If you want more control over the event loop then this function should not be used. Use :meth:`start` coroutine or :meth:`connect` + :meth:`login`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.run:8
#: ../../../discord/client.py:docstring of discord.client.Client.run:8
#: bf32743d60dc4a47b2809974b262f96b
#: 248d9d57107e4267bae9d8125afe64dc
msgid "Roughly Equivalent to: ::"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.run:20
#: ../../../discord/client.py:docstring of discord.client.Client.run:20
#: 5068dc186f7d4b5c98caaa8752b6b428
#: b0b5d69f40b84443b9a2b0ccb0c03ce7
msgid "This function must be the last function to call due to the fact that it is blocking. That means that registration of events or anything being called after this function call will not execute until it returns."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.start:3
#: ../../../discord/client.py:docstring of discord.client.Client.start:3
#: 904fe45f358146e683fec60eee80c2e5
#: 0c9244ba088248ab8217849c96b68d6b
msgid "A shorthand coroutine for :meth:`login` + :meth:`connect`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.start:5
#: ../../../discord/client.py:docstring of discord.client.Client.start:5
#: 02034fb9cb9c44b7810a0d146353bf07
#: ff7f80e610de4dba8806a5fd88577b15
msgid "An unexpected keyword argument was received."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.status:1
#: ../../../discord/client.py:docstring of discord.Client.status:1
#: ab9038811b594d4ea2ea96f42440f117
#: 3bfb74f1e043488aaac746e167c11287
msgid "The status being used upon logging on to Discord."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.stickers:1
#: ../../../discord/client.py:docstring of discord.Client.stickers:1
#: b39bab7b652b4d4f98cf18b2b9db6484
#: 7f97759ffaa84ee58320cf59751ad3c5
msgid "The stickers that the connected client has."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.store_url:1
#: ../../../discord/client.py:docstring of discord.Client.store_url:1
#: 4a2351568c31486793eb53e153daa658
#: 668c77f358474bf7913f25d1f50b3093
msgid "The URL that leads to the application's store page for monetization."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:3
#: e41ee7cfb81d4efbb82555468a565e3b
msgid "Registers all commands that have been added through :meth:`.add_application_command`. This method cleans up all commands over the API and should sync them with the internal cache of commands. It attempts to register the commands in the most efficient way possible, unless ``force`` is set to ``True``, in which case it will always register all commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:8
#: af342759879c41d2b37da067dc43b3fb
msgid "By default, this coroutine is called inside the :func:`.on_connect` event. If you choose to override the :func:`.on_connect` event, then you should invoke this coroutine as well such as the following:"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:20
#: ee42e6eda6db4919b8cbd51d9980a031
msgid "If you remove all guild commands from a particular guild, the library may not be able to detect and update the commands accordingly, as it would have to individually check for each guild. To force the library to unregister a guild's commands, call this function with ``commands=[]`` and ``guild_ids=[guild_id]``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:27
#: d9a16639758842dc8da3fb43f1016194
msgid "A list of commands to register. If this is not set (None), then all commands will be registered."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:39
#: 4e2c5bcbf6fa4e04bb1a21be03790c07
msgid "A list of guild ids to register the commands for. If this is not set, the commands' :attr:`~.ApplicationCommand.guild_ids` attribute will be used."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:43
#: c7ee914bd75d468a8a9831931c65076e
msgid "Whether to register guild commands. Defaults to True."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.sync_commands:46
#: 774275396f9e4845a5555975a19daa76
msgid "A list of guilds ids to check for commands to unregister, since the bot would otherwise have to check all guilds. Unlike ``guild_ids``, this does not alter the commands' :attr:`~.ApplicationCommand.guild_ids` attribute, instead it adds the guild ids to a list of guilds to sync commands for. If ``register_guild_commands`` is set to False, then this parameter is ignored."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:1
#: 911175a53ba24fc4a4c0ba2d0cf64aa2
msgid "Unloads an extension."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:3
#: be8975adc11947f5a3b07d92c76bc7f5
msgid "When the extension is unloaded, all commands, listeners, and cogs are removed from the bot and the module is un-imported."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:6
#: 7d49b0308c7541fb82f6fbecf79a8108
msgid "The extension can provide an optional global function, ``teardown``, to do miscellaneous clean-up if necessary. This function takes a single parameter, the ``bot``, similar to ``setup`` from :meth:`~.Bot.load_extension`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:12
#: 86a50feef9e14adaba9477a06f226bf1
msgid "The extension name to unload. It must be dot separated like regular Python imports if accessing a submodule. e.g. ``foo.test`` if you want to import ``foo/test.py``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:17
#: c6b000d16a9943f4be19931fa26a7326
msgid "The package name to resolve relative imports with. This is required when unloading an extension using a relative path, e.g ``.foo.test``. Defaults to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:17
#: 323fe63c4de8498e9c77dbd7765d0be5
msgid "The package name to resolve relative imports with. This is required when unloading an extension using a relative path, e.g ``.foo.test``. Defaults to ``None``."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.cog.CogMixin.unload_extension:24
#: 017dba9563364359a4934fe0a812245f
msgid "The name of the extension could not     be resolved using the provided ``package`` parameter."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.update_role_connection_metadata_records:3
#: ../../../discord/client.py:docstring of discord.client.Client.update_role_connection_metadata_records:3
#: 6f4ba32dcd474a5bb21ddc0448b64cc8
#: 523485ced52a43c8aa55e341075eb4ee
msgid "Updates the bot's role connection metadata records."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.update_role_connection_metadata_records:8
#: ../../../discord/client.py:docstring of discord.client.Client.update_role_connection_metadata_records:8
#: f35e47ae72cb45fbbd43a5849db2f4ed
#: 60183bcf9bfc4118887a2ccd6ff7628d
msgid "The new metadata records to send to Discord."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.update_role_connection_metadata_records:11
#: ../../../discord/client.py:docstring of discord.client.Client.update_role_connection_metadata_records:11
#: 157edf86c4214bac9cc97778a341cb81
#: c96f685db8e4412abc5b2eb5516af20d
msgid "The updated role connection metadata records."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.user:1
#: ../../../discord/client.py:docstring of discord.Client.user:1
#: a88e758c5a764f1b9008d208a82a5baf
#: 97041bb84e204971be0d4b898b4650b9
msgid "Represents the connected client. ``None`` if not logged in."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.users:1
#: ../../../discord/client.py:docstring of discord.Client.users:1
#: 6d3be79316ad4aed8e4440853891714e
#: fc93c7b55c98453b8c74c893a94a4d93
msgid "Returns a list of all the users the bot can see."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.voice_clients:1
#: ../../../discord/client.py:docstring of discord.Client.voice_clients:1
#: b67ba7a02b43409aaa2626f955f79fd2
#: fd4f49159bde43c19e715fb43b528dc2
msgid "Represents a list of voice connections."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.Bot.voice_clients:3
#: ../../../discord/client.py:docstring of discord.Client.voice_clients:3
#: 9075a14b38ea45a6b0a11e551ef621f2
#: bdea0cd5eb8b41c28c3cec1a9909439e
msgid "These are usually :class:`.VoiceClient` instances."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:3
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:3
#: 6487197b421c48bba8784b3fa1ff4ac9
#: f6969d65a8ad4d76a8541c35f987366a
msgid "Waits for a WebSocket event to be dispatched."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:5
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:5
#: 0b048b61ad98439db8940a4d2d8d3701
#: 4a77c5e3b9c94a3cbceb1ec2ba32a585
msgid "This could be used to wait for a user to reply to a message, or to react to a message, or to edit a message in a self-contained way."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:9
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:9
#: 689487a846eb47e093ba8e1d91517750
#: 2999411ac0f44d41b0d21aa8b643ceec
msgid "The ``timeout`` parameter is passed onto :func:`asyncio.wait_for`. By default, it does not timeout. Note that this does propagate the :exc:`asyncio.TimeoutError` for you in case of timeout and is provided for ease of use."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:14
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:14
#: 0cef96bb40b84218860e67a2b01b3370
#: ed7edaf423424cceb8a312cd0f2bc274
msgid "In case the event returns multiple arguments, a :class:`tuple` containing those arguments is returned instead. Please check the :ref:`documentation <discord-api-events>` for a list of events and their parameters."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:19
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:19
#: ee2bd0327d864fb28565cad59831a983
#: c2b695e438ae4e4f9b49ab270bce5cfd
msgid "This function returns the **first event that meets the requirements**."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:22
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:22
#: cd139f56acdc485595a3eb1113c5e0ff
#: 62466a8b8b8848b1ac878363c02f83fe
msgid "The event name, similar to the :ref:`event reference <discord-api-events>`, but without the ``on_`` prefix, to wait for."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:26
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:26
#: 41e9fd8669df481ba87c83815fb92f01
#: 2e7da0e8cdb443169dd45ad780cde403
msgid "A predicate to check what to wait for. The arguments must meet the parameters of the event being waited for."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:30
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:30
#: b5ccde8f18c74e6e8939f7d64c2241f9
#: 8e2d13f5ca674b6fb62f9ab43b3c05da
msgid "The number of seconds to wait before timing out and raising :exc:`asyncio.TimeoutError`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:34
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:34
#: ea5b0123a5434897907777cc1da3e32b
#: c7f6e84c6978498893e7e0b14d768782
msgid "Returns no arguments, a single argument, or a :class:`tuple` of multiple arguments that mirrors the parameters passed in the :ref:`event reference <discord-api-events>`."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:39
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:39
#: fe1e49bf56f0410eb7b43d04fc145ddd
#: ba64155f0c544ea6bb114a551d0523e2
msgid "Raised if a timeout is provided and reached."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:43
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:43
#: fbf53c322b9b4a2190fb5211f9148bfe
#: d2377c8732a94fd890ed08211bbfe627
msgid "Waiting for a user reply: ::"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_for:57
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:57
#: 3f2b62ede5b54e9cadcfbb3edf7e3f81
#: 4edf14c30f3242f19f5c102a99f06d6b
msgid "Waiting for a thumbs up reaction from the message author: ::"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.client.Client.wait_until_ready:3
#: ../../../discord/client.py:docstring of discord.client.Client.wait_until_ready:3
#: 374ebcd380c14eaebda917973c9c27a6
#: 48042bb6d6bc451c8a38933fc1b748f5
msgid "Waits until the client's internal cache is all ready."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.walk_application_commands:1
#: 27b08f7dc25947a086a2feceb0523df6
msgid "An iterator that recursively walks through all application commands and subcommands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.walk_application_commands:3
#: 5492eec6b734488c9e67946a7180b89a
msgid ":class:`.ApplicationCommand` -- An application command from the internal list of application commands."
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.ApplicationCommandMixin.walk_application_commands:6
#: f25e99257d0a483ebe765fa4ef0fdf7a
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.Generator\\`\\\\ \\\\\\[\\:py\\:class\\:\\`\\~discord.commands.core.ApplicationCommand\\`\\, \\:py\\:obj\\:\\`None\\`\\, \\:py\\:obj\\:\\`None\\`\\]`"
msgstr ""

#: ../../../discord/bot.py:docstring of discord.bot.AutoShardedBot:1
#: 61133e69adc34f46b680972b64aba970
msgid "This is similar to :class:`.Bot` except that it is inherited from :class:`discord.AutoShardedClient` instead."
msgstr ""

#: ../../api/clients.rst:39
#: 9483ed2b1c48482885c0ca1eb34130ec
msgid "Clients"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:1
#: bf69e7a4021a45c8a77931f74ed76550
msgid "Represents a client connection that connects to Discord. This class is used to interact with the Discord WebSocket and API."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:4
#: 5c069020781a42fe96c83e24a1f6c3c4
msgid "A number of options can be passed to the :class:`Client`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:6
#: a05ad8a60fa94a36be6482dc51364684
msgid "The maximum number of messages to store in the internal message cache. This defaults to ``1000``. Passing in ``None`` disables the message cache.  .. versionchanged:: 1.3     Allow disabling the message cache and change the default size to ``1000``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:6
#: c9df9a316415445bbda61e5dc12eea71
msgid "The maximum number of messages to store in the internal message cache. This defaults to ``1000``. Passing in ``None`` disables the message cache."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:9
#: c3595a83fa414fa58ebb0c3fe72870c4
msgid "Allow disabling the message cache and change the default size to ``1000``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:13
#: 6c88dd4b014e4fd68019bf91e0e79449
msgid "The :class:`asyncio.AbstractEventLoop` to use for asynchronous operations. Defaults to ``None``, in which case the default event loop is used via :func:`asyncio.get_event_loop()`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:17
#: 21cc11771cf14b8482b82ed348a0bcc9
msgid "The connector to use for connection pooling."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:19
#: 36e77ef20089453bad2c58061b76319e
msgid "Proxy URL."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:21
#: 2bca727e64604375afc0316e0da77488
msgid "An object that represents proxy HTTP Basic Authorization."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:23
#: 22b22764dfe94753af363b0e2e855b53
msgid "Integer starting at ``0`` and less than :attr:`.shard_count`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:25
#: 2994835195fe455b9ba97aa0bf93c946
msgid "The total number of shards."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:29
#: 0cbc330e9f874100a24ecdd7f73bf8bb
msgid "The intents that you want to enable for the session. This is a way of disabling and enabling certain gateway events from triggering and being sent. If not given, defaults to a regularly constructed :class:`Intents` class.  .. versionadded:: 1.5"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:29
#: f78cb44c1747402fa0d2daa48076c449
msgid "The intents that you want to enable for the session. This is a way of disabling and enabling certain gateway events from triggering and being sent. If not given, defaults to a regularly constructed :class:`Intents` class."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:35
#: d1e04968f26046eb83cc40c32fffbce4
msgid "Allows for finer control over how the library caches members. If not given, defaults to cache as much as possible with the currently selected intents.  .. versionadded:: 1.5"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:35
#: 1cf5a217e1c448509380cd0675ac2861
msgid "Allows for finer control over how the library caches members. If not given, defaults to cache as much as possible with the currently selected intents."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:41
#: 839eb639389f4e90bcaf5390534f7254
msgid "Indicates if :func:`.on_ready` should be delayed to chunk all guilds at start-up if necessary. This operation is incredibly slow for large amounts of guilds. The default is ``True`` if :attr:`Intents.members` is ``True``.  .. versionadded:: 1.5"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:41
#: 4ac529aded574578a8be71ceea066b6d
msgid "Indicates if :func:`.on_ready` should be delayed to chunk all guilds at start-up if necessary. This operation is incredibly slow for large amounts of guilds. The default is ``True`` if :attr:`Intents.members` is ``True``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:48
#: ff86deee1e964eff876d58a0c1bf9af1
msgid "A status to start your presence with upon logging on to Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:50
#: 595862fc879e41dbbdea585be33d1345
msgid "An activity to start your presence with upon logging on to Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:52
#: faae2eb41a6849ea931db8d8e3b6fd1c
msgid "Control how the client handles mentions by default on every message sent.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:52
#: 58dbe8273cff49848baf5100136b8653
msgid "Control how the client handles mentions by default on every message sent."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:56
#: 9ed5eed0c42248ab820b06215b9b5a69
msgid "The maximum numbers of seconds before timing out and restarting the WebSocket in the case of not receiving a HEARTBEAT_ACK. Useful if processing the initial packets take too long to the point of disconnecting you. The default timeout is 60 seconds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:61
#: 69d65080cec044e7b6455edd4a0c6db6
msgid "The maximum number of seconds to wait for the GUILD_CREATE stream to end before preparing the member cache and firing READY. The default timeout is 2 seconds.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:61
#: 061fbfc2e3974aefa0e85a933b169164
msgid "The maximum number of seconds to wait for the GUILD_CREATE stream to end before preparing the member cache and firing READY. The default timeout is 2 seconds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:66
#: b43e4d9978ea452bad0b3f920634f71a
msgid "Whether to assume the system clock is unsynced. This applies to the ratelimit handling code. If this is set to ``True``, the default, then the library uses the time to reset a rate limit bucket given by Discord. If this is ``False`` then your system clock is used to calculate how long to sleep for. If this is set to ``False`` it is recommended to sync your system clock to Google's NTP server.  .. versionadded:: 1.3"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:66
#: 8431257445754fb5ba6f8bd670885610
msgid "Whether to assume the system clock is unsynced. This applies to the ratelimit handling code. If this is set to ``True``, the default, then the library uses the time to reset a rate limit bucket given by Discord. If this is ``False`` then your system clock is used to calculate how long to sleep for. If this is set to ``False`` it is recommended to sync your system clock to Google's NTP server."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:74
#: a151867e23f44624b83429102b15a98e
msgid "Whether to enable events that are useful only for debugging gateway related information.  Right now this involves :func:`on_socket_raw_receive` and :func:`on_socket_raw_send`. If this is ``False`` then those events will not be dispatched (due to performance considerations). To enable these events, this must be set to ``True``. Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:74
#: 70630f12d1544afaa766f261e18e28ac
msgid "Whether to enable events that are useful only for debugging gateway related information."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:76
#: 0914818f05e04728aa8d77f5b0d51043
msgid "Right now this involves :func:`on_socket_raw_receive` and :func:`on_socket_raw_send`. If this is ``False`` then those events will not be dispatched (due to performance considerations). To enable these events, this must be set to ``True``. Defaults to ``False``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:85
#: c72989c35e494798868c418761624dc3
msgid "The WebSocket gateway the client is currently connected to. Could be ``None``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:89
#: bfdaca2ce94b47c491227ce955d6ef14
msgid "The event loop that the client uses for asynchronous operations."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:91
#: 49f2ebafe64e46af80bdc5670f75ec65
msgid ":class:`asyncio.AbstractEventLoop`"
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:1
#: 3cb35c3f35cd4b2ca42e62e2da4cb21d
msgid "A client similar to :class:`Client` except it handles the complications of sharding for the user into a more manageable and transparent single process bot."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:5
#: b5375ea69da64b3caa024a700394b923
msgid "When using this client, you will be able to use it as-if it was a regular :class:`Client` with a single shard when implementation wise internally it is split up into multiple shards. This allows you to not have to deal with IPC or other complicated infrastructure."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:10
#: b23af5d33cea44b7a27c7209f321f2b5
msgid "It is recommended to use this client only if you have surpassed at least 1000 guilds."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:13
#: d4eaadf814124f55ab556462d4fbb97a
msgid "If no :attr:`.shard_count` is provided, then the library will use the Bot Gateway endpoint call to figure out how many shards to use."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:16
#: b8867ec06a244683a091e3779cb7d564
msgid "If a ``shard_ids`` parameter is given, then those shard IDs will be used to launch the internal shards. Note that :attr:`.shard_count` must be provided if this is used. By default, when omitted, the client will launch shards from 0 to ``shard_count - 1``."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:23
#: 154cb8641e7546fb9fa4fbaf26b840aa
msgid "An optional list of shard_ids to launch the shards with."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latency:3
#: 45591084a7f244f081d9f18faeb96673
msgid "This operates similarly to :meth:`Client.latency` except it uses the average latency of every shard's latency. To get a list of shard latency, check the :attr:`latencies` property. Returns ``nan`` if there are no shards ready."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latencies:1
#: 619ba050e1e849f6b4c984c0fe32b011
msgid "A list of latencies between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latencies:4
#: 97f9a62dd3ed4c80a81751723a8c7204
msgid "This returns a list of tuples with elements ``(shard_id, latency)``."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.get_shard:1
#: e94acc6e90f1417a98be41ad60b4db51
msgid "Gets the shard information at a given shard ID or ``None`` if not found."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.get_shard:5
#: dee98d04bb7d49cc82b8b1641fe586b4
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~discord.shard.ShardInfo\\` \\| \\:py\\:obj\\:\\`None\\``"
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.shards:1
#: 7d75d87d0698427b8f520c5d1481e427
msgid "Returns a mapping of shard IDs to their respective info object."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:5
#: fe09ce2894fb435bb45e56115918a23c
msgid "Example: ::"
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:17
#: 3804449bf2294064adf9b2e5b242eb29
msgid "Indicates what status to change to. If ``None``, then :attr:`Status.online` is used."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:21
#: 3d9cee2a830946a296dafe6d7f539aa7
msgid "The shard_id to change the presence to. If not specified or ``None``, then it will change the presence of every shard the bot can see."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:26
#: cec772a3fc134fb7bb636f5854a3cf00
msgid "If the ``activity`` parameter is not of proper type."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.is_ws_ratelimited:1
#: c11858bd0a2046e5ac236361b14e3083
msgid "Whether the websocket is currently rate limited."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.is_ws_ratelimited:3
#: 771bda0c3a274e548f284047259f561a
msgid "This can be useful to know when deciding whether you should query members using HTTP or via the gateway."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.is_ws_ratelimited:6
#: af9ce954ce2644af83ba1462c4d8d5a5
msgid "This implementation checks if any of the shards are rate limited. For more granular control, consider :meth:`ShardInfo.is_ws_ratelimited`. :rtype: :sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""
