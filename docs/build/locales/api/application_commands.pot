# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2021, Rapptz & 2021-present, Pycord Development
# This file is distributed under the same license as the Pycord package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Pycord 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-12 14:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/application_commands.rst:4
#: b5bef56dc22e4024907f0ad2189496f0
msgid "Application Commands"
msgstr ""

#: ../../api/application_commands.rst:8
#: 963047d00b9c4705b2c508ea059cbc84
msgid "Command Permission Decorators"
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.default_permissions:1
#: da8262203adc4a9c9195749e22fca186
msgid "A decorator that limits the usage of an application command to members with certain permissions."
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.default_permissions:4
#: 797b65f8f8274cc38a258f0e361b6f7e
msgid "The permissions passed in must be exactly like the properties shown under :class:`.discord.Permissions`."
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.default_permissions:8
#: 732445569fbe4b5abb9130e40d7fd143
msgid "These permissions can be updated by server administrators per-guild. As such, these are only \"defaults\", as the name suggests. If you want to make sure that a user **always** has the specified permissions regardless, you should use an internal check such as :func:`~.ext.commands.has_permissions`."
msgstr ""

#: ../../api/application_commands.rst:0
#: aea96c3c11354ac09ca840e760f27c54
#: 9dfd81ba143848a1a20bebc948d1df16
#: c14ee1b991e847c999bf9442dbe40e1d
#: eb72f0aca1244dea81410658346315d8
#: 7226b11745ba4ebd82c9da2a758ffeb5
#: 54d966885d634d83990edfce5e98bd30
#: cad84173c056435d98f90e7005c27b55
#: 0b368aa254aa4b86a89105ba0e327415
#: 2f82411ffec84c53bcd002c61cacf0de
#: 64675ca2cf37474fb4db23c7d15af9ab
#: 62e059169acd42789ad242cd2083fa36
#: 36bdb8c4ce3245f58c14273b19fd5d62
#: 52bf2928121f4472b33d87c293c520da
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: 235625d33ce645a7b043c3677e586ff9
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
#: a0e267ca8cbb4cdc92ee405b3a8b5906
msgid "Parameters"
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.default_permissions:13
#: fe3a3eb41ae7453c8c76fe996fa9f277
msgid "An argument list of permissions to check for."
msgstr ""

#: ../../api/application_commands.rst:0
#: 8b31e5c89bc94600b0402b4043851360
#: 34f6fc248eea4c0486bab68b1ebdd1c5
#: 53ceb21104a641c484d4b8e7645d7b6d
#: c99f60322d564ed586c09436e487f125
#: 8f97231c3b074c83a4e0b711360aa13a
#: 10183c9a2d6e45fc9ffd212a67c67ee5
#: 254924570d314fcfad7eec28414aa754
#: 9381c2802da0445eb460cb72496ecd58
#: a2184453371145008ab8edb2bebc1828
#: c55cfd8217574ea6877c770ca4d590e1
#: b0facd7208864b9190e27e037ea8aa7b
#: 7bfccaa86ce54a64bf7d92ec6a576066
#: c8daf70be35f4fcfaafc3aca82447190
#: 466e0a2592dd47b6a53225e7c79ec12b
#: 661e5de699854673aba3514ac463b12e
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
#: 96f7f9fedd3e4084838b9340c26d3781
msgid "Return type"
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.default_permissions:15
#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.guild_only:4
#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.is_nsfw:7
#: 2621196e617c4416b2ee3425087fb013
#: d2975d1552964ea69abf9e2d9f2c34a1
#: bb593fc55f5845e282c0678c4ca7c3a4
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\``"
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.default_permissions:18
#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.guild_only:7
#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.is_nsfw:10
#: 170709aea05e4d6596430ecbcdc6b2ff
#: 56ccd2f7a26a431a88df94847e449b3c
#: 27314595e4ad42478ecac584522b5b5c
msgid "Example"
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.guild_only:1
#: df97a064550e4e33b11916afeef4ae71
msgid "A decorator that limits the usage of an application command to guild contexts. The command won't be able to be used in private message channels."
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.is_nsfw:1
#: b5580ad100f0493cb5162e2b598e7d5e
msgid "A decorator that limits the usage of an application command to 18+ channels and users. In guilds, the command will only be able to be used in channels marked as NSFW. In DMs, users must have opted into age-restricted commands via privacy settings."
msgstr ""

#: ../../../discord/commands/permissions.py:docstring of discord.commands.permissions.is_nsfw:5
#: 3b38db1261c540ed9b38b50b257ebf93
msgid "Note that apps intending to be listed in the App Directory cannot have NSFW commands."
msgstr ""

#: ../../api/application_commands.rst:21
#: a725df21cdd34f539047e9536c537892
msgid "Commands"
msgstr ""

#: ../../api/application_commands.rst:24
#: ../../api/application_commands.rst:68
#: 456c801c48554014be173f2a5a16cbe8
#: 7f6a87ba8b2c4cb783a577d4adf8ff82
msgid "Shortcut Decorators"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.application_command:1
#: 3cb707e319364046ba6f2ef6af0fc306
msgid "A decorator that transforms a function into an :class:`.ApplicationCommand`. More specifically, usually one of :class:`.SlashCommand`, :class:`.UserCommand`, or :class:`.MessageCommand`. The exact class depends on the ``cls`` parameter. By default, the ``description`` attribute is received automatically from the docstring of the function and is cleaned up with the use of ``inspect.cleandoc``. If the docstring is ``bytes``, then it is decoded into :class:`str` using utf-8 encoding. The ``name`` attribute also defaults to the function name unchanged."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.application_command:13
#: 82b42afe09934b35b5443bc04a2b2a31
msgid "The class to construct with. By default, this is :class:`.SlashCommand`. You usually do not change this."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.application_command:17
#: fe1f10e52d624dc9970ec9f9478becb5
msgid "Keyword arguments to pass into the construction of the class denoted by ``cls``."
msgstr ""

#: ../../api/application_commands.rst:0
#: af727a1e0df74d818b684591442a53cb
#: 1cb924fd415e4ddc9496206f971ced35
#: be9cd2081e584a819bf1549f7325376d
#: dacfb5c6315c4fd8abe70b44fde4055d
#: e860e3aa9c454db6bed32e3b32b70bf2
#: 48a171e781d247f4be4cd083cd7b649a
#: 35882ccb7511412fa8a02fe91cb6a83c
#: 1f9a0fed83444d2d8cc1cb8f25d4f832
#: d2b91ddf551d443299606af43f270971
#: 3de69d0bb23d41e1bdf1fc7ec71268b0
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
#: 51571b876dcd4446b30ec38ef632db2c
msgid "Returns"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.application_command:20
#: 5de61b114ef1402fa1afc797a823a6b0
msgid "A decorator that converts the provided method into an :class:`.ApplicationCommand`, or subclass of it."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.application_command:21
#: ../../../discord/commands/core.py:docstring of discord.commands.core.command:9
#: 159c15c1b9114f6583215bac45623357
#: 24179cdfea13469288bbb0caf076a82e
msgid "Callable[..., :class:`.ApplicationCommand`]"
msgstr ""

#: ../../api/application_commands.rst:0
#: 85a0b34d9d504b9486cfd759b70a5269
#: 7c1227bd25ec4399acd53fe97346b37c
#: 31661879ced84eb38fdd4d6a898269f7
#: 454861253a404ca6bc8c6eaaa62bc4c8
#: da2632a415b247ba849b48310b8c9939
#: da2632a415b247ba849b48310b8c9939
#: da2632a415b247ba849b48310b8c9939
#: da2632a415b247ba849b48310b8c9939
#: da2632a415b247ba849b48310b8c9939
#: da2632a415b247ba849b48310b8c9939
#: da2632a415b247ba849b48310b8c9939
msgid "Raises"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.application_command:23
#: a2b10a34bc48445cb7547b3753e2d22d
msgid "If the function is not a coroutine or is already a command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.command:1
#: ad5e2ce4a65d4cc0a741ef3faa6ffe30
msgid "An alias for :meth:`application_command`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.command:4
#: 16ef3af73cd247bb82eab2f0d0a86833
msgid "This decorator is overridden by :func:`ext.commands.command`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.command:8
#: f5c240410616469db3e29b24ac97bb37
msgid "A decorator that converts the provided method into an :class:`.ApplicationCommand`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.slash_command:1
#: 8cd0e804deae471a957d22fb730f0d62
msgid "Decorator for slash commands that invokes :func:`application_command`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.slash_command:5
#: cf83ee0ad1984b10b9a2a1665f3baf2a
msgid "A decorator that converts the provided method into a :class:`.SlashCommand`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.slash_command:6
#: 3648e7b30ffa4a508caa6eb5fd8dd3c3
msgid "Callable[..., :class:`.SlashCommand`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.user_command:1
#: 94a75693b49d4729a08c55224a6635e3
msgid "Decorator for user commands that invokes :func:`application_command`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.user_command:5
#: a34c5627137a4a6abbee91d8ef916da5
msgid "A decorator that converts the provided method into a :class:`.UserCommand`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.user_command:6
#: 1a5230d2f97b4c4088a308912ad57d76
msgid "Callable[..., :class:`.UserCommand`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.message_command:1
#: 64dea31eec8149c9bc5aa4611ae732d0
msgid "Decorator for message commands that invokes :func:`application_command`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.message_command:5
#: b06aa2c156234565b94cc7a9adc52354
msgid "A decorator that converts the provided method into a :class:`.MessageCommand`."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.message_command:6
#: 8fe7341163d9401f8749dbb5d7ed7952
msgid "Callable[..., :class:`.MessageCommand`]"
msgstr ""

#: ../../api/application_commands.rst:42
#: ../../api/application_commands.rst:73
#: 90d12871fc60443cab43a4d2a559062f
#: f29d6e2aba484c70ac570333290b6b69
msgid "Objects"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.is_on_cooldown:1
#: e5824d49a8ec4fd58c46756aa4ec9a8c
msgid "Checks whether the command is currently on cooldown."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.get_cooldown_retry_after:5
#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.is_on_cooldown:5
#: 43592460bb624523b6b7dddc218d6418
#: 22f96d6322cd4a01843b0facf9a060c8
msgid "This uses the current time instead of the interaction time."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.is_on_cooldown:8
#: 48c966a97d1e4323aaf2c55e947af55b
msgid "The invocation context to use when checking the command's cooldown status."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.is_on_cooldown:11
#: 109268d7b8734d31b6f6a78fc32cc37e
msgid "A boolean indicating if the command is on cooldown."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.is_on_cooldown:12
#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:31
#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:38
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:58
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:65
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:38
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:45
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:31
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:38
#: 5f86ec376bce414983af08e853bde10c
#: e46ea6aa9eee426bb7dfc66cd3cba65a
#: 469210f5cf914546997454d384d9029d
#: 6c64647e98224b3580a97a6971e0460f
#: 1d938773f96a4ec29acb39fe95a085e1
#: 1cd0f7372eb94a76a4c4eb766a807d99
#: 1cd0f7372eb94a76a4c4eb766a807d99
#: 1cd0f7372eb94a76a4c4eb766a807d99
#: 1cd0f7372eb94a76a4c4eb766a807d99
msgid ":class:`bool`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.reset_cooldown:1
#: 4865f290a1c34beba2817f93eab500c5
msgid "Resets the cooldown on this command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.reset_cooldown:4
#: 53643f7f9ef1492a8092f43b8e5fc523
msgid "The invocation context to reset the cooldown under."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.delete:14
#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.reset_cooldown:7
#: ea0c376e7639475c96884d6741d8e471
#: c8c22acd0edf4230bcd59ce97fe0e0bf
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:obj\\:\\`None\\``"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.get_cooldown_retry_after:1
#: 5786055907dd47e8aa0184ae5d9858cb
msgid "Retrieves the amount of seconds before this command can be tried again."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.get_cooldown_retry_after:8
#: d765407e83ec4b058b4b301fce4072e3
msgid "The invocation context to retrieve the cooldown from."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.get_cooldown_retry_after:11
#: 91fcc0e4733b45df860a71abe4390a06
msgid "The amount of time left on this command's cooldown in seconds. If this is ``0.0`` then the command isn't on cooldown."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.get_cooldown_retry_after:13
#: e5f76f402c5749b58d8def0d7b027cd7
msgid ":class:`float`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.error:1
#: 85341dba3db7499bbc2e89d1674b185a
msgid "A decorator that registers a coroutine as a local error handler."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.error:3
#: 989d30b8f9a848129807a4f4a5055d14
msgid "A local error handler is an :func:`.on_command_error` event limited to a single command. However, the :func:`.on_command_error` is still invoked afterwards as the catch-all."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.error:8
#: 5fc1de69a66a4f1782fbbda61bfbd616
msgid "The coroutine to register as the local error handler."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.after_invoke:13
#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.before_invoke:13
#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.error:11
#: ee192f4da1984910bb904352619efac9
#: 69cdb18feeb7405c8d90991e2504ff43
#: 195c64eb9cf94087be8baf2674ba96a2
msgid "The coroutine passed is not actually a coroutine."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.has_error_handler:1
#: 9ccf990d16f34941828a6515cc6f831d
msgid "Checks whether the command has an error handler registered."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.has_error_handler:4
#: aa27a8c0af014a0d8c7b4f3d6eb24ed9
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.before_invoke:1
#: 74e0ecf9b20d47e4ae7716f3cf075065
msgid "A decorator that registers a coroutine as a pre-invoke hook. A pre-invoke hook is called directly before the command is called. This makes it a useful function to set up database connections or any type of set up required."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.before_invoke:6
#: 9433b4a378614120ac4f31f90266b22e
msgid "This pre-invoke hook takes a sole parameter, an :class:`.ApplicationContext`. See :meth:`.Bot.before_invoke` for more info."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.before_invoke:10
#: 6b73c4f26de94db6b23222b72e7033a8
msgid "The coroutine to register as the pre-invoke hook."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.after_invoke:1
#: 9ebaa0682ce8427187430baa7a30a62a
msgid "A decorator that registers a coroutine as a post-invoke hook. A post-invoke hook is called directly after the command is called. This makes it a useful function to clean-up database connections or any type of clean up required."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.after_invoke:6
#: 8a42dbff4d8c4c50bff5f0d280665b55
msgid "This post-invoke hook takes a sole parameter, an :class:`.ApplicationContext`. See :meth:`.Bot.after_invoke` for more info."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.ApplicationCommand.after_invoke:10
#: ff065a961e3349d899a4f61dc14101c1
msgid "The coroutine to register as the post-invoke hook."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.ApplicationCommand.full_parent_name:1
#: 38de70f34b1f42c7a6b8db99f5580b96
msgid "Retrieves the fully qualified parent command name."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.ApplicationCommand.full_parent_name:3
#: ca09f438cfef40768c157b677b5ac3ac
msgid "This the base command name required to execute it. For example, in ``/one two three`` the parent name would be ``one two``."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.ApplicationCommand.qualified_name:1
#: 3c6db7d1726b459190301e3810022172
msgid "Retrieves the fully qualified command name."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.ApplicationCommand.qualified_name:3
#: ffcb16ee006d4bcda5eb72e7313ac7d9
msgid "This is the full parent name with the command name as well. For example, in ``/one two three`` the qualified name would be ``one two three``."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.ApplicationCommand.qualified_id:1
#: ee3fbd20f3e34193b2f31f0c6570c05e
msgid "Retrieves the fully qualified command ID."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.ApplicationCommand.qualified_id:3
#: c967bb36bdac4affbd4cb3fa91587415
msgid "This is the root parent ID. For example, in ``/one two three`` the qualified ID would return ``one.id``."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:1
#: 41fd24c1ab6b4016b6615a8b699a0bb9
msgid "A class that implements the protocol for a slash command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:3
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:3
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:3
#: 6bf0393672874d60ace4dad3aeff4e49
#: bb14163d838f4df5be0e9d0ed62b84d9
#: bb14163d838f4df5be0e9d0ed62b84d9
msgid "These are not created manually, instead they are created via the decorator or functional interface."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:8
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:10
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:8
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:8
#: 67aaf53865d34b4eab081611d1af6dda
#: ed6cdb67d88c45f4a8824353790cf8fa
#: 3d0e2ed16525455d96c8cb1edadb5bc9
#: 3d0e2ed16525455d96c8cb1edadb5bc9
msgid "The name of the command."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:0
#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:0
#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:0
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:0
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:0
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:0
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:0
#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:0
#: ../../../discord/commands/options.py:docstring of discord.commands.options.option:0
#: a1abbc14d2b2467da83e741de3dfdf76
#: 69ca3d2c2367457d80020171f7956f20
#: d346586079e040aeaa3ce95efc7de925
#: 82d9281a794342ca80ecedb36ce845e8
#: 7e705d84c94d4d27988a51bd99c66d40
#: b880b344500049db96d5e21f275c6531
#: 8d8e59d3422e4073b73af34dec59df56
#: f2e9e70af4b14850a489ad1bc26923a7
#: f4d4ca31df8b4d2196f56fbf4bb71e61
#: 1d48447ce4dd4b40b0a9168a6c0a741d
#: a2e513d5b07b4dfaaa4d578776fe3d5b
#: da86647139e241c9b5091ecda8d8a7a3
#: 105bde31bfd1417f987e4b7508657466
#: b458a250a6b34994b97107d1e2913f34
#: fe884d1963e24986a26db506c9fe20dd
#: cc22d99cfe4343559ceb67784268ad07
#: 65589f4eefce486783298b62563c29e6
#: cfb0e3fdd30c4752aa18bb3bb3051aa8
#: 90b11fa54ccf460eb6ef527c265a5be3
#: 2942f73e141945c5b9e84e3edfe83610
#: fa5207c6c9a346c4a604a81b19fa4efc
#: b033a7a3b7224e2ca5d25b6b39f19909
#: 94eb1b4764b941a09dbf0a90e5abab6d
#: 78fbd9eecfff4a74921c5676a3badb3f
#: 596eaab5c9b44f7b966904a10dd285a1
#: 55edae3110864faaa4f01ec37013384d
#: 126aeaeefbb74756bd0d4c3712f68106
#: 4f19817a7d6541e3ac62dfb873551675
#: 32ab576baabd4da4aa50f054bac960fa
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
#: f422915c4028467f9272f041e90ac356
msgid "type"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:10
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:12
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:49
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:10
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:10
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:16
#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:9
#: ../../../discord/commands/options.py:docstring of discord.commands.options.option:10
#: 49221d04f03b4b12a9d0c0a9c637ef9a
#: e1a8d5b422ad43aa838454c7a548d093
#: e73d6cccfb5e4378b06a018f2cb3a728
#: b2ced8f32ef84169b7d0feed3cfdffb8
#: b2ced8f32ef84169b7d0feed3cfdffb8
#: b2ced8f32ef84169b7d0feed3cfdffb8
#: b2ced8f32ef84169b7d0feed3cfdffb8
#: b2ced8f32ef84169b7d0feed3cfdffb8
msgid ":class:`str`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:14
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:16
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:14
#: d7c8826678824334acd35d914ce6d3da
#: eb1bd96acf84423f9aeaf5c3aef8d405
#: eb1bd96acf84423f9aeaf5c3aef8d405
msgid "The coroutine that is executed when the command is called."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:16
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:18
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:16
#: 94656ea4509f484995757bcea3759b36
#: 7a48bea72ed14e6ca0b55c39805de1e2
#: 7a48bea72ed14e6ca0b55c39805de1e2
msgid ":ref:`coroutine <coroutine>`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:22
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:14
#: ca717fd502eb4d4eb6bcad8d95da302c
#: a1a8e38c697444e686ead501a98d1164
msgid "The description for the command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:24
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:16
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:23
#: 219ed0b9b95f4158a6f0a49a5ce2decb
#: 4c502354c8d74bf7b7c8f98c11b6a5bd
#: 457e3625a42542f28892b83df6b3d440
msgid "Optional[:class:`str`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:20
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:28
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:20
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:20
#: d206fd0ddbb94163a1152cfc1c826c06
#: 64a250a8f0ac40d4aecc323b2ac9a050
#: 77e0016800534470945d60987fed7899
#: 77e0016800534470945d60987fed7899
msgid "The ids of the guilds where this command will be registered."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:22
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:30
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:22
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:22
#: c586c88145e24838a7a0f08feae5b3db
#: a8524dff9e6d4ac8a3a4b6229ad12e63
#: 2b5abad428324601971b5a7d306bdc79
#: 2b5abad428324601971b5a7d306bdc79
msgid "Optional[List[:class:`int`]]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:34
#: c8c15229d16d4fc89b3f7e19cf7180b6
msgid "The parameters for this command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:36
#: 75862e9bf0b84d2897d613fc7e3fe683
msgid "List[:class:`Option`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:40
#: fa69b266672c4ec99ee70ac16be2a608
msgid "The parent group that this command belongs to. ``None`` if there isn't one."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:43
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:29
#: b2cb8c97a7a84023a2de84bcf4d91e50
#: 66350ee1c0624f379d399a081ac541e8
msgid "Optional[:class:`SlashCommandGroup`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:47
#: b3c411e124ea4def938df41c39d0adac
msgid "Returns a string that allows you to mention the slash command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:26
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:53
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:33
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:13
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:26
#: aedee1abd900459caa0824d9395135f2
#: 90c2f3e57f6b4b12a2db96f0229f59a6
#: 243e82cb8df04a368273abf6f3e337e6
#: fe40b49ec6f643979b0a4dc4f8f53c79
#: fe40b49ec6f643979b0a4dc4f8f53c79
msgid "Whether the command should only be usable inside a guild."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:55
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:35
#: 3083ae8030e942ea85aab949de3ad70d
#: 04acf48e5dc641f2b7369a4dc4d0eb3c
msgid "Use the :attr:`contexts` parameter instead."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:35
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:62
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:42
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:15
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:35
#: a1c4ecc9455b4ba4bf4c25be0df33521
#: 3f98034506304fa5adcbcb706311be39
#: c1b7134cf52d42c2950bd14e6152aed8
#: 6d50a38d0a17491a8badbba7e2e94860
#: 6d50a38d0a17491a8badbba7e2e94860
msgid "Whether the command should be restricted to 18+ channels and users. Apps intending to be listed in the App Directory cannot have NSFW commands."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:42
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:69
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:49
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:18
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:42
#: 6b3bc7e04f3640fbbc49a1f5f1444291
#: 4093e966648f402ab9e9a3821479bc17
#: d0cf02f6c33d40f480e6dcdfa59e5bed
#: 59b49969a86549fe97fef27fa01c037d
#: 59b49969a86549fe97fef27fa01c037d
msgid "The default permissions a member needs to be able to run the command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:44
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:71
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:51
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:44
#: 128da93392f74a34b75d9da47a07e5d3
#: c8f15213fe404ecc80f0efbad85ce25f
#: 5fd417671e594f12bbdb4eebee581649
#: 5fd417671e594f12bbdb4eebee581649
msgid ":class:`~discord.Permissions`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:48
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:75
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:48
#: bd5e5e0d5f4b411c8e40eab4878085bc
#: 5f2fbe31f5d74ba7a5419816d2ee36a0
#: 5f2fbe31f5d74ba7a5419816d2ee36a0
msgid "The cog that this command belongs to. ``None`` if there isn't one."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:50
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:77
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:50
#: aa48e1fdf4ed4288b34a01330ba573c1
#: b34d5a804a5b4cf6afadd914bfc11a59
#: b34d5a804a5b4cf6afadd914bfc11a59
msgid "Optional[:class:`Cog`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:54
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:81
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:55
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:20
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:54
#: 99e057769f604564828ec66970d09051
#: 0b88f443adf9434cab24c10d11dd4d90
#: 1d352bc3635141cda4848e4fb7e0973e
#: d9d5c1770b794a5aa348922c71a848cd
#: d9d5c1770b794a5aa348922c71a848cd
msgid "A list of predicates that verifies if the command could be executed with the given :class:`.ApplicationContext` as the sole parameter. If an exception is necessary to be thrown to signal failure, then one inherited from :exc:`.ApplicationCommandError` should be used. Note that if the checks fail then :exc:`.CheckFailure` exception is raised to the :func:`.on_application_command_error` event."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:61
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:88
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:62
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:61
#: ad45d2349ec14cf6a18c5b8b7dc2a062
#: ec1f97a3576f474d878bf3caa4bef5f8
#: 67af798da00f47a391dffbdf1d1b782b
#: 67af798da00f47a391dffbdf1d1b782b
msgid "List[Callable[[:class:`.ApplicationContext`], :class:`bool`]]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:65
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:92
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:65
#: 1abebabad8514274a040cb70960603ce
#: 1942d1f115bd4ac0a990bf73d0a49126
#: 1942d1f115bd4ac0a990bf73d0a49126
msgid "The cooldown applied when the command is invoked. ``None`` if the command doesn't have a cooldown."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:68
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:95
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:68
#: 4403e107ddec48139ba57ac55414cb0d
#: 58f857b842d14e26b594f8771048b67f
#: 58f857b842d14e26b594f8771048b67f
msgid "Optional[:class:`~discord.ext.commands.Cooldown`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:72
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:99
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:66
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:27
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:72
#: 4c7491a6786349beb7d12103568687d9
#: 6e99029583a841a9ab1d74653b3b85ac
#: 21ed930c27b2453195f0faa34f14457e
#: 808dd134efa0495ea9b213fcf9b366a3
#: 8aeea10a4b16406bb4fabc8f5e266f29
#: 8aeea10a4b16406bb4fabc8f5e266f29
msgid "The name localizations for this command. The values of this should be ``\"locale\": \"name\"``. See `here <https://discord.com/developers/docs/reference#locales>`_ for a list of valid locales."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:75
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:102
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:109
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:69
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:76
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:75
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:99
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:106
#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:22
#: 7f013ded205c49e4a449eb1a8356e3b8
#: 023e1e7e67f84b929dedc87e98bf488f
#: 94ef4db9991241619146371c2d241eec
#: 9fb8440c83b64b5da889a607e563f44c
#: 7897fe9f532240669b41fd64f8d327df
#: 7897fe9f532240669b41fd64f8d327df
#: 7897fe9f532240669b41fd64f8d327df
#: 7897fe9f532240669b41fd64f8d327df
#: 7897fe9f532240669b41fd64f8d327df
msgid "Dict[:class:`str`, :class:`str`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:106
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:73
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:30
#: 9f23516b8763437599e6707336f93a13
#: 465be0fc2ca64e46ab11324883be8c39
#: 232bbcc643034214afd2c8bf7793034c
#: b589efc99cfc492e9e2d1b0070562e2c
msgid "The description localizations for this command. The values of this should be ``\"locale\": \"description\"``. See `here <https://discord.com/developers/docs/reference#locales>`_ for a list of valid locales."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:113
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:80
#: 709b29ca67a54df18bd7293c19e29cf2
#: 5d7c88e616bd457884fb476a7d2f4ab0
msgid "The type of installation this command should be available to. For instance, if set to :attr:`IntegrationType.user_install`, the command will only be available to users with the application installed on their account. Unapplicable for guild commands."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:81
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:117
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:84
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:81
#: bde9fd66a882485c806403a935a2799b
#: 667c0fef77a5473cb31b94fd02113660
#: 6eb640cae00c453a89aab91f7b489f5b
#: 6eb640cae00c453a89aab91f7b489f5b
msgid "Set[:class:`IntegrationType`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:121
#: 69dad4ce1f7b4caab795a3f006adcd96
msgid "The location where this command can be used. Cannot be set if this is a guild command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:87
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand:123
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:90
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:87
#: 5f7622e9d98e4fa78b9fdc2edd148970
#: e4cf9dee7685447693343bc155de82b8
#: fca44b50de0b4821acb8f06f88efc30b
#: fca44b50de0b4821acb8f06f88efc30b
msgid "Set[:class:`InteractionContextType`]"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand.copy:1
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand.copy:1
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand.copy:1
#: e09041a18e2048f885c27f005740a3b7
#: 31d87139a8b540bc9e1c77b8b1829f09
#: 31d87139a8b540bc9e1c77b8b1829f09
msgid "Creates a copy of this command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand.copy:3
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand.copy:3
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand.copy:3
#: a8105025c5e2494aa3f98b742ce48850
#: be0630b9503f4c4fa51e83cc51cb43de
#: be0630b9503f4c4fa51e83cc51cb43de
msgid "A new instance of this command."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommand.copy:4
#: 0be8c140c01d413fa23ff654727f9145
msgid ":class:`SlashCommand`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:1
#: 3926a5a0cdd54defa1b2dcae0f38112e
msgid "A class that implements the protocol for a slash command group."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:3
#: 86b3efd9357249c382571006517aadb2
msgid "These can be created manually, but they should be created via the decorator or functional interface."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:26
#: 1ba00e6c6a9c4381845f27b44a09f0a3
msgid "The parent group that this group belongs to. ``None`` if there isn't one."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup:88
#: 86feaefaaaf34288af79998e7d3eb3a9
msgid "The location where this command can be used. Unapplicable for guild commands."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:1
#: 7a10b1d79da74255bdd7a7e59b681aa6
msgid "Creates a new subgroup for this SlashCommandGroup."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:4
#: f0a5c570cc0640daaab5e1d358b07b15
msgid "The name of the group to create."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:7
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.subgroup:10
#: e19cf1315db44335b86b91dc9de63e5b
#: 03f96678c3fe4b73a5300b9b76942114
msgid "The description of the group to create."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:10
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.subgroup:13
#: e16839754dd74ff0b55c2565c7a3bbfb
#: 07c545d36d2845a09d3492826661765e
msgid "A list of the IDs of each guild this group should be added to, making it a guild command. This will be a global command if ``None`` is passed."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.create_subgroup:34
#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.subgroup:17
#: 50bd9f43948a48cda18b0348eeacf075
#: 0097a80d2c364ccea8530212bdc8538a
msgid "The slash command group that was created."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.subgroup:1
#: 110713e4d85d40cd8deed214a911e308
msgid "A shortcut decorator that initializes the provided subclass of :class:`.SlashCommandGroup` as a subgroup."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.subgroup:7
#: ad149ced4c7d487494e7d269414157b3
msgid "The name of the group to create. This will resolve to the name of the decorated class if ``None`` is passed."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.walk_commands:1
#: 9c71c512414541089ea38638c3dde77f
msgid "An iterator that recursively walks through all slash commands and groups in this group."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.walk_commands:0
#: 7d6810cb23814948bfd06437dddc2d2a
msgid "Yields"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.walk_commands:3
#: 626e588005a54eccbe4bbd0263385625
msgid ":class:`.SlashCommand` | :class:`.SlashCommandGroup` -- A nested slash command or slash command group from the group."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.copy:1
#: 2030810b53b74013855efa8e43381af4
msgid "Creates a copy of this command group."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.copy:3
#: a0a6be77abba47a6afbd4561554df107
msgid "A new instance of this command group."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.SlashCommandGroup.copy:4
#: dc5f23a83726415ca441522fcf41075c
msgid ":class:`SlashCommandGroup`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:1
#: 86543ac679bf4bb992a6ca78b1197fda
msgid "A class that implements the protocol for user context menu commands."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:28
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:28
#: f5cc870407294386a12e5e92859cf1ba
#: f5cc870407294386a12e5e92859cf1ba
msgid "Use the ``contexts`` parameter instead."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:79
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:79
#: e5ac68f43e54493b955c34ffa4045d84
#: e5ac68f43e54493b955c34ffa4045d84
msgid "The installation contexts where this command is available. Unapplicable for guild commands."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:85
#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand:85
#: f07350db291c4c9eb79da175bcf9ccd0
#: f07350db291c4c9eb79da175bcf9ccd0
msgid "The interaction contexts where this command is available. Unapplicable for guild commands."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.UserCommand.copy:4
#: 0d24d6d88aa94aa59018232cc846f80a
msgid ":class:`UserCommand`"
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand:1
#: 3a43c2f228a14e06a35102516117c170
msgid "A class that implements the protocol for message context menu commands."
msgstr ""

#: ../../../discord/commands/core.py:docstring of discord.commands.core.MessageCommand.copy:4
#: 1e28dc4b29a24786a69df8ff2df47b97
msgid ":class:`MessageCommand`"
msgstr ""

#: ../../api/application_commands.rst:65
#: 0d9d93397a80433d9df6280b37e9cf0b
msgid "Options"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.option:1
#: 0130075e1ddf4a318c804b668301c131
msgid "A decorator that can be used instead of typehinting :class:`.Option`."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.option:7
#: c2a9f34a52a64a518c507218e1d9de01
msgid "The name of the target function parameter this option is mapped to. This allows you to have a separate UI ``name`` and parameter name."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:1
#: 1e9056c43c884b5199898e497949e25d
msgid "Represents a selectable option for a slash command."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:5
#: 75bfc064c11744c99eac785fa3f2ff23
msgid "The type of input that is expected for this option. This can be a :class:`SlashCommandOptionType`, an associated class, a channel type, a :class:`Converter`, a converter class or an :class:`enum.Enum`. If a :class:`enum.Enum` is used and it has up to 25 values, :attr:`choices` will be automatically filled. If the :class:`enum.Enum` has more than 25 values, :attr:`autocomplete` will be implemented with :func:`discord.utils.basic_autocomplete` instead."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:9
#: 593026b5a1fc40e4a80311b243cb7877
msgid "Union[Type[:class:`str`], Type[:class:`bool`], Type[:class:`int`], Type[:class:`float`], Type[:class:`.abc.GuildChannel`], Type[:class:`Thread`], Type[:class:`Member`], Type[:class:`User`], Type[:class:`Attachment`], Type[:class:`Role`], Type[:class:`.abc.Mentionable`], :class:`SlashCommandOptionType`, Type[:class:`.ext.commands.Converter`], Type[:class:`enums.Enum`], Type[:class:`Enum`]]"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:13
#: c8d02ef8523442db84373cc1d2e0f28a
msgid "The name of this option visible in the UI. Inherits from the variable name if not provided as a parameter."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:20
#: 3259bdeac333496c8faa60dc608eb5bb
msgid "The description of this option. Must be 100 characters or fewer. If :attr:`input_type` is a :class:`enum.Enum` and :attr:`description` is not specified, :attr:`input_type`'s docstring will be used."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:27
#: 8e4ceb8ea36443469f1f85747c903c87
msgid "The list of available choices for this option. Can be a list of values or :class:`OptionChoice` objects (which represent a name:value pair). If provided, the input from the user must match one of the choices in the list."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:31
#: fe9b03d557c84b05b541b96464195697
msgid "Optional[List[Union[:class:`Any`, :class:`OptionChoice`]]]"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:35
#: 2e528dec6b9b4726961a48ce6fe92acc
msgid "Whether this option is required."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:37
#: 000b0bda94bd42cfb1633ef646d23a12
msgid "Optional[:class:`bool`]"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:41
#: a02cb6965835437f949bf2191a6fb459
msgid "The default value for this option. If provided, ``required`` will be considered ``False``."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:43
#: 7d22d3c43d274365972d6535159232dc
msgid "Optional[:class:`Any`]"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:47
#: a47d1621967a4f648c720a1a3111eccc
msgid "The minimum value that can be entered. Only applies to Options with an :attr:`.input_type` of :class:`int` or :class:`float`."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:50
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:57
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:64
#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:71
#: 08ccceedd6f14b3f8c7d1509b11157a9
#: 08ccceedd6f14b3f8c7d1509b11157a9
#: 08ccceedd6f14b3f8c7d1509b11157a9
#: 08ccceedd6f14b3f8c7d1509b11157a9
msgid "Optional[:class:`int`]"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:54
#: 31ea4924990843f8adfbf6e88a51d7fd
msgid "The maximum value that can be entered. Only applies to Options with an :attr:`.input_type` of :class:`int` or :class:`float`."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:61
#: db3a329f3a3f417ba0ae05f79aeade46
msgid "The minimum length of the string that can be entered. Must be between 0 and 6000 (inclusive). Only applies to Options with an :attr:`input_type` of :class:`str`."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:68
#: fe01838097b34805b0b2a859034446dd
msgid "The maximum length of the string that can be entered. Must be between 1 and 6000 (inclusive). Only applies to Options with an :attr:`input_type` of :class:`str`."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:75
#: b16be74fd64a4d818577dc51a2d75445
msgid "The autocomplete handler for the option. Accepts a callable (sync or async) that takes a single argument of :class:`AutocompleteContext`. The callable must return an iterable of :class:`str` or :class:`OptionChoice`. Alternatively, :func:`discord.utils.basic_autocomplete` may be used in place of the callable."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:82
#: 96075db6b84448e8ae59a0aaf54aa561
msgid "Does not validate the input value against the autocomplete results."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:84
#: 6b97e34cbdd640fc848c3a62b0ce3ea3
msgid "Optional[Callable[[:class:`.AutocompleteContext`], Awaitable[Union[Iterable[:class:`.OptionChoice`], Iterable[:class:`str`], Iterable[:class:`int`], Iterable[:class:`float`]]]]]"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:88
#: efe2d8d761e245b5b1cbca504fe5a3b6
msgid "A list of channel types that can be selected in this option. Only applies to Options with an :attr:`input_type` of :class:`discord.SlashCommandOptionType.channel`. If this argument is used, :attr:`input_type` will be ignored."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:92
#: 3895aa7de025406b82492d8871b80352
msgid "list[:class:`discord.ChannelType`] | None"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:96
#: dbae42fcf31241ada80858c6674efcfc
msgid "The name localizations for this option. The values of this should be ``\"locale\": \"name\"``. See `here <https://discord.com/developers/docs/reference#locales>`_ for a list of valid locales."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:103
#: 3d90448f536f49ed990f5e5cb38b5f0a
msgid "The description localizations for this option. The values of this should be ``\"locale\": \"description\"``. See `here <https://discord.com/developers/docs/reference#locales>`_ for a list of valid locales."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:109
#: 73185a2e6c6e4d739ed5f24132cf9742
msgid "Examples"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.Option:110
#: cc7ba7cb42254be2b8f3f28c2631f7b6
msgid "Basic usage: ::"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.ThreadOption:1
#: 058fb547f7e048828c72114ef59e3b91
msgid "Represents a class that can be passed as the ``input_type`` for an :class:`Option` class."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.ThreadOption:6
#: 11b1db26d5f242b89c1358190f5c8a6b
msgid "The thread type to expect for this options input."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:1
#: 032809522c5048eb89074eb12f49ebc8
msgid "Represents a name:value pairing for a selected :class:`.Option`."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:7
#: bd518b6ccee34ebe9742c780738d2419
msgid "The name of the choice. Shown in the UI when selecting an option."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:13
#: a2f07edb1eef44989abe7094570a69dc
msgid "The value of the choice. If not provided, will use the value of ``name``."
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:15
#: 3e81a8bc741042d78ff4dbbe111b99d1
msgid "Optional[Union[:class:`str`, :class:`int`, :class:`float`]]"
msgstr ""

#: ../../../discord/commands/options.py:docstring of discord.commands.options.OptionChoice:19
#: 2ded24f7f3464286b1bdeb7668a8d8ac
msgid "The name localizations for this choice. The values of this should be ``\"locale\": \"name\"``. See `here <https://discord.com/developers/docs/reference#locales>`_ for a list of valid locales."
msgstr ""

#: ../../api/application_commands.rst:89
#: 1532468326964e3a8f4778fffa6157f9
msgid "Context Objects"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:1
#: 615595b5b70b452096a0d3bf17be3fb3
msgid "Represents a Discord application command interaction context."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:3
#: c7eb010280b1438baa0b3bfa57aada25
msgid "This class is not created manually and is instead passed to application commands as the first parameter."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:10
#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:9
#: 735d3b8688e648a5aaf59912c322ab40
#: 735d3b8688e648a5aaf59912c322ab40
msgid "The bot that the command belongs to."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:12
#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:11
#: 825a171e7cc64dd2a99a0905e70528dc
#: 825a171e7cc64dd2a99a0905e70528dc
msgid ":class:`.Bot`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:16
#: 5f80d2b271b94a57ac853c1925574447
msgid "The interaction object that invoked the command."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:48
#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:18
#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:17
#: 3c66cc9483d34081a22536fa12eccf5c
#: 38ff2d92f89246838e966fd79f106c78
#: 3c66cc9483d34081a22536fa12eccf5c
msgid ":class:`.Interaction`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:22
#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:21
#: d6f68d1b5a754d4faff41bef78e15ad3
#: d6f68d1b5a754d4faff41bef78e15ad3
msgid "The command that this context belongs to."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext:24
#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:23
#: 731cda54c14a44f4a88a9bc501f056d7
#: 731cda54c14a44f4a88a9bc501f056d7
msgid ":class:`.ApplicationCommand`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:1
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:1
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.respond:1
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:1
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:1
#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.delete:1
#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:1
#: 68f22a8232be41a3b2b45d850414330f
#: 68f22a8232be41a3b2b45d850414330f
#: 68f22a8232be41a3b2b45d850414330f
#: 68f22a8232be41a3b2b45d850414330f
#: 68f22a8232be41a3b2b45d850414330f
#: 68f22a8232be41a3b2b45d850414330f
#: 68f22a8232be41a3b2b45d850414330f
msgid "|coro|"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:3
#: 140199d2d8ca46f49bcf52390154703f
msgid "Calls a command with the arguments given. This is useful if you want to just call the callback that a :class:`.ApplicationCommand` holds internally."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:9
#: b49a2bc4dd68462fbb58bfb224685326
msgid "This does not handle converters, checks, cooldowns, pre-invoke, or after-invoke hooks in any matter. It calls the internal callback directly as-if it was a regular function. You must take care in passing the proper arguments when using this function."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:16
#: bfec2e6b68394ab198c335a849c17ba2
msgid "The command that is going to be called."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:19
#: 92ab2efc601041a5b5a340bce07ea766
msgid "The arguments to use."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:21
#: 777b8be609c64373bbf341f9900b74cb
msgid "The keyword arguments to use."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:23
#: 438aa440953846879cfbfe87145d195c
msgid "The command argument to invoke is missing."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.invoke:25
#: 5021455f669a48f38102c39a6acbab6a
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.TypeVar\\`\\\\ \\\\\\(\\`\\`T\\`\\`\\)`"
msgstr ""

#: ../../docstring of discord.ApplicationContext.channel:1
#: b609dea40cc743b08e49d5c7be8c7bcb
msgid "Union[:class:`abc.GuildChannel`, :class:`PartialMessageable`, :class:`Thread`]: Returns the channel associated with this context's command. Shorthand for :attr:`.Interaction.channel`."
msgstr ""

#: ../../docstring of discord.ApplicationContext.channel_id:1
#: e2e42bf39f034fa09a42af3e0df8cb7b
msgid "Returns the ID of the channel associated with this context's command. Shorthand for :attr:`.Interaction.channel_id`."
msgstr ""

#: ../../docstring of discord.ApplicationContext.guild:1
#: 328542dec1c2423f82d4288770e7acfb
msgid "Returns the guild associated with this context's command. Shorthand for :attr:`.Interaction.guild`."
msgstr ""

#: ../../docstring of discord.ApplicationContext.guild_id:1
#: 18c9865ad4024501a55ff86619379a13
msgid "Returns the ID of the guild associated with this context's command. Shorthand for :attr:`.Interaction.guild_id`."
msgstr ""

#: ../../docstring of discord.ApplicationContext.locale:1
#: 4d0d154dfb024841ae4273ee278d35cb
msgid "Returns the locale of the guild associated with this context's command. Shorthand for :attr:`.Interaction.locale`."
msgstr ""

#: ../../docstring of discord.ApplicationContext.guild_locale:1
#: 0f7171062ad34e40ba2a50d12af92493
msgid "Returns the locale of the guild associated with this context's command. Shorthand for :attr:`.Interaction.guild_locale`."
msgstr ""

#: ../../docstring of discord.ApplicationContext.me:1
#: fb27d9ced4754e0bba9315eda057f24d
msgid "Union[:class:`.Member`, :class:`.ClientUser`]: Similar to :attr:`.Guild.me` except it may return the :class:`.ClientUser` in private message message contexts, or when :meth:`Intents.guilds` is absent."
msgstr ""

#: ../../docstring of discord.ApplicationContext.message:1
#: 360aae08d5ec4329a775a2b12cb73428
msgid "Returns the message sent with this context's command. Shorthand for :attr:`.Interaction.message`, if applicable."
msgstr ""

#: ../../docstring of discord.ApplicationContext.author:1
#: ../../docstring of discord.ApplicationContext.user:1
#: d233902b55f7474383181ef505b0deb0
#: d233902b55f7474383181ef505b0deb0
msgid "Returns the user that sent this context's command. Shorthand for :attr:`.Interaction.user`."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.voice_client:1
#: 5e34a6aec3cd404da736946c09eef422
msgid "Returns the voice client associated with this context's command. Shorthand for :attr:`Interaction.guild.voice_client<~discord.Guild.voice_client>`, if applicable."
msgstr ""

#: ../../docstring of discord.ApplicationContext.response:1
#: 57de46aa89ee401b90d87d96729b87d8
msgid "Returns the response object associated with this context's command. Shorthand for :attr:`.Interaction.response`."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.selected_options:1
#: b5efacea0c6d490588ed532029be97f3
msgid "The options and values that were selected by the user when sending the command."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.selected_options:3
#: 2009dbc6355d49f988849abe62887432
msgid "A dictionary containing the options and values that were selected by the user when the command was processed, if applicable. Returns ``None`` if the command has not yet been invoked, or if there are no options defined for that command."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.selected_options:6
#: 8ac4f572c7f54f3181360191f521eb43
msgid "Optional[List[Dict[:class:`str`, Any]]]"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.unselected_options:1
#: 29e31a1123c242e1aa2b472c55404b69
msgid "The options that were not provided by the user when sending the command."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.unselected_options:3
#: 5eacd869453c4caa94b8f1973d4bd707
msgid "A list of Option objects (if any) that were not selected by the user when the command was processed. Returns ``None`` if there are no options defined for that command."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.unselected_options:5
#: 55cf6af7b08a4f7c93e92c2ec39a8632
msgid "Optional[List[:class:`.Option`]]"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_modal:1
#: fcd8fc00fc3444d4a347984fd3b9ed1d
msgid "|coro| Responds to this interaction by sending a modal dialog. This cannot be used to respond to another modal dialog submission."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_modal:6
#: 76458eafc6a84b0aaff8d4cd995a9882
msgid "The modal dialog to display to the user."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_modal:9
#: d92a2d6d8ca043e8bb5c226c9c62684a
msgid "Sending the modal failed."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:33
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_modal:10
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:53
#: 4b936a2efdbe459c87055d540910dc3b
#: 4b936a2efdbe459c87055d540910dc3b
#: 4b936a2efdbe459c87055d540910dc3b
msgid "This interaction has already been responded to before."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.respond:3
#: f5ed250977d64274ab69f28890c2d5fc
msgid "Sends either a response or a message using the followup webhook determined by whether the interaction has been responded to or not."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.respond:6
#: ab5a3790be0349bab8d2da6a2877c752
msgid "The response, its type depending on whether it's an interaction response or a followup."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.respond:7
#: fadaf0ad570449299f73d46bbc211ff3
msgid "Union[:class:`discord.Interaction`, :class:`discord.WebhookMessage`]"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:3
#: 088524dc5e4f4da8addf23d2dcc81b09
msgid "Responds to this interaction by sending a message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:15
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:6
#: a23bdff51b9347ed9b843ee572eca90a
#: a23bdff51b9347ed9b843ee572eca90a
msgid "The content of the message to send."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:55
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:9
#: 4afdc5be01c04197bb07738ff36e4ef3
#: 4afdc5be01c04197bb07738ff36e4ef3
msgid "A list of embeds to send with the content. Maximum of 10. This cannot be mixed with the ``embed`` parameter."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:51
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:13
#: e5c93968e5e54442b2c01ffb864b3784
#: e5c93968e5e54442b2c01ffb864b3784
msgid "The rich embed for the content to send. This cannot be mixed with ``embeds`` parameter."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:33
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:17
#: 249a00f69dd7404b8a18dd990aedf15e
#: 249a00f69dd7404b8a18dd990aedf15e
msgid "Indicates if the message should be sent using text-to-speech."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:20
#: 5ee37397dded4a3faf8aa45347f4d3c9
msgid "The view to send with the message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:23
#: 19b8764e6eb742cfbd6c211ce6de49cf
msgid "Indicates if the message should only be visible to the user who started the interaction. If a view is sent with an ephemeral message, and it has no timeout set then the timeout is set to 15 minutes."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:33
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:28
#: 88d5f696c2574d0fbd7638e815a9f7cd
#: 88d5f696c2574d0fbd7638e815a9f7cd
msgid "Controls the mentions being processed in this message. See :meth:`.abc.Messageable.send` for more information."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:87
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:32
#: 2d273ae38e5f4004b94c01caa64f2f1a
#: 2d273ae38e5f4004b94c01caa64f2f1a
msgid "If provided, the number of seconds to wait in the background before deleting the message we just sent."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:36
#: c26323cc36d2444db93f04f6a16a61f1
msgid "The file to upload."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:39
#: 5eb5de67847f4fbe95b625a06067be80
msgid "A list of files to upload. Must be a maximum of 10."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:91
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:42
#: c95324c20b714dce8cea04b4cfa5b6eb
#: c95324c20b714dce8cea04b4cfa5b6eb
msgid "The poll to send.  .. versionadded:: 2.6"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:91
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:42
#: 4e6235b751b24b81bd560956f1f7cb67
#: 4e6235b751b24b81bd560956f1f7cb67
msgid "The poll to send."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:47
#: 730b8b62d16c46f6aa4792bf63da9bb1
msgid "The interaction object associated with the sent message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:99
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:50
#: 551054b03c444d50a2a60ca32e8e9f16
#: 551054b03c444d50a2a60ca32e8e9f16
msgid "Sending the message failed."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:51
#: a0f75187304f404fb792a05b68249126
msgid "You specified both ``embed`` and ``embeds``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:55
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:103
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_response:52
#: 0a737ffed25c468a8fa88b66f105c037
#: 0a737ffed25c468a8fa88b66f105c037
#: 0a737ffed25c468a8fa88b66f105c037
msgid "The length of ``embeds`` was invalid."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:3
#: fd293a3f95634cac801f0b23e274ba24
msgid "Sends a message using the webhook."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:5
#: b9d3f9751ae6461e9faa2907517ba730
msgid "The content must be a type that can convert to a string through ``str(content)``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:7
#: e10e94fd9c024d6a9ac88264447d65fe
msgid "To upload a single file, the ``file`` parameter should be used with a single :class:`File` object."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:10
#: fc47d5f58198427fbec351375429a249
msgid "If the ``embed`` parameter is provided, it must be of type :class:`Embed` and it must be a rich embed type. You cannot mix the ``embed`` parameter with the ``embeds`` parameter, which must be a :class:`list` of :class:`Embed` objects to send."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:18
#: be98261f001f4289b337e61c209204d3
msgid "Whether the server should wait before sending a response. This essentially means that the return type of this function changes from ``None`` to a :class:`WebhookMessage` if set to ``True``. If the type of webhook is :attr:`WebhookType.application` then this is always set to ``True``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:24
#: 0f617a954d2040c4b314ea44e8f86eca
msgid "The username to send with this message. If no username is provided then the default username for the webhook is used."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:28
#: 9d64c46ae5eb48c283625b543241afcd
msgid "The avatar URL to send with this message. If no avatar URL is provided then the default avatar for the webhook is used. If this is not a string then it is explicitly cast using ``str``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:36
#: 9e7158552f3945e9aa3eda56703c50f3
msgid "Indicates if the message should only be visible to the user. This is only available to :attr:`WebhookType.application` webhooks. If a view is sent with an ephemeral message, and it has no timeout set then the timeout is set to 15 minutes.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:36
#: 507d76c002f74e14b168047e5741ec68
msgid "Indicates if the message should only be visible to the user. This is only available to :attr:`WebhookType.application` webhooks. If a view is sent with an ephemeral message, and it has no timeout set then the timeout is set to 15 minutes."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:22
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:44
#: 9da3c6f904e749d2a70116da7b9f91b4
#: 9da3c6f904e749d2a70116da7b9f91b4
msgid "The file to upload. This cannot be mixed with ``files`` parameter."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:25
#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:47
#: baf2da1b3eea467899a28632a9051c98
#: baf2da1b3eea467899a28632a9051c98
msgid "A list of files to send with the content. This cannot be mixed with the ``file`` parameter."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:59
#: 1d48d94dfbdf48bc929205a105a85b6e
msgid "Controls the mentions being processed in this message.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:59
#: 5f0205ad28b04c84be092358d620971f
msgid "Controls the mentions being processed in this message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:64
#: 11877168a21647ad9d25a5b521cd8e6b
msgid "The view to send with the message. You can only send a view if this webhook is not partial and has state attached. A webhook has state attached if the webhook is managed by the library.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:64
#: a12ec104a407447aa3d2cf73b4909fee
msgid "The view to send with the message. You can only send a view if this webhook is not partial and has state attached. A webhook has state attached if the webhook is managed by the library."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:72
#: 786aa546c1184b81b7ad96a239797b3a
msgid "The thread to send this webhook to.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:72
#: 87d19dcf19354880973a710d703a6d4e
msgid "The thread to send this webhook to."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:77
#: f9beaed2ddb0425fa4072973b6b228ab
msgid "The name of the thread to create. Only works for forum channels.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:77
#: f84ffbc14b01477fbf984092850d7a62
msgid "The name of the thread to create. Only works for forum channels."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:82
#: fdd72a094f5141ab94b0a7157efea41a
msgid "A list of tags to apply to the message. Only works for threads.  .. versionadded:: 2.5"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:82
#: dbad2a8ee2cd46f8ac199fdffe2d1b6d
msgid "A list of tags to apply to the message. Only works for threads."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:96
#: 8ed2b127aab547adb416b946c1ff5afb
msgid "If ``wait`` is ``True`` then the message that was sent, otherwise ``None``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:97
#: eb56c247fe6743d79f1325e5cfbecf33
msgid "Optional[:class:`WebhookMessage`]"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:100
#: 376082779e6a496a92c04b5372816a43
msgid "This webhook was not found."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:101
#: b1376346972d42b1a3c9e82098f6c2ee
msgid "The authorization token for the webhook is incorrect."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:102
#: c6b8b47999374b87931c77b60a96a2d4
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.send_followup:104
#: f003bf666ab2407abfdd4416f87c1363
msgid "Either there was no token associated with this webhook, ``ephemeral`` was passed     with the improper webhook type, there was no state attached with this webhook when     giving it a view, you specified both ``thread_name`` and ``thread``, or ``applied_tags``     was passed with neither ``thread_name`` nor ``thread`` specified."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:3
#: eafc302ded3343bfa7c60d20da0291cb
msgid "Defers the interaction response."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:5
#: df92e0185cc94f369a94a9f7c3e4d4f4
msgid "This is typically used when the interaction is acknowledged and a secondary action will be done later."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:8
#: 820010f987a64387a35e5c0080467f76
msgid "This can only be used with the following interaction types:"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:10
#: 2178e13bd96246b2b10c95327192cd9d
msgid ":attr:`InteractionType.application_command`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:11
#: 1456b98d7fe04bd6867edc1cdb4abd0c
msgid ":attr:`InteractionType.component`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:12
#: 29822a6142e9410ca2d1d9d83a96fd15
msgid ":attr:`InteractionType.modal_submit`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:15
#: 14e0ba720bca419b8e522b34e997f1b0
msgid "The follow-up response will also be non-ephemeral if the `ephemeral` argument is ``False``, and ephemeral if ``True``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:19
#: f1f0c011e33343a69a5fe55bee726d78
msgid "Indicates whether the deferred message will eventually be ephemeral. This only applies to :attr:`InteractionType.application_command` interactions, or if ``invisible`` is ``False``."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:24
#: d756d7d3612f4083829475d5026de3f2
msgid "Indicates whether the deferred type should be 'invisible' (:attr:`InteractionResponseType.deferred_message_update`) instead of 'thinking' (:attr:`InteractionResponseType.deferred_channel_message`). In the Discord UI, this is represented as the bot thinking of a response. You must eventually send a followup message via :attr:`Interaction.followup` to make this thinking state go away. This parameter does not apply to interactions of type :attr:`InteractionType.application_command`."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.defer:32
#: a14d5150e093472dbe422e4c56667fcf
msgid "Deferring the interaction failed."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.followup:1
#: 7cf892fc660444d698051a80c722de6b
msgid "Returns the followup webhook for followup interactions."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.delete:3
#: 4b5c695549c54ef7ab2bb8aa2415c8f5
msgid "Deletes the original interaction response message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.delete:5
#: 282a94146db246ec9bceb2e4b6fefed7
msgid "This is a higher level interface to :meth:`Interaction.delete_original_response`."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.delete:8
#: 394d4b023ed84168a9f8389747a7b41b
msgid "If provided, the number of seconds to wait before deleting the message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.delete:11
#: ea3684f1004940f3b8e8de7102aefd59
msgid "Deleting the message failed."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.ApplicationContext.delete:12
#: 6891dda8e4994181b173976f49c55d59
msgid "You do not have proper permissions to delete the message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:3
#: 6f30e222be6247b4ace76de5ba0c5b27
msgid "Edits the original interaction response message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:5
#: 5c47f45c0da14d5d9d7848955f02fb2f
msgid "This is a lower level interface to :meth:`InteractionMessage.edit` in case you do not want to fetch the message and save an HTTP request."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:8
#: 71a97a38704a49a2bec5f4c577e4fcf6
msgid "This method is also the only way to edit the original message if the message sent was ephemeral."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:12
#: f9e671739a04499897ad79ca3d4e41b2
msgid "The content to edit the message with or ``None`` to clear it."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:15
#: 0813010dcf904b128b2dc4d7167b3f0e
msgid "A list of embeds to edit the message with."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:18
#: c346ef612dc144f8aa1653c2ca3e6c3e
msgid "The embed to edit the message with. ``None`` suppresses the embeds. This should not be mixed with the ``embeds`` parameter."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:29
#: 8cf7f2b7a8294feabbba1e3be5da1c33
msgid "A list of attachments to keep in the message. If ``[]`` is passed then all attachments are removed."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:37
#: 6221bcc307ca47fd83865c20efddaf57
msgid "The updated view to update this message with. If ``None`` is passed then the view is removed."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:41
#: 828436be57f74170a414271192eb3539
msgid "If provided, the number of seconds to wait in the background before deleting the message we just edited. If the deletion fails, then it is silently ignored."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:46
#: cdfc2e90938c457f9ab2737ffab74a5c
msgid "Whether to suppress embeds for the message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:49
#: 9a308a4a2c34444995ab4570d2376b10
msgid "The newly edited message."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:50
#: 4904bcae5564406d9f48ae6887540994
msgid ":class:`InteractionMessage`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:52
#: 332fa654af644c9aafa1d235b4466dec
msgid "Editing the message failed."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:53
#: 7cd8271b907b4b21854be77974f8ce05
msgid "Edited a message that is not yours."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.edit:54
#: 1e9fa9fbd69e4e4cb54484433e9101cf
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.ApplicationContext.cog:1
#: ../../../discord/commands/context.py:docstring of discord.AutocompleteContext.cog:1
#: 6dda90c3ae154814a40ba59bed13deb3
#: 6dda90c3ae154814a40ba59bed13deb3
msgid "Returns the cog associated with this context's command. ``None`` if it does not exist."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:1
#: 48def13f6174498892c7611747545cd9
msgid "Represents context for a slash command's option autocomplete."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:3
#: d78982df0e9a4cd99797b03021587f19
msgid "This class is not created manually and is instead passed to an :class:`.Option`'s autocomplete callback."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:15
#: ee98d3f82d63421bb90c23a0c914479a
msgid "The interaction object that invoked the autocomplete."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:27
#: 59a530105ac6485197b9bf2cefe8e50a
msgid "The option the user is currently typing."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:29
#: 326327f43433488a8304984c578d455b
msgid ":class:`.Option`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:33
#: 59f72990e3c14649938ce6341ee0005f
msgid "The content of the focused option."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:35
#: 58801cfd58d44239a96812222e3aa822
msgid ":class:`.str`"
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:39
#: 4c4055bc1b5242568ae0246a1a990d13
msgid "A name to value mapping of the options that the user has selected before this option."
msgstr ""

#: ../../../discord/commands/context.py:docstring of discord.commands.context.AutocompleteContext:41
#: 808133417bf3421090c005298b52fda3
msgid "Dict[:class:`str`, Any]"
msgstr ""
